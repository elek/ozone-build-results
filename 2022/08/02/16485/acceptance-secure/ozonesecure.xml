<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.6.9 on linux)" generated="20220802 01:35:24.238" rpa="false" schemaversion="3">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:00.327" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:00.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:00.330" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:09:00.323" endtime="20220802 01:09:00.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:00.331" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:09:00.331" endtime="20220802 01:09:00.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:00.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:00.332" endtime="20220802 01:09:00.332"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.322" endtime="20220802 01:09:00.332"/>
</kw>
<msg timestamp="20220802 01:09:00.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:00.322" endtime="20220802 01:09:00.335"/>
</kw>
<msg timestamp="20220802 01:09:00.335" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20220802 01:09:00.322" endtime="20220802 01:09:00.335"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:00.339" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:00.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:00.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:09:00.337" endtime="20220802 01:09:00.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:00.350" level="INFO"/>
<status status="PASS" starttime="20220802 01:09:00.349" endtime="20220802 01:09:00.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:00.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:00.350" endtime="20220802 01:09:00.351"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.337" endtime="20220802 01:09:00.351"/>
</kw>
<msg timestamp="20220802 01:09:00.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:00.336" endtime="20220802 01:09:00.351"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.335" endtime="20220802 01:09:00.351"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.335" endtime="20220802 01:09:00.351"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.321" endtime="20220802 01:09:00.352"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.321" endtime="20220802 01:09:00.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:00.355" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:00.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:00.519" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220802 01:09:00.353" endtime="20220802 01:09:00.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:00.520" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Tue, 02 Aug 2022 01:09:00 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLWYbY6rOdP24VbeXDRkgDVrFHw2ZYNeMMyPPzYyvWFZCffa+IT7u+h9ZyodS222aZeqN6FAnVfFYcELpZC2YknK3
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1659438540490&amp;s=nkMiO2F7LitOp+yLpfgHqBHzE2A2XBNngnzweU7ujfg="; Path=/; HttpOnly
Last-Modified: Tue, 02 Aug 2022 00:52:46 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20220802 01:09:00.519" endtime="20220802 01:09:00.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:00.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:00.520" endtime="20220802 01:09:00.520"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.353" endtime="20220802 01:09:00.521"/>
</kw>
<msg timestamp="20220802 01:09:00.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:00.352" endtime="20220802 01:09:00.521"/>
</kw>
<msg timestamp="20220802 01:09:00.521" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220802 01:09:00.352" endtime="20220802 01:09:00.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:00.522" endtime="20220802 01:09:00.522"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:09:00.320" endtime="20220802 01:09:00.522"/>
</test>
<test id="s1-s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:00.528" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:00.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:00.532" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:09:00.526" endtime="20220802 01:09:00.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:00.533" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:09:00.532" endtime="20220802 01:09:00.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:00.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:00.533" endtime="20220802 01:09:00.534"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.526" endtime="20220802 01:09:00.534"/>
</kw>
<msg timestamp="20220802 01:09:00.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:00.526" endtime="20220802 01:09:00.534"/>
</kw>
<msg timestamp="20220802 01:09:00.534" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:09:00.525" endtime="20220802 01:09:00.534"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:09:00.536" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:09:00.535" endtime="20220802 01:09:00.536"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:00.539" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:00.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:00.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:09:00.538" endtime="20220802 01:09:00.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:00.553" level="INFO"/>
<status status="PASS" starttime="20220802 01:09:00.552" endtime="20220802 01:09:00.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:00.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:00.553" endtime="20220802 01:09:00.554"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.537" endtime="20220802 01:09:00.554"/>
</kw>
<msg timestamp="20220802 01:09:00.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:00.537" endtime="20220802 01:09:00.554"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.537" endtime="20220802 01:09:00.554"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.536" endtime="20220802 01:09:00.554"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.525" endtime="20220802 01:09:00.555"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.524" endtime="20220802 01:09:00.555"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:09:00.555" level="INFO">${random} = Up6e3cPkQK</msg>
<status status="PASS" starttime="20220802 01:09:00.555" endtime="20220802 01:09:00.555"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:00.560" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p Up6e3cPkQK  2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:08.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:08.713" level="INFO">${output} = 2022-08-02 01:09:02,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:09:02,590 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220802 01:09:00.558" endtime="20220802 01:09:08.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:08.714" level="INFO">2022-08-02 01:09:02,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:09:02,590 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-08-02 01:09:02,593 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-08-02 01:09:02,730 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Up6e3cPkQK
2022-08-02 01:09:02,812 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:09:03,827 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:09:04,186 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2022-08-02 01:09:04,235 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-08-02 01:09:04,827 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:09:05,085 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-08-02 01:09:05,415 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-08-02 01:09:05,828 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:09:06,828 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:09:07,829 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-08-02 01:09:08,366 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3318.803755, max=3318.803755, mean=3318.803755, stddev=0.0, median=3318.803755, p75=3318.803755, p95=3318.803755, p98=3318.803755, p99=3318.803755, p999=3318.803755, mean_rate=0.2450951048626012, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-08-02 01:09:08,366 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-08-02 01:09:08,367 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-08-02 01:09:08,367 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220802 01:09:08.714" endtime="20220802 01:09:08.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:08.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:08.715" endtime="20220802 01:09:08.715"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.557" endtime="20220802 01:09:08.715"/>
</kw>
<msg timestamp="20220802 01:09:08.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:00.557" endtime="20220802 01:09:08.716"/>
</kw>
<msg timestamp="20220802 01:09:08.716" level="INFO">${result} = 2022-08-02 01:09:02,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:09:02,590 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220802 01:09:00.557" endtime="20220802 01:09:08.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:08.716" endtime="20220802 01:09:08.717"/>
</kw>
<status status="PASS" starttime="20220802 01:09:00.556" endtime="20220802 01:09:08.717"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:08.721" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p Up6e3cPkQK  2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:15.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:15.310" level="INFO">${output} = 2022-08-02 01:09:10,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:09:10,697 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220802 01:09:08.719" endtime="20220802 01:09:15.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:15.311" level="INFO">2022-08-02 01:09:10,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:09:10,697 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-08-02 01:09:10,697 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-08-02 01:09:10,867 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Up6e3cPkQK
2022-08-02 01:09:10,958 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:09:11,972 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:09:12,817 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-08-02 01:09:12,973 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:09:13,973 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-08-02 01:09:14,949 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=51.555081, max=51.555081, mean=51.555081, stddev=0.0, median=51.555081, p75=51.555081, p95=51.555081, p98=51.555081, p99=51.555081, p999=51.555081, mean_rate=0.8965435176732149, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-08-02 01:09:14,950 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-08-02 01:09:14,950 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-08-02 01:09:14,950 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220802 01:09:15.310" endtime="20220802 01:09:15.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:15.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:15.311" endtime="20220802 01:09:15.312"/>
</kw>
<status status="PASS" starttime="20220802 01:09:08.719" endtime="20220802 01:09:15.312"/>
</kw>
<msg timestamp="20220802 01:09:15.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:08.719" endtime="20220802 01:09:15.313"/>
</kw>
<msg timestamp="20220802 01:09:15.313" level="INFO">${result} = 2022-08-02 01:09:10,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:09:10,697 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220802 01:09:08.718" endtime="20220802 01:09:15.313"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:15.313" endtime="20220802 01:09:15.313"/>
</kw>
<status status="PASS" starttime="20220802 01:09:08.717" endtime="20220802 01:09:15.314"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:09:00.524" endtime="20220802 01:09:15.314"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220802 01:09:00.290" endtime="20220802 01:09:15.315"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM" line="22">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:15.324" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:16.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:16.730" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220802 01:09:15.322" endtime="20220802 01:09:16.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:16.731" level="INFO">om</msg>
<status status="PASS" starttime="20220802 01:09:16.731" endtime="20220802 01:09:16.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:16.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:16.732" endtime="20220802 01:09:16.732"/>
</kw>
<status status="PASS" starttime="20220802 01:09:15.322" endtime="20220802 01:09:16.732"/>
</kw>
<msg timestamp="20220802 01:09:16.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:15.322" endtime="20220802 01:09:16.733"/>
</kw>
<msg timestamp="20220802 01:09:16.733" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220802 01:09:15.320" endtime="20220802 01:09:16.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:16.733" endtime="20220802 01:09:16.734"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:16.737" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:18.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:18.188" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220802 01:09:16.735" endtime="20220802 01:09:18.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:18.189" level="INFO">om</msg>
<status status="PASS" starttime="20220802 01:09:18.189" endtime="20220802 01:09:18.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:18.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:18.189" endtime="20220802 01:09:18.190"/>
</kw>
<status status="PASS" starttime="20220802 01:09:16.734" endtime="20220802 01:09:18.190"/>
</kw>
<msg timestamp="20220802 01:09:18.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:16.734" endtime="20220802 01:09:18.191"/>
</kw>
<msg timestamp="20220802 01:09:18.191" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220802 01:09:16.734" endtime="20220802 01:09:18.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:18.191" endtime="20220802 01:09:18.191"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:09:15.320" endtime="20220802 01:09:18.191"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:18.196" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:19.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:19.627" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:09:18.194" endtime="20220802 01:09:19.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:19.629" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:09:19.628" endtime="20220802 01:09:19.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:19.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:19.629" endtime="20220802 01:09:19.629"/>
</kw>
<status status="PASS" starttime="20220802 01:09:18.193" endtime="20220802 01:09:19.630"/>
</kw>
<msg timestamp="20220802 01:09:19.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:18.193" endtime="20220802 01:09:19.630"/>
</kw>
<msg timestamp="20220802 01:09:19.630" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220802 01:09:18.193" endtime="20220802 01:09:19.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:19.630" endtime="20220802 01:09:19.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:19.634" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:20.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:20.900" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:09:19.632" endtime="20220802 01:09:20.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:20.901" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:09:20.900" endtime="20220802 01:09:20.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:20.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:20.901" endtime="20220802 01:09:20.902"/>
</kw>
<status status="PASS" starttime="20220802 01:09:19.631" endtime="20220802 01:09:20.902"/>
</kw>
<msg timestamp="20220802 01:09:20.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:19.631" endtime="20220802 01:09:20.902"/>
</kw>
<msg timestamp="20220802 01:09:20.903" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220802 01:09:19.631" endtime="20220802 01:09:20.903"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:20.903" endtime="20220802 01:09:20.903"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:09:18.192" endtime="20220802 01:09:20.903"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:20.907" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:22.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:22.031" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220802 01:09:20.906" endtime="20220802 01:09:22.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:22.033" level="INFO">om</msg>
<status status="PASS" starttime="20220802 01:09:22.032" endtime="20220802 01:09:22.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:22.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:22.033" endtime="20220802 01:09:22.033"/>
</kw>
<status status="PASS" starttime="20220802 01:09:20.905" endtime="20220802 01:09:22.034"/>
</kw>
<msg timestamp="20220802 01:09:22.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:20.905" endtime="20220802 01:09:22.034"/>
</kw>
<msg timestamp="20220802 01:09:22.034" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220802 01:09:20.905" endtime="20220802 01:09:22.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:22.034" endtime="20220802 01:09:22.035"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:22.035" endtime="20220802 01:09:22.035"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:22.038" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:23.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:23.252" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220802 01:09:22.036" endtime="20220802 01:09:23.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:23.253" level="INFO">om</msg>
<status status="PASS" starttime="20220802 01:09:23.252" endtime="20220802 01:09:23.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:23.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:23.253" endtime="20220802 01:09:23.254"/>
</kw>
<status status="PASS" starttime="20220802 01:09:22.036" endtime="20220802 01:09:23.254"/>
</kw>
<msg timestamp="20220802 01:09:23.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:22.036" endtime="20220802 01:09:23.254"/>
</kw>
<msg timestamp="20220802 01:09:23.255" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220802 01:09:22.035" endtime="20220802 01:09:23.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:23.255" endtime="20220802 01:09:23.255"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:23.255" endtime="20220802 01:09:23.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:09:20.904" endtime="20220802 01:09:23.256"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key" line="42">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:23.260" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:24.552" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:09:24.552" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220802 01:09:23.258" endtime="20220802 01:09:24.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:24.553" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220802 01:09:24.552" endtime="20220802 01:09:24.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:24.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:24.554" endtime="20220802 01:09:24.554"/>
</kw>
<msg timestamp="20220802 01:09:24.554" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220802 01:09:23.257" endtime="20220802 01:09:24.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:24.554" endtime="20220802 01:09:24.555"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:24.557" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:25.832" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:09:25.832" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220802 01:09:24.555" endtime="20220802 01:09:25.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:25.833" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220802 01:09:25.833" endtime="20220802 01:09:25.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:25.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:25.834" endtime="20220802 01:09:25.834"/>
</kw>
<msg timestamp="20220802 01:09:25.834" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220802 01:09:24.555" endtime="20220802 01:09:25.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:09:25.835" endtime="20220802 01:09:25.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:09:23.256" endtime="20220802 01:09:25.835"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20220802 01:09:15.316" endtime="20220802 01:09:25.836"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:09:25.851" level="INFO">${random} = 75415</msg>
<status status="PASS" starttime="20220802 01:09:25.850" endtime="20220802 01:09:25.851"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:09:25.852" level="INFO">${source} = 75415-source</msg>
<status status="PASS" starttime="20220802 01:09:25.851" endtime="20220802 01:09:25.852"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:09:25.853" level="INFO">${target} = 75415-target</msg>
<status status="PASS" starttime="20220802 01:09:25.852" endtime="20220802 01:09:25.853"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:25.856" level="INFO">Running command 'ozone sh volume create 75415-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:29.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:29.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:09:25.854" endtime="20220802 01:09:29.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:29.129" level="INFO"/>
<status status="PASS" starttime="20220802 01:09:29.129" endtime="20220802 01:09:29.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:29.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:29.129" endtime="20220802 01:09:29.130"/>
</kw>
<status status="PASS" starttime="20220802 01:09:25.854" endtime="20220802 01:09:29.130"/>
</kw>
<msg timestamp="20220802 01:09:29.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:25.854" endtime="20220802 01:09:29.130"/>
</kw>
<status status="PASS" starttime="20220802 01:09:25.853" endtime="20220802 01:09:29.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:29.134" level="INFO">Running command 'ozone sh volume create 75415-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:32.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:32.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:09:29.132" endtime="20220802 01:09:32.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:32.717" level="INFO"/>
<status status="PASS" starttime="20220802 01:09:32.716" endtime="20220802 01:09:32.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:32.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:32.717" endtime="20220802 01:09:32.717"/>
</kw>
<status status="PASS" starttime="20220802 01:09:29.132" endtime="20220802 01:09:32.718"/>
</kw>
<msg timestamp="20220802 01:09:32.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:29.131" endtime="20220802 01:09:32.718"/>
</kw>
<status status="PASS" starttime="20220802 01:09:29.131" endtime="20220802 01:09:32.718"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:32.722" level="INFO">Running command 'ozone sh bucket create 75415-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:36.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:36.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:09:32.720" endtime="20220802 01:09:36.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:36.245" level="INFO"/>
<status status="PASS" starttime="20220802 01:09:36.244" endtime="20220802 01:09:36.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:36.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:36.245" endtime="20220802 01:09:36.245"/>
</kw>
<status status="PASS" starttime="20220802 01:09:32.720" endtime="20220802 01:09:36.246"/>
</kw>
<msg timestamp="20220802 01:09:36.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:32.719" endtime="20220802 01:09:36.246"/>
</kw>
<status status="PASS" starttime="20220802 01:09:32.719" endtime="20220802 01:09:36.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:36.249" level="INFO">Running command 'ozone sh key put 75415-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:41.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:41.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:09:36.247" endtime="20220802 01:09:41.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:41.981" level="INFO"/>
<status status="PASS" starttime="20220802 01:09:41.981" endtime="20220802 01:09:41.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:41.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:41.981" endtime="20220802 01:09:41.982"/>
</kw>
<status status="PASS" starttime="20220802 01:09:36.247" endtime="20220802 01:09:41.982"/>
</kw>
<msg timestamp="20220802 01:09:41.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:36.247" endtime="20220802 01:09:41.983"/>
</kw>
<status status="PASS" starttime="20220802 01:09:36.247" endtime="20220802 01:09:41.983"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:41.986" level="INFO">Running command 'ozone sh bucket create 75415-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:45.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:45.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:09:41.984" endtime="20220802 01:09:45.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:45.704" level="INFO"/>
<status status="PASS" starttime="20220802 01:09:45.703" endtime="20220802 01:09:45.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:45.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:45.704" endtime="20220802 01:09:45.705"/>
</kw>
<status status="PASS" starttime="20220802 01:09:41.983" endtime="20220802 01:09:45.705"/>
</kw>
<msg timestamp="20220802 01:09:45.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:41.983" endtime="20220802 01:09:45.706"/>
</kw>
<status status="PASS" starttime="20220802 01:09:41.983" endtime="20220802 01:09:45.706"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:45.709" level="INFO">Running command 'ozone sh bucket link 75415-source/readable-bucket 75415-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:49.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:49.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:09:45.707" endtime="20220802 01:09:49.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:49.373" level="INFO"/>
<status status="PASS" starttime="20220802 01:09:49.373" endtime="20220802 01:09:49.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:49.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:49.373" endtime="20220802 01:09:49.374"/>
</kw>
<status status="PASS" starttime="20220802 01:09:45.707" endtime="20220802 01:09:49.374"/>
</kw>
<msg timestamp="20220802 01:09:49.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:45.707" endtime="20220802 01:09:49.375"/>
</kw>
<status status="PASS" starttime="20220802 01:09:45.706" endtime="20220802 01:09:49.375"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:49.378" level="INFO">Running command 'ozone sh bucket link 75415-source/readable-bucket 75415-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:52.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:52.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:09:49.376" endtime="20220802 01:09:52.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:52.945" level="INFO"/>
<status status="PASS" starttime="20220802 01:09:52.945" endtime="20220802 01:09:52.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:52.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:52.945" endtime="20220802 01:09:52.946"/>
</kw>
<status status="PASS" starttime="20220802 01:09:49.376" endtime="20220802 01:09:52.946"/>
</kw>
<msg timestamp="20220802 01:09:52.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:49.376" endtime="20220802 01:09:52.946"/>
</kw>
<status status="PASS" starttime="20220802 01:09:49.375" endtime="20220802 01:09:52.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:52.949" level="INFO">Running command 'ozone sh bucket link 75415-source/unreadable-bucket 75415-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:09:56.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:09:56.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:09:52.948" endtime="20220802 01:09:56.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:09:56.879" level="INFO"/>
<status status="PASS" starttime="20220802 01:09:56.879" endtime="20220802 01:09:56.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:09:56.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:09:56.880" endtime="20220802 01:09:56.880"/>
</kw>
<status status="PASS" starttime="20220802 01:09:52.947" endtime="20220802 01:09:56.881"/>
</kw>
<msg timestamp="20220802 01:09:56.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:52.947" endtime="20220802 01:09:56.883"/>
</kw>
<status status="PASS" starttime="20220802 01:09:52.947" endtime="20220802 01:09:56.884"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:09:56.909" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 75415-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:00.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:00.546" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:09:56.906" endtime="20220802 01:10:00.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:00.547" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:10:00.547" endtime="20220802 01:10:00.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:00.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:00.548" endtime="20220802 01:10:00.548"/>
</kw>
<status status="PASS" starttime="20220802 01:09:56.902" endtime="20220802 01:10:00.548"/>
</kw>
<msg timestamp="20220802 01:10:00.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:09:56.886" endtime="20220802 01:10:00.549"/>
</kw>
<status status="PASS" starttime="20220802 01:09:56.884" endtime="20220802 01:10:00.549"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:00.552" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 75415-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:04.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:04.116" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:10:00.550" endtime="20220802 01:10:04.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:04.117" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:10:04.116" endtime="20220802 01:10:04.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:04.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:04.117" endtime="20220802 01:10:04.118"/>
</kw>
<status status="PASS" starttime="20220802 01:10:00.550" endtime="20220802 01:10:04.118"/>
</kw>
<msg timestamp="20220802 01:10:04.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:00.549" endtime="20220802 01:10:04.118"/>
</kw>
<status status="PASS" starttime="20220802 01:10:00.549" endtime="20220802 01:10:04.119"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:04.122" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 75415-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:07.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:07.828" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:10:04.120" endtime="20220802 01:10:07.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:07.829" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:10:07.828" endtime="20220802 01:10:07.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:07.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:07.829" endtime="20220802 01:10:07.829"/>
</kw>
<status status="PASS" starttime="20220802 01:10:04.120" endtime="20220802 01:10:07.830"/>
</kw>
<msg timestamp="20220802 01:10:07.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:04.119" endtime="20220802 01:10:07.830"/>
</kw>
<status status="PASS" starttime="20220802 01:10:04.119" endtime="20220802 01:10:07.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:07.834" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 75415-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:11.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:11.424" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:10:07.832" endtime="20220802 01:10:11.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:11.425" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:10:11.424" endtime="20220802 01:10:11.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:11.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:11.425" endtime="20220802 01:10:11.426"/>
</kw>
<status status="PASS" starttime="20220802 01:10:07.831" endtime="20220802 01:10:11.426"/>
</kw>
<msg timestamp="20220802 01:10:11.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:07.831" endtime="20220802 01:10:11.426"/>
</kw>
<status status="PASS" starttime="20220802 01:10:07.830" endtime="20220802 01:10:11.427"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:11.430" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 75415-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:14.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:14.974" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:10:11.428" endtime="20220802 01:10:14.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:14.975" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:10:14.975" endtime="20220802 01:10:14.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:14.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:14.975" endtime="20220802 01:10:14.976"/>
</kw>
<status status="PASS" starttime="20220802 01:10:11.428" endtime="20220802 01:10:14.976"/>
</kw>
<msg timestamp="20220802 01:10:14.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:11.427" endtime="20220802 01:10:14.977"/>
</kw>
<status status="PASS" starttime="20220802 01:10:11.427" endtime="20220802 01:10:14.977"/>
</kw>
<status status="PASS" starttime="20220802 01:09:32.719" endtime="20220802 01:10:14.977"/>
</kw>
<status status="PASS" starttime="20220802 01:09:32.718" endtime="20220802 01:10:14.977"/>
</kw>
<status status="PASS" starttime="20220802 01:09:25.850" endtime="20220802 01:10:14.977"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket" line="73">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:14.983" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:14.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:14.986" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:10:14.981" endtime="20220802 01:10:14.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:14.987" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:10:14.987" endtime="20220802 01:10:14.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:14.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:14.987" endtime="20220802 01:10:14.988"/>
</kw>
<status status="PASS" starttime="20220802 01:10:14.980" endtime="20220802 01:10:14.988"/>
</kw>
<msg timestamp="20220802 01:10:14.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:14.980" endtime="20220802 01:10:14.989"/>
</kw>
<msg timestamp="20220802 01:10:14.989" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:10:14.979" endtime="20220802 01:10:14.989"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:10:14.990" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:10:14.989" endtime="20220802 01:10:14.991"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:14.994" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:15.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:15.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:14.992" endtime="20220802 01:10:15.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:15.075" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:15.075" endtime="20220802 01:10:15.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:15.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:15.075" endtime="20220802 01:10:15.076"/>
</kw>
<status status="PASS" starttime="20220802 01:10:14.992" endtime="20220802 01:10:15.076"/>
</kw>
<msg timestamp="20220802 01:10:15.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:14.992" endtime="20220802 01:10:15.077"/>
</kw>
<status status="PASS" starttime="20220802 01:10:14.991" endtime="20220802 01:10:15.077"/>
</kw>
<status status="PASS" starttime="20220802 01:10:14.991" endtime="20220802 01:10:15.077"/>
</kw>
<status status="PASS" starttime="20220802 01:10:14.979" endtime="20220802 01:10:15.077"/>
</kw>
<status status="PASS" starttime="20220802 01:10:14.978" endtime="20220802 01:10:15.077"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:15.081" level="INFO">Running command 'ozone sh bucket link 75415-source/no-such-bucket 75415-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:18.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:18.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:15.079" endtime="20220802 01:10:18.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:18.999" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:18.998" endtime="20220802 01:10:18.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:18.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:18.999" endtime="20220802 01:10:18.999"/>
</kw>
<status status="PASS" starttime="20220802 01:10:15.079" endtime="20220802 01:10:19.000"/>
</kw>
<msg timestamp="20220802 01:10:19.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:15.078" endtime="20220802 01:10:19.000"/>
</kw>
<status status="PASS" starttime="20220802 01:10:15.078" endtime="20220802 01:10:19.000"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:19.003" level="INFO">Running command 'ozone sh key list 75415-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:22.360" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:10:22.360" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220802 01:10:19.001" endtime="20220802 01:10:22.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:22.362" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220802 01:10:22.361" endtime="20220802 01:10:22.362"/>
</kw>
<msg timestamp="20220802 01:10:22.362" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220802 01:10:19.000" endtime="20220802 01:10:22.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:10:22.362" endtime="20220802 01:10:22.363"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:10:14.978" endtime="20220802 01:10:22.363"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough" line="78">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:22.368" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:22.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:22.371" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:10:22.366" endtime="20220802 01:10:22.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:22.372" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:10:22.371" endtime="20220802 01:10:22.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:22.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:22.372" endtime="20220802 01:10:22.373"/>
</kw>
<status status="PASS" starttime="20220802 01:10:22.366" endtime="20220802 01:10:22.373"/>
</kw>
<msg timestamp="20220802 01:10:22.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:22.366" endtime="20220802 01:10:22.373"/>
</kw>
<msg timestamp="20220802 01:10:22.374" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:10:22.365" endtime="20220802 01:10:22.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:10:22.374" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:10:22.374" endtime="20220802 01:10:22.374"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:22.377" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:22.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:22.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:22.376" endtime="20220802 01:10:22.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:22.454" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:22.453" endtime="20220802 01:10:22.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:22.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:22.455" endtime="20220802 01:10:22.455"/>
</kw>
<status status="PASS" starttime="20220802 01:10:22.375" endtime="20220802 01:10:22.455"/>
</kw>
<msg timestamp="20220802 01:10:22.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:22.375" endtime="20220802 01:10:22.456"/>
</kw>
<status status="PASS" starttime="20220802 01:10:22.375" endtime="20220802 01:10:22.456"/>
</kw>
<status status="PASS" starttime="20220802 01:10:22.374" endtime="20220802 01:10:22.456"/>
</kw>
<status status="PASS" starttime="20220802 01:10:22.365" endtime="20220802 01:10:22.457"/>
</kw>
<status status="PASS" starttime="20220802 01:10:22.365" endtime="20220802 01:10:22.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:22.461" level="INFO">Running command 'ozone sh bucket link 75415-source/bucket1 75415-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:26.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:26.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:22.459" endtime="20220802 01:10:26.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:26.148" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:26.147" endtime="20220802 01:10:26.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:26.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:26.148" endtime="20220802 01:10:26.148"/>
</kw>
<status status="PASS" starttime="20220802 01:10:22.458" endtime="20220802 01:10:26.149"/>
</kw>
<msg timestamp="20220802 01:10:26.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:22.458" endtime="20220802 01:10:26.149"/>
</kw>
<status status="PASS" starttime="20220802 01:10:22.457" endtime="20220802 01:10:26.149"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:26.152" level="INFO">Running command 'ozone sh bucket create 75415-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:29.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:29.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:26.150" endtime="20220802 01:10:29.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:29.536" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:29.535" endtime="20220802 01:10:29.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:29.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:29.536" endtime="20220802 01:10:29.536"/>
</kw>
<status status="PASS" starttime="20220802 01:10:26.150" endtime="20220802 01:10:29.537"/>
</kw>
<msg timestamp="20220802 01:10:29.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:26.150" endtime="20220802 01:10:29.537"/>
</kw>
<status status="PASS" starttime="20220802 01:10:26.149" endtime="20220802 01:10:29.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:29.540" level="INFO">Running command 'ozone sh key put 75415-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:35.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:35.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:29.538" endtime="20220802 01:10:35.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:35.282" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:35.281" endtime="20220802 01:10:35.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:35.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:35.282" endtime="20220802 01:10:35.282"/>
</kw>
<status status="PASS" starttime="20220802 01:10:29.538" endtime="20220802 01:10:35.283"/>
</kw>
<msg timestamp="20220802 01:10:35.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:29.538" endtime="20220802 01:10:35.283"/>
</kw>
<status status="PASS" starttime="20220802 01:10:29.537" endtime="20220802 01:10:35.283"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:10:35.285" level="INFO">${postfix} = 76858</msg>
<status status="PASS" starttime="20220802 01:10:35.284" endtime="20220802 01:10:35.285"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220802 01:10:35.285" level="INFO">${tmpfile} = /tmp/tempkey-76858</msg>
<status status="PASS" starttime="20220802 01:10:35.285" endtime="20220802 01:10:35.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:35.288" level="INFO">Running command 'ozone sh key get 75415-target/link1/key1 /tmp/tempkey-76858 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:40.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:40.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:35.286" endtime="20220802 01:10:40.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:40.560" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:40.559" endtime="20220802 01:10:40.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:40.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:40.560" endtime="20220802 01:10:40.561"/>
</kw>
<status status="PASS" starttime="20220802 01:10:35.286" endtime="20220802 01:10:40.561"/>
</kw>
<msg timestamp="20220802 01:10:40.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:35.286" endtime="20220802 01:10:40.562"/>
</kw>
<status status="PASS" starttime="20220802 01:10:35.285" endtime="20220802 01:10:40.563"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220802 01:10:40.565" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-76858 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:40.567" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220802 01:10:40.563" endtime="20220802 01:10:40.567"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:40.573" level="INFO">Running command 'rm -f /tmp/tempkey-76858 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:40.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:40.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:40.571" endtime="20220802 01:10:40.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:40.576" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:40.575" endtime="20220802 01:10:40.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:40.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:40.576" endtime="20220802 01:10:40.577"/>
</kw>
<status status="PASS" starttime="20220802 01:10:40.570" endtime="20220802 01:10:40.577"/>
</kw>
<msg timestamp="20220802 01:10:40.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:40.568" endtime="20220802 01:10:40.578"/>
</kw>
<status status="PASS" starttime="20220802 01:10:40.568" endtime="20220802 01:10:40.578"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220802 01:10:40.579" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220802 01:10:40.578" endtime="20220802 01:10:40.579"/>
</kw>
<msg timestamp="20220802 01:10:40.579" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220802 01:10:35.284" endtime="20220802 01:10:40.579"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220802 01:10:40.579" endtime="20220802 01:10:40.580"/>
</kw>
<status status="PASS" starttime="20220802 01:10:35.283" endtime="20220802 01:10:40.580"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:10:22.364" endtime="20220802 01:10:40.580"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough" line="84">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:40.587" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:40.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:40.590" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:10:40.585" endtime="20220802 01:10:40.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:40.591" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:10:40.591" endtime="20220802 01:10:40.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:40.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:40.591" endtime="20220802 01:10:40.592"/>
</kw>
<status status="PASS" starttime="20220802 01:10:40.585" endtime="20220802 01:10:40.592"/>
</kw>
<msg timestamp="20220802 01:10:40.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:40.584" endtime="20220802 01:10:40.592"/>
</kw>
<msg timestamp="20220802 01:10:40.593" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:10:40.584" endtime="20220802 01:10:40.593"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:10:40.593" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:10:40.593" endtime="20220802 01:10:40.593"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:40.597" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:40.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:40.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:40.595" endtime="20220802 01:10:40.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:40.604" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:40.603" endtime="20220802 01:10:40.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:40.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:40.604" endtime="20220802 01:10:40.605"/>
</kw>
<status status="PASS" starttime="20220802 01:10:40.595" endtime="20220802 01:10:40.605"/>
</kw>
<msg timestamp="20220802 01:10:40.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:40.594" endtime="20220802 01:10:40.605"/>
</kw>
<status status="PASS" starttime="20220802 01:10:40.594" endtime="20220802 01:10:40.606"/>
</kw>
<status status="PASS" starttime="20220802 01:10:40.593" endtime="20220802 01:10:40.606"/>
</kw>
<status status="PASS" starttime="20220802 01:10:40.584" endtime="20220802 01:10:40.606"/>
</kw>
<status status="PASS" starttime="20220802 01:10:40.583" endtime="20220802 01:10:40.606"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:40.609" level="INFO">Running command 'ozone sh key put 75415-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:46.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:46.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:40.607" endtime="20220802 01:10:46.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:46.625" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:46.624" endtime="20220802 01:10:46.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:46.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:46.625" endtime="20220802 01:10:46.626"/>
</kw>
<status status="PASS" starttime="20220802 01:10:40.607" endtime="20220802 01:10:46.626"/>
</kw>
<msg timestamp="20220802 01:10:46.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:40.606" endtime="20220802 01:10:46.626"/>
</kw>
<status status="PASS" starttime="20220802 01:10:40.606" endtime="20220802 01:10:46.626"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:10:46.628" level="INFO">${postfix} = 39104</msg>
<status status="PASS" starttime="20220802 01:10:46.628" endtime="20220802 01:10:46.628"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220802 01:10:46.629" level="INFO">${tmpfile} = /tmp/tempkey-39104</msg>
<status status="PASS" starttime="20220802 01:10:46.628" endtime="20220802 01:10:46.629"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:46.632" level="INFO">Running command 'ozone sh key get 75415-source/bucket1/key2 /tmp/tempkey-39104 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:51.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:51.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:46.630" endtime="20220802 01:10:51.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:51.741" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:51.740" endtime="20220802 01:10:51.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:51.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:51.741" endtime="20220802 01:10:51.742"/>
</kw>
<status status="PASS" starttime="20220802 01:10:46.629" endtime="20220802 01:10:51.742"/>
</kw>
<msg timestamp="20220802 01:10:51.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:46.629" endtime="20220802 01:10:51.743"/>
</kw>
<status status="PASS" starttime="20220802 01:10:46.629" endtime="20220802 01:10:51.743"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220802 01:10:51.746" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-39104 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:51.748" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220802 01:10:51.743" endtime="20220802 01:10:51.748"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:51.752" level="INFO">Running command 'rm -f /tmp/tempkey-39104 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:51.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:51.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:51.750" endtime="20220802 01:10:51.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:51.755" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:51.755" endtime="20220802 01:10:51.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:51.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:51.756" endtime="20220802 01:10:51.756"/>
</kw>
<status status="PASS" starttime="20220802 01:10:51.750" endtime="20220802 01:10:51.756"/>
</kw>
<msg timestamp="20220802 01:10:51.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:51.749" endtime="20220802 01:10:51.757"/>
</kw>
<status status="PASS" starttime="20220802 01:10:51.749" endtime="20220802 01:10:51.757"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220802 01:10:51.758" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220802 01:10:51.757" endtime="20220802 01:10:51.758"/>
</kw>
<msg timestamp="20220802 01:10:51.758" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220802 01:10:46.627" endtime="20220802 01:10:51.758"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220802 01:10:51.758" endtime="20220802 01:10:51.758"/>
</kw>
<status status="PASS" starttime="20220802 01:10:46.627" endtime="20220802 01:10:51.759"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:10:40.581" endtime="20220802 01:10:51.759"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough" line="88">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:51.764" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:51.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:51.768" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:10:51.763" endtime="20220802 01:10:51.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:51.769" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:10:51.768" endtime="20220802 01:10:51.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:51.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:51.769" endtime="20220802 01:10:51.770"/>
</kw>
<status status="PASS" starttime="20220802 01:10:51.762" endtime="20220802 01:10:51.770"/>
</kw>
<msg timestamp="20220802 01:10:51.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:51.762" endtime="20220802 01:10:51.771"/>
</kw>
<msg timestamp="20220802 01:10:51.771" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:10:51.761" endtime="20220802 01:10:51.771"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:10:51.771" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:10:51.771" endtime="20220802 01:10:51.772"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:51.776" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:51.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:51.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:51.774" endtime="20220802 01:10:51.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:51.784" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:51.784" endtime="20220802 01:10:51.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:51.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:51.784" endtime="20220802 01:10:51.785"/>
</kw>
<status status="PASS" starttime="20220802 01:10:51.773" endtime="20220802 01:10:51.785"/>
</kw>
<msg timestamp="20220802 01:10:51.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:51.773" endtime="20220802 01:10:51.786"/>
</kw>
<status status="PASS" starttime="20220802 01:10:51.772" endtime="20220802 01:10:51.786"/>
</kw>
<status status="PASS" starttime="20220802 01:10:51.772" endtime="20220802 01:10:51.786"/>
</kw>
<status status="PASS" starttime="20220802 01:10:51.761" endtime="20220802 01:10:51.786"/>
</kw>
<status status="PASS" starttime="20220802 01:10:51.761" endtime="20220802 01:10:51.786"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:51.789" level="INFO">Running command 'ozone sh key list 75415-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:55.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:55.750" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20220802 01:10:51.787" endtime="20220802 01:10:55.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:55.751" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20220802 01:10:55.750" endtime="20220802 01:10:55.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:55.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:55.751" endtime="20220802 01:10:55.752"/>
</kw>
<status status="PASS" starttime="20220802 01:10:51.787" endtime="20220802 01:10:55.752"/>
</kw>
<msg timestamp="20220802 01:10:55.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:51.787" endtime="20220802 01:10:55.752"/>
</kw>
<msg timestamp="20220802 01:10:55.752" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20220802 01:10:51.786" endtime="20220802 01:10:55.752"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:55.756" level="INFO">Running command 'ozone sh key list 75415-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:59.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:59.580" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20220802 01:10:55.754" endtime="20220802 01:10:59.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:59.581" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20220802 01:10:59.581" endtime="20220802 01:10:59.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:59.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:59.582" endtime="20220802 01:10:59.582"/>
</kw>
<status status="PASS" starttime="20220802 01:10:55.753" endtime="20220802 01:10:59.582"/>
</kw>
<msg timestamp="20220802 01:10:59.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:55.753" endtime="20220802 01:10:59.583"/>
</kw>
<msg timestamp="20220802 01:10:59.583" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20220802 01:10:55.753" endtime="20220802 01:10:59.583"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:10:59.583" endtime="20220802 01:10:59.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:10:59.584" endtime="20220802 01:10:59.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:10:59.584" endtime="20220802 01:10:59.584"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:10:51.760" endtime="20220802 01:10:59.585"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough" line="95">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:59.590" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:59.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:59.593" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:10:59.588" endtime="20220802 01:10:59.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:59.594" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:10:59.593" endtime="20220802 01:10:59.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:59.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:59.594" endtime="20220802 01:10:59.595"/>
</kw>
<status status="PASS" starttime="20220802 01:10:59.587" endtime="20220802 01:10:59.595"/>
</kw>
<msg timestamp="20220802 01:10:59.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:59.587" endtime="20220802 01:10:59.596"/>
</kw>
<msg timestamp="20220802 01:10:59.596" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:10:59.587" endtime="20220802 01:10:59.596"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:10:59.596" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:10:59.596" endtime="20220802 01:10:59.596"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:59.599" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:10:59.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:10:59.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:59.598" endtime="20220802 01:10:59.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:10:59.606" level="INFO"/>
<status status="PASS" starttime="20220802 01:10:59.606" endtime="20220802 01:10:59.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:10:59.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:10:59.607" endtime="20220802 01:10:59.607"/>
</kw>
<status status="PASS" starttime="20220802 01:10:59.597" endtime="20220802 01:10:59.607"/>
</kw>
<msg timestamp="20220802 01:10:59.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:59.597" endtime="20220802 01:10:59.608"/>
</kw>
<status status="PASS" starttime="20220802 01:10:59.597" endtime="20220802 01:10:59.608"/>
</kw>
<status status="PASS" starttime="20220802 01:10:59.596" endtime="20220802 01:10:59.608"/>
</kw>
<status status="PASS" starttime="20220802 01:10:59.586" endtime="20220802 01:10:59.608"/>
</kw>
<status status="PASS" starttime="20220802 01:10:59.586" endtime="20220802 01:10:59.608"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:10:59.612" level="INFO">Running command 'ozone sh key delete 75415-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:03.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:03.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:10:59.609" endtime="20220802 01:11:03.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:03.081" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:03.081" endtime="20220802 01:11:03.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:03.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:03.082" endtime="20220802 01:11:03.082"/>
</kw>
<status status="PASS" starttime="20220802 01:10:59.609" endtime="20220802 01:11:03.082"/>
</kw>
<msg timestamp="20220802 01:11:03.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:10:59.609" endtime="20220802 01:11:03.083"/>
</kw>
<status status="PASS" starttime="20220802 01:10:59.608" endtime="20220802 01:11:03.083"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:03.086" level="INFO">Running command 'ozone sh key list 75415-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:06.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:06.737" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220802 01:11:03.084" endtime="20220802 01:11:06.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:06.738" level="INFO">key1</msg>
<status status="PASS" starttime="20220802 01:11:06.738" endtime="20220802 01:11:06.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:06.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:06.738" endtime="20220802 01:11:06.739"/>
</kw>
<status status="PASS" starttime="20220802 01:11:03.084" endtime="20220802 01:11:06.739"/>
</kw>
<msg timestamp="20220802 01:11:06.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:03.084" endtime="20220802 01:11:06.740"/>
</kw>
<msg timestamp="20220802 01:11:06.740" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20220802 01:11:03.083" endtime="20220802 01:11:06.740"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:06.740" endtime="20220802 01:11:06.740"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:10:59.585" endtime="20220802 01:11:06.741"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links" line="100">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:06.746" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:06.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:06.750" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:11:06.744" endtime="20220802 01:11:06.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:06.751" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:11:06.750" endtime="20220802 01:11:06.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:06.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:06.751" endtime="20220802 01:11:06.751"/>
</kw>
<status status="PASS" starttime="20220802 01:11:06.744" endtime="20220802 01:11:06.751"/>
</kw>
<msg timestamp="20220802 01:11:06.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:06.744" endtime="20220802 01:11:06.752"/>
</kw>
<msg timestamp="20220802 01:11:06.752" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:11:06.743" endtime="20220802 01:11:06.752"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:11:06.753" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:11:06.752" endtime="20220802 01:11:06.753"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:06.756" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:06.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:06.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:06.754" endtime="20220802 01:11:06.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:06.764" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:06.763" endtime="20220802 01:11:06.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:06.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:06.764" endtime="20220802 01:11:06.764"/>
</kw>
<status status="PASS" starttime="20220802 01:11:06.754" endtime="20220802 01:11:06.765"/>
</kw>
<msg timestamp="20220802 01:11:06.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:06.754" endtime="20220802 01:11:06.765"/>
</kw>
<status status="PASS" starttime="20220802 01:11:06.753" endtime="20220802 01:11:06.765"/>
</kw>
<status status="PASS" starttime="20220802 01:11:06.753" endtime="20220802 01:11:06.765"/>
</kw>
<status status="PASS" starttime="20220802 01:11:06.743" endtime="20220802 01:11:06.765"/>
</kw>
<status status="PASS" starttime="20220802 01:11:06.742" endtime="20220802 01:11:06.766"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:06.768" level="INFO">Running command 'ozone sh bucket list 75415-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:10.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:10.460" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220802 01:11:06.767" endtime="20220802 01:11:10.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:10.461" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:10:18.822Z",
  "modificationTime" : "2022-08-02T01:10:18.822Z",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:09:56.716Z",
  "modificationTime" : "2022-08-02T01:10:14.916Z",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:10:25.990Z",
  "modificationTime" : "2022-08-02T01:10:25.990Z",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:09:49.226Z",
  "modificationTime" : "2022-08-02T01:10:11.370Z",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:09:52.795Z",
  "modificationTime" : "2022-08-02T01:09:52.795Z",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220802 01:11:10.460" endtime="20220802 01:11:10.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:10.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:10.461" endtime="20220802 01:11:10.462"/>
</kw>
<status status="PASS" starttime="20220802 01:11:06.766" endtime="20220802 01:11:10.462"/>
</kw>
<msg timestamp="20220802 01:11:10.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:06.766" endtime="20220802 01:11:10.462"/>
</kw>
<msg timestamp="20220802 01:11:10.463" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220802 01:11:06.766" endtime="20220802 01:11:10.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:10.463" endtime="20220802 01:11:10.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:10.463" endtime="20220802 01:11:10.463"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:11:06.742" endtime="20220802 01:11:10.464"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:10.468" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:10.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:10.471" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:11:10.467" endtime="20220802 01:11:10.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:10.472" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:11:10.472" endtime="20220802 01:11:10.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:10.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:10.472" endtime="20220802 01:11:10.473"/>
</kw>
<status status="PASS" starttime="20220802 01:11:10.466" endtime="20220802 01:11:10.473"/>
</kw>
<msg timestamp="20220802 01:11:10.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:10.466" endtime="20220802 01:11:10.474"/>
</kw>
<msg timestamp="20220802 01:11:10.474" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:11:10.466" endtime="20220802 01:11:10.474"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:11:10.474" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:11:10.474" endtime="20220802 01:11:10.474"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:10.478" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:10.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:10.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:10.476" endtime="20220802 01:11:10.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:10.485" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:10.485" endtime="20220802 01:11:10.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:10.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:10.485" endtime="20220802 01:11:10.486"/>
</kw>
<status status="PASS" starttime="20220802 01:11:10.476" endtime="20220802 01:11:10.486"/>
</kw>
<msg timestamp="20220802 01:11:10.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:10.475" endtime="20220802 01:11:10.487"/>
</kw>
<status status="PASS" starttime="20220802 01:11:10.475" endtime="20220802 01:11:10.487"/>
</kw>
<status status="PASS" starttime="20220802 01:11:10.474" endtime="20220802 01:11:10.487"/>
</kw>
<status status="PASS" starttime="20220802 01:11:10.465" endtime="20220802 01:11:10.487"/>
</kw>
<status status="PASS" starttime="20220802 01:11:10.465" endtime="20220802 01:11:10.487"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:10.490" level="INFO">Running command 'ozone sh bucket info 75415-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:13.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:13.998" level="INFO">${output} = {
  "volumeName" : "75415-target",
  "bucketName" : "link1",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-02T01:10:25.990Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220802 01:11:10.489" endtime="20220802 01:11:13.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:13.999" level="INFO">{
  "volumeName" : "75415-target",
  "bucketName" : "link1",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-02T01:10:25.990Z",
  "modificationTime" : "2022-08-02T01:10:25.990Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20220802 01:11:13.998" endtime="20220802 01:11:13.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:14.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:13.999" endtime="20220802 01:11:14.000"/>
</kw>
<status status="PASS" starttime="20220802 01:11:10.488" endtime="20220802 01:11:14.000"/>
</kw>
<msg timestamp="20220802 01:11:14.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:10.488" endtime="20220802 01:11:14.001"/>
</kw>
<msg timestamp="20220802 01:11:14.001" level="INFO">${result} = {
  "volumeName" : "75415-target",
  "bucketName" : "link1",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-02T01:10:25.990Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220802 01:11:10.487" endtime="20220802 01:11:14.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:14.001" endtime="20220802 01:11:14.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:14.002" endtime="20220802 01:11:14.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:14.002" endtime="20220802 01:11:14.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:14.002" endtime="20220802 01:11:14.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:14.003" endtime="20220802 01:11:14.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:14.003" endtime="20220802 01:11:14.003"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:14.004" endtime="20220802 01:11:14.004"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:11:10.464" endtime="20220802 01:11:14.004"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs" line="115">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:14.009" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:14.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:14.012" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:11:14.007" endtime="20220802 01:11:14.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:14.013" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:11:14.012" endtime="20220802 01:11:14.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:14.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:14.013" endtime="20220802 01:11:14.013"/>
</kw>
<status status="PASS" starttime="20220802 01:11:14.007" endtime="20220802 01:11:14.014"/>
</kw>
<msg timestamp="20220802 01:11:14.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:14.006" endtime="20220802 01:11:14.014"/>
</kw>
<msg timestamp="20220802 01:11:14.014" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:11:14.006" endtime="20220802 01:11:14.014"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:11:14.015" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:11:14.014" endtime="20220802 01:11:14.015"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:14.018" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:14.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:14.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:14.017" endtime="20220802 01:11:14.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:14.026" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:14.025" endtime="20220802 01:11:14.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:14.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:14.026" endtime="20220802 01:11:14.026"/>
</kw>
<status status="PASS" starttime="20220802 01:11:14.016" endtime="20220802 01:11:14.026"/>
</kw>
<msg timestamp="20220802 01:11:14.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:14.016" endtime="20220802 01:11:14.027"/>
</kw>
<status status="PASS" starttime="20220802 01:11:14.015" endtime="20220802 01:11:14.027"/>
</kw>
<status status="PASS" starttime="20220802 01:11:14.015" endtime="20220802 01:11:14.027"/>
</kw>
<status status="PASS" starttime="20220802 01:11:14.006" endtime="20220802 01:11:14.027"/>
</kw>
<status status="PASS" starttime="20220802 01:11:14.005" endtime="20220802 01:11:14.027"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:14.030" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 75415-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:17.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:17.747" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:11:14.029" endtime="20220802 01:11:17.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:17.749" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:11:17.748" endtime="20220802 01:11:17.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:17.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:17.749" endtime="20220802 01:11:17.750"/>
</kw>
<status status="PASS" starttime="20220802 01:11:14.028" endtime="20220802 01:11:17.750"/>
</kw>
<msg timestamp="20220802 01:11:17.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:14.028" endtime="20220802 01:11:17.750"/>
</kw>
<status status="PASS" starttime="20220802 01:11:14.027" endtime="20220802 01:11:17.751"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:17.756" level="INFO">Running command 'ozone sh bucket getacl 75415-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:21.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:21.550" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220802 01:11:17.753" endtime="20220802 01:11:21.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:21.551" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220802 01:11:21.551" endtime="20220802 01:11:21.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:21.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:21.552" endtime="20220802 01:11:21.552"/>
</kw>
<status status="PASS" starttime="20220802 01:11:17.752" endtime="20220802 01:11:21.552"/>
</kw>
<msg timestamp="20220802 01:11:21.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:17.752" endtime="20220802 01:11:21.553"/>
</kw>
<msg timestamp="20220802 01:11:21.553" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220802 01:11:17.751" endtime="20220802 01:11:21.553"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:11:21.554" endtime="20220802 01:11:21.554"/>
</kw>
<status status="PASS" starttime="20220802 01:11:17.751" endtime="20220802 01:11:21.554"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:21.559" level="INFO">Running command 'ozone sh bucket getacl 75415-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:25.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:25.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:21.557" endtime="20220802 01:11:25.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:25.082" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:25.082" endtime="20220802 01:11:25.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:25.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:25.083" endtime="20220802 01:11:25.083"/>
</kw>
<status status="PASS" starttime="20220802 01:11:21.557" endtime="20220802 01:11:25.083"/>
</kw>
<msg timestamp="20220802 01:11:25.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:21.556" endtime="20220802 01:11:25.084"/>
</kw>
<msg timestamp="20220802 01:11:25.084" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220802 01:11:21.556" endtime="20220802 01:11:25.084"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:11:25.084" endtime="20220802 01:11:25.084"/>
</kw>
<status status="PASS" starttime="20220802 01:11:21.554" endtime="20220802 01:11:25.085"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:25.090" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 75415-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:28.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:28.897" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:11:25.086" endtime="20220802 01:11:28.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:28.898" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:11:28.897" endtime="20220802 01:11:28.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:28.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:28.898" endtime="20220802 01:11:28.899"/>
</kw>
<status status="PASS" starttime="20220802 01:11:25.086" endtime="20220802 01:11:28.899"/>
</kw>
<msg timestamp="20220802 01:11:28.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:25.085" endtime="20220802 01:11:28.899"/>
</kw>
<status status="PASS" starttime="20220802 01:11:25.085" endtime="20220802 01:11:28.899"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:28.904" level="INFO">Running command 'ozone sh bucket getacl 75415-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:32.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:32.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:28.902" endtime="20220802 01:11:32.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:32.448" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:32.447" endtime="20220802 01:11:32.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:32.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:32.448" endtime="20220802 01:11:32.448"/>
</kw>
<status status="PASS" starttime="20220802 01:11:28.902" endtime="20220802 01:11:32.448"/>
</kw>
<msg timestamp="20220802 01:11:32.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:28.901" endtime="20220802 01:11:32.449"/>
</kw>
<msg timestamp="20220802 01:11:32.449" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220802 01:11:28.901" endtime="20220802 01:11:32.449"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:11:32.449" endtime="20220802 01:11:32.450"/>
</kw>
<status status="PASS" starttime="20220802 01:11:28.900" endtime="20220802 01:11:32.450"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:32.454" level="INFO">Running command 'ozone sh bucket getacl 75415-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:36.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:36.125" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20220802 01:11:32.452" endtime="20220802 01:11:36.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:36.126" level="INFO">READ</msg>
<status status="PASS" starttime="20220802 01:11:36.125" endtime="20220802 01:11:36.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:36.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:36.126" endtime="20220802 01:11:36.127"/>
</kw>
<status status="PASS" starttime="20220802 01:11:32.451" endtime="20220802 01:11:36.127"/>
</kw>
<msg timestamp="20220802 01:11:36.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:32.451" endtime="20220802 01:11:36.127"/>
</kw>
<msg timestamp="20220802 01:11:36.128" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20220802 01:11:32.450" endtime="20220802 01:11:36.128"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:11:36.128" endtime="20220802 01:11:36.128"/>
</kw>
<status status="PASS" starttime="20220802 01:11:32.450" endtime="20220802 01:11:36.128"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:11:14.005" endtime="20220802 01:11:36.129"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace" line="124">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:36.135" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:36.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:36.138" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:11:36.133" endtime="20220802 01:11:36.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:36.139" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:11:36.138" endtime="20220802 01:11:36.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:36.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:36.139" endtime="20220802 01:11:36.140"/>
</kw>
<status status="PASS" starttime="20220802 01:11:36.132" endtime="20220802 01:11:36.140"/>
</kw>
<msg timestamp="20220802 01:11:36.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:36.132" endtime="20220802 01:11:36.141"/>
</kw>
<msg timestamp="20220802 01:11:36.141" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:11:36.132" endtime="20220802 01:11:36.141"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:11:36.142" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:11:36.141" endtime="20220802 01:11:36.142"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:36.145" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:36.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:36.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:36.143" endtime="20220802 01:11:36.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:36.153" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:36.153" endtime="20220802 01:11:36.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:36.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:36.153" endtime="20220802 01:11:36.154"/>
</kw>
<status status="PASS" starttime="20220802 01:11:36.143" endtime="20220802 01:11:36.154"/>
</kw>
<msg timestamp="20220802 01:11:36.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:36.143" endtime="20220802 01:11:36.155"/>
</kw>
<status status="PASS" starttime="20220802 01:11:36.142" endtime="20220802 01:11:36.155"/>
</kw>
<status status="PASS" starttime="20220802 01:11:36.142" endtime="20220802 01:11:36.155"/>
</kw>
<status status="PASS" starttime="20220802 01:11:36.131" endtime="20220802 01:11:36.155"/>
</kw>
<status status="PASS" starttime="20220802 01:11:36.131" endtime="20220802 01:11:36.155"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:36.158" level="INFO">Running command 'ozone sh bucket link 75415-source/bucket2 75415-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:40.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:40.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:36.157" endtime="20220802 01:11:40.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:40.057" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:40.056" endtime="20220802 01:11:40.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:40.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:40.057" endtime="20220802 01:11:40.058"/>
</kw>
<status status="PASS" starttime="20220802 01:11:36.156" endtime="20220802 01:11:40.058"/>
</kw>
<msg timestamp="20220802 01:11:40.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:36.156" endtime="20220802 01:11:40.059"/>
</kw>
<status status="PASS" starttime="20220802 01:11:36.155" endtime="20220802 01:11:40.059"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:40.062" level="INFO">Running command 'ozone sh bucket create 75415-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:43.656" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:11:43.656" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220802 01:11:40.059" endtime="20220802 01:11:43.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:43.657" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220802 01:11:43.656" endtime="20220802 01:11:43.657"/>
</kw>
<msg timestamp="20220802 01:11:43.657" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220802 01:11:40.059" endtime="20220802 01:11:43.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:43.658" endtime="20220802 01:11:43.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:43.661" level="INFO">Running command 'ozone sh bucket create 75415-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:47.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:47.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:43.659" endtime="20220802 01:11:47.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:47.580" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:47.580" endtime="20220802 01:11:47.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:47.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:47.581" endtime="20220802 01:11:47.581"/>
</kw>
<status status="PASS" starttime="20220802 01:11:43.659" endtime="20220802 01:11:47.582"/>
</kw>
<msg timestamp="20220802 01:11:47.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:43.659" endtime="20220802 01:11:47.582"/>
</kw>
<status status="PASS" starttime="20220802 01:11:43.658" endtime="20220802 01:11:47.582"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:47.585" level="INFO">Running command 'ozone sh bucket link 75415-source/bucket1 75415-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:50.964" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:11:50.964" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220802 01:11:47.583" endtime="20220802 01:11:50.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:50.965" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220802 01:11:50.965" endtime="20220802 01:11:50.966"/>
</kw>
<msg timestamp="20220802 01:11:50.966" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220802 01:11:47.582" endtime="20220802 01:11:50.966"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:50.966" endtime="20220802 01:11:50.966"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:11:36.130" endtime="20220802 01:11:50.967"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access" line="133">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:50.973" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:50.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:50.975" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:11:50.970" endtime="20220802 01:11:50.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:50.976" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:11:50.975" endtime="20220802 01:11:50.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:50.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:50.976" endtime="20220802 01:11:50.976"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.970" endtime="20220802 01:11:50.977"/>
</kw>
<msg timestamp="20220802 01:11:50.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:50.969" endtime="20220802 01:11:50.977"/>
</kw>
<msg timestamp="20220802 01:11:50.977" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:11:50.969" endtime="20220802 01:11:50.977"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:11:50.978" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:11:50.977" endtime="20220802 01:11:50.978"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:50.981" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:50.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:50.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:50.979" endtime="20220802 01:11:50.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:50.988" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:50.987" endtime="20220802 01:11:50.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:50.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:50.988" endtime="20220802 01:11:50.988"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.979" endtime="20220802 01:11:50.989"/>
</kw>
<msg timestamp="20220802 01:11:50.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:50.979" endtime="20220802 01:11:50.989"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.978" endtime="20220802 01:11:50.989"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.978" endtime="20220802 01:11:50.989"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.969" endtime="20220802 01:11:50.989"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.968" endtime="20220802 01:11:50.989"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:50.993" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:50.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:50.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:50.991" endtime="20220802 01:11:50.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:50.996" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:50.996" endtime="20220802 01:11:50.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:50.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:50.997" endtime="20220802 01:11:50.997"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.991" endtime="20220802 01:11:50.997"/>
</kw>
<msg timestamp="20220802 01:11:50.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:50.991" endtime="20220802 01:11:50.998"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.990" endtime="20220802 01:11:50.998"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:51.002" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:51.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:51.004" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:11:51.000" endtime="20220802 01:11:51.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:51.005" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:11:51.004" endtime="20220802 01:11:51.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:51.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:51.005" endtime="20220802 01:11:51.006"/>
</kw>
<status status="PASS" starttime="20220802 01:11:51.000" endtime="20220802 01:11:51.006"/>
</kw>
<msg timestamp="20220802 01:11:51.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:50.999" endtime="20220802 01:11:51.006"/>
</kw>
<msg timestamp="20220802 01:11:51.006" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:11:50.999" endtime="20220802 01:11:51.007"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:11:51.007" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:11:51.007" endtime="20220802 01:11:51.007"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:51.010" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:51.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:51.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:51.009" endtime="20220802 01:11:51.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:51.017" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:51.016" endtime="20220802 01:11:51.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:51.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:51.017" endtime="20220802 01:11:51.017"/>
</kw>
<status status="PASS" starttime="20220802 01:11:51.008" endtime="20220802 01:11:51.017"/>
</kw>
<msg timestamp="20220802 01:11:51.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:51.008" endtime="20220802 01:11:51.018"/>
</kw>
<status status="PASS" starttime="20220802 01:11:51.008" endtime="20220802 01:11:51.018"/>
</kw>
<status status="PASS" starttime="20220802 01:11:51.007" endtime="20220802 01:11:51.018"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.998" endtime="20220802 01:11:51.018"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.998" endtime="20220802 01:11:51.018"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:51.020" level="INFO">Running command 'ozone sh key list 75415-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:54.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:54.424" level="INFO">${output} = [ {
  "volumeName" : "75415-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2022-08-02T01:09:39.701Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220802 01:11:51.019" endtime="20220802 01:11:54.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:54.425" level="INFO">[ {
  "volumeName" : "75415-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2022-08-02T01:09:39.701Z",
  "modificationTime" : "2022-08-02T01:09:41.443Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220802 01:11:54.425" endtime="20220802 01:11:54.425"/>
</kw>
<msg timestamp="20220802 01:11:54.426" level="INFO">${result} = [ {
  "volumeName" : "75415-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 946,
  "creationTime" : "2022-08-02T01:09:39.701Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220802 01:11:51.018" endtime="20220802 01:11:54.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:54.426" endtime="20220802 01:11:54.426"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.990" endtime="20220802 01:11:54.426"/>
</kw>
<status status="PASS" starttime="20220802 01:11:50.990" endtime="20220802 01:11:54.426"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:11:50.967" endtime="20220802 01:11:54.427"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access" line="136">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:54.432" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:54.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:54.435" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:11:54.430" endtime="20220802 01:11:54.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:54.436" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:11:54.435" endtime="20220802 01:11:54.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:54.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:54.436" endtime="20220802 01:11:54.436"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.430" endtime="20220802 01:11:54.437"/>
</kw>
<msg timestamp="20220802 01:11:54.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:54.430" endtime="20220802 01:11:54.437"/>
</kw>
<msg timestamp="20220802 01:11:54.437" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:11:54.429" endtime="20220802 01:11:54.437"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:11:54.438" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:11:54.437" endtime="20220802 01:11:54.438"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:54.441" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:54.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:54.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:54.440" endtime="20220802 01:11:54.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:54.448" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:54.448" endtime="20220802 01:11:54.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:54.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:54.449" endtime="20220802 01:11:54.449"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.439" endtime="20220802 01:11:54.449"/>
</kw>
<msg timestamp="20220802 01:11:54.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:54.439" endtime="20220802 01:11:54.450"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.438" endtime="20220802 01:11:54.450"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.438" endtime="20220802 01:11:54.450"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.429" endtime="20220802 01:11:54.450"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.429" endtime="20220802 01:11:54.450"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:54.454" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:54.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:54.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:54.452" endtime="20220802 01:11:54.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:54.457" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:54.457" endtime="20220802 01:11:54.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:54.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:54.457" endtime="20220802 01:11:54.458"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.452" endtime="20220802 01:11:54.458"/>
</kw>
<msg timestamp="20220802 01:11:54.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:54.451" endtime="20220802 01:11:54.458"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.451" endtime="20220802 01:11:54.459"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:54.462" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:54.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:54.465" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:11:54.460" endtime="20220802 01:11:54.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:54.465" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:11:54.465" endtime="20220802 01:11:54.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:54.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:54.466" endtime="20220802 01:11:54.466"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.460" endtime="20220802 01:11:54.466"/>
</kw>
<msg timestamp="20220802 01:11:54.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:54.460" endtime="20220802 01:11:54.467"/>
</kw>
<msg timestamp="20220802 01:11:54.467" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:11:54.459" endtime="20220802 01:11:54.467"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:11:54.468" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:11:54.467" endtime="20220802 01:11:54.468"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:54.472" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:54.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:54.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:54.470" endtime="20220802 01:11:54.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:54.478" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:54.478" endtime="20220802 01:11:54.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:54.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:54.479" endtime="20220802 01:11:54.479"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.469" endtime="20220802 01:11:54.479"/>
</kw>
<msg timestamp="20220802 01:11:54.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:54.469" endtime="20220802 01:11:54.480"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.468" endtime="20220802 01:11:54.480"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.468" endtime="20220802 01:11:54.480"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.459" endtime="20220802 01:11:54.480"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.459" endtime="20220802 01:11:54.480"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:54.482" level="INFO">Running command 'ozone sh key list 75415-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:58.202" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:11:58.202" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:75415-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220802 01:11:54.481" endtime="20220802 01:11:58.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:58.203" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:75415-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220802 01:11:58.203" endtime="20220802 01:11:58.203"/>
</kw>
<msg timestamp="20220802 01:11:58.204" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:75415-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220802 01:11:54.480" endtime="20220802 01:11:58.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:11:58.204" endtime="20220802 01:11:58.204"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.451" endtime="20220802 01:11:58.204"/>
</kw>
<status status="PASS" starttime="20220802 01:11:54.450" endtime="20220802 01:11:58.204"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:11:54.428" endtime="20220802 01:11:58.205"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket" line="139">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:58.210" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:58.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:58.214" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:11:58.208" endtime="20220802 01:11:58.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:58.214" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:11:58.214" endtime="20220802 01:11:58.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:58.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:58.215" endtime="20220802 01:11:58.215"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.208" endtime="20220802 01:11:58.215"/>
</kw>
<msg timestamp="20220802 01:11:58.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:58.208" endtime="20220802 01:11:58.216"/>
</kw>
<msg timestamp="20220802 01:11:58.216" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:11:58.207" endtime="20220802 01:11:58.216"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:11:58.217" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:11:58.216" endtime="20220802 01:11:58.217"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:58.220" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:58.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:58.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:58.218" endtime="20220802 01:11:58.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:58.227" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:58.227" endtime="20220802 01:11:58.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:58.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:58.228" endtime="20220802 01:11:58.228"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.218" endtime="20220802 01:11:58.229"/>
</kw>
<msg timestamp="20220802 01:11:58.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:58.218" endtime="20220802 01:11:58.229"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.217" endtime="20220802 01:11:58.229"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.217" endtime="20220802 01:11:58.229"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.207" endtime="20220802 01:11:58.229"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.207" endtime="20220802 01:11:58.230"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:58.234" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:58.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:58.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:58.232" endtime="20220802 01:11:58.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:58.237" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:58.237" endtime="20220802 01:11:58.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:58.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:58.238" endtime="20220802 01:11:58.238"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.231" endtime="20220802 01:11:58.238"/>
</kw>
<msg timestamp="20220802 01:11:58.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:58.231" endtime="20220802 01:11:58.239"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.231" endtime="20220802 01:11:58.239"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:58.243" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:58.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:58.245" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:11:58.241" endtime="20220802 01:11:58.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:58.246" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:11:58.246" endtime="20220802 01:11:58.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:58.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:58.246" endtime="20220802 01:11:58.247"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.240" endtime="20220802 01:11:58.247"/>
</kw>
<msg timestamp="20220802 01:11:58.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:58.240" endtime="20220802 01:11:58.248"/>
</kw>
<msg timestamp="20220802 01:11:58.248" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:11:58.240" endtime="20220802 01:11:58.248"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:11:58.248" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:11:58.248" endtime="20220802 01:11:58.248"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:58.252" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:11:58.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:11:58.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:11:58.250" endtime="20220802 01:11:58.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:11:58.259" level="INFO"/>
<status status="PASS" starttime="20220802 01:11:58.258" endtime="20220802 01:11:58.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:11:58.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:11:58.259" endtime="20220802 01:11:58.260"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.250" endtime="20220802 01:11:58.260"/>
</kw>
<msg timestamp="20220802 01:11:58.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:58.249" endtime="20220802 01:11:58.260"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.249" endtime="20220802 01:11:58.261"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.249" endtime="20220802 01:11:58.261"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.240" endtime="20220802 01:11:58.261"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.239" endtime="20220802 01:11:58.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:11:58.264" level="INFO">Running command 'ozone sh bucket info 75415-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:01.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:01.865" level="INFO">${output} = {
  "volumeName" : "75415-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-08-02T01:09:56.716Z...</msg>
<status status="PASS" starttime="20220802 01:11:58.262" endtime="20220802 01:12:01.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:01.866" level="INFO">{
  "volumeName" : "75415-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-08-02T01:09:56.716Z",
  "modificationTime" : "2022-08-02T01:10:14.916Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20220802 01:12:01.865" endtime="20220802 01:12:01.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:01.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:01.866" endtime="20220802 01:12:01.867"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.262" endtime="20220802 01:12:01.867"/>
</kw>
<msg timestamp="20220802 01:12:01.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:11:58.262" endtime="20220802 01:12:01.868"/>
</kw>
<msg timestamp="20220802 01:12:01.868" level="INFO">${result} = {
  "volumeName" : "75415-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-08-02T01:09:56.716Z...</msg>
<status status="PASS" starttime="20220802 01:11:58.261" endtime="20220802 01:12:01.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:12:01.868" endtime="20220802 01:12:01.868"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:12:01.869" endtime="20220802 01:12:01.869"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:01.872" level="INFO">Running command 'ozone sh key list 75415-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:05.617" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:12:05.618" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:75415-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220802 01:12:01.870" endtime="20220802 01:12:05.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:05.619" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:75415-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220802 01:12:05.618" endtime="20220802 01:12:05.619"/>
</kw>
<msg timestamp="20220802 01:12:05.620" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:75415-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220802 01:12:01.869" endtime="20220802 01:12:05.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:12:05.620" endtime="20220802 01:12:05.620"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.230" endtime="20220802 01:12:05.620"/>
</kw>
<status status="PASS" starttime="20220802 01:11:58.230" endtime="20220802 01:12:05.620"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:11:58.206" endtime="20220802 01:12:05.621"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected" line="142">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:05.627" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:05.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:05.630" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:12:05.625" endtime="20220802 01:12:05.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:05.631" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:12:05.631" endtime="20220802 01:12:05.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:05.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:05.631" endtime="20220802 01:12:05.632"/>
</kw>
<status status="PASS" starttime="20220802 01:12:05.624" endtime="20220802 01:12:05.632"/>
</kw>
<msg timestamp="20220802 01:12:05.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:05.624" endtime="20220802 01:12:05.633"/>
</kw>
<msg timestamp="20220802 01:12:05.633" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:12:05.624" endtime="20220802 01:12:05.633"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:12:05.633" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:12:05.633" endtime="20220802 01:12:05.634"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:05.637" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:05.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:05.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:05.635" endtime="20220802 01:12:05.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:05.645" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:05.644" endtime="20220802 01:12:05.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:05.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:05.645" endtime="20220802 01:12:05.645"/>
</kw>
<status status="PASS" starttime="20220802 01:12:05.635" endtime="20220802 01:12:05.646"/>
</kw>
<msg timestamp="20220802 01:12:05.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:05.635" endtime="20220802 01:12:05.646"/>
</kw>
<status status="PASS" starttime="20220802 01:12:05.634" endtime="20220802 01:12:05.646"/>
</kw>
<status status="PASS" starttime="20220802 01:12:05.634" endtime="20220802 01:12:05.646"/>
</kw>
<status status="PASS" starttime="20220802 01:12:05.623" endtime="20220802 01:12:05.647"/>
</kw>
<status status="PASS" starttime="20220802 01:12:05.623" endtime="20220802 01:12:05.647"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:05.650" level="INFO">Running command 'ozone sh bucket link 75415-target/loop1 75415-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:09.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:09.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:05.648" endtime="20220802 01:12:09.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:09.453" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:09.452" endtime="20220802 01:12:09.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:09.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:09.453" endtime="20220802 01:12:09.454"/>
</kw>
<status status="PASS" starttime="20220802 01:12:05.648" endtime="20220802 01:12:09.454"/>
</kw>
<msg timestamp="20220802 01:12:09.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:05.647" endtime="20220802 01:12:09.455"/>
</kw>
<status status="PASS" starttime="20220802 01:12:05.647" endtime="20220802 01:12:09.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:09.458" level="INFO">Running command 'ozone sh bucket link 75415-target/loop2 75415-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:12.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:12.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:09.456" endtime="20220802 01:12:12.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:12.844" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:12.843" endtime="20220802 01:12:12.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:12.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:12.844" endtime="20220802 01:12:12.844"/>
</kw>
<status status="PASS" starttime="20220802 01:12:09.456" endtime="20220802 01:12:12.845"/>
</kw>
<msg timestamp="20220802 01:12:12.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:09.455" endtime="20220802 01:12:12.845"/>
</kw>
<status status="PASS" starttime="20220802 01:12:09.455" endtime="20220802 01:12:12.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:12.849" level="INFO">Running command 'ozone sh bucket link 75415-target/loop3 75415-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:16.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:16.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:12.847" endtime="20220802 01:12:16.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:16.516" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:16.515" endtime="20220802 01:12:16.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:16.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:16.516" endtime="20220802 01:12:16.517"/>
</kw>
<status status="PASS" starttime="20220802 01:12:12.846" endtime="20220802 01:12:16.517"/>
</kw>
<msg timestamp="20220802 01:12:16.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:12.846" endtime="20220802 01:12:16.518"/>
</kw>
<status status="PASS" starttime="20220802 01:12:12.845" endtime="20220802 01:12:16.518"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:16.521" level="INFO">Running command 'ozone sh key list 75415-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:20.283" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:12:20.283" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 75415-target</msg>
<status status="PASS" starttime="20220802 01:12:16.519" endtime="20220802 01:12:20.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:20.284" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 75415-target</msg>
<status status="PASS" starttime="20220802 01:12:20.283" endtime="20220802 01:12:20.284"/>
</kw>
<msg timestamp="20220802 01:12:20.285" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 75415-target</msg>
<status status="PASS" starttime="20220802 01:12:16.518" endtime="20220802 01:12:20.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:12:20.285" endtime="20220802 01:12:20.285"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:12:05.622" endtime="20220802 01:12:20.285"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed" line="149">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:20.291" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:20.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:20.295" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:12:20.289" endtime="20220802 01:12:20.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:20.296" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:12:20.296" endtime="20220802 01:12:20.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:20.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:20.296" endtime="20220802 01:12:20.297"/>
</kw>
<status status="PASS" starttime="20220802 01:12:20.289" endtime="20220802 01:12:20.297"/>
</kw>
<msg timestamp="20220802 01:12:20.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:20.289" endtime="20220802 01:12:20.298"/>
</kw>
<msg timestamp="20220802 01:12:20.298" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:12:20.288" endtime="20220802 01:12:20.298"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:12:20.299" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:12:20.298" endtime="20220802 01:12:20.299"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:20.303" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:20.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:20.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:20.301" endtime="20220802 01:12:20.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:20.388" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:20.387" endtime="20220802 01:12:20.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:20.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:20.388" endtime="20220802 01:12:20.389"/>
</kw>
<status status="PASS" starttime="20220802 01:12:20.300" endtime="20220802 01:12:20.389"/>
</kw>
<msg timestamp="20220802 01:12:20.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:20.300" endtime="20220802 01:12:20.390"/>
</kw>
<status status="PASS" starttime="20220802 01:12:20.299" endtime="20220802 01:12:20.390"/>
</kw>
<status status="PASS" starttime="20220802 01:12:20.299" endtime="20220802 01:12:20.390"/>
</kw>
<status status="PASS" starttime="20220802 01:12:20.288" endtime="20220802 01:12:20.390"/>
</kw>
<status status="PASS" starttime="20220802 01:12:20.287" endtime="20220802 01:12:20.390"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:20.394" level="INFO">Running command 'ozone sh bucket link 75415-source/bucket1 75415-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:24.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:24.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:20.392" endtime="20220802 01:12:24.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:24.182" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:24.182" endtime="20220802 01:12:24.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:24.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:24.183" endtime="20220802 01:12:24.183"/>
</kw>
<status status="PASS" starttime="20220802 01:12:20.391" endtime="20220802 01:12:24.183"/>
</kw>
<msg timestamp="20220802 01:12:24.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:20.391" endtime="20220802 01:12:24.184"/>
</kw>
<status status="PASS" starttime="20220802 01:12:20.390" endtime="20220802 01:12:24.184"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:24.188" level="INFO">Running command 'ozone sh key put 75415-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:30.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:30.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:24.185" endtime="20220802 01:12:30.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:30.796" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:30.795" endtime="20220802 01:12:30.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:30.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:30.796" endtime="20220802 01:12:30.797"/>
</kw>
<status status="PASS" starttime="20220802 01:12:24.185" endtime="20220802 01:12:30.797"/>
</kw>
<msg timestamp="20220802 01:12:30.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:24.185" endtime="20220802 01:12:30.797"/>
</kw>
<status status="PASS" starttime="20220802 01:12:24.184" endtime="20220802 01:12:30.797"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:12:30.799" level="INFO">${postfix} = 82368</msg>
<status status="PASS" starttime="20220802 01:12:30.799" endtime="20220802 01:12:30.799"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220802 01:12:30.799" level="INFO">${tmpfile} = /tmp/tempkey-82368</msg>
<status status="PASS" starttime="20220802 01:12:30.799" endtime="20220802 01:12:30.799"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:30.804" level="INFO">Running command 'ozone sh key get 75415-target/link1/key3 /tmp/tempkey-82368 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:36.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:36.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:30.801" endtime="20220802 01:12:36.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:36.340" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:36.339" endtime="20220802 01:12:36.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:36.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:36.340" endtime="20220802 01:12:36.341"/>
</kw>
<status status="PASS" starttime="20220802 01:12:30.800" endtime="20220802 01:12:36.341"/>
</kw>
<msg timestamp="20220802 01:12:36.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:30.800" endtime="20220802 01:12:36.342"/>
</kw>
<status status="PASS" starttime="20220802 01:12:30.800" endtime="20220802 01:12:36.342"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220802 01:12:36.344" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-82368 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:36.347" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220802 01:12:36.342" endtime="20220802 01:12:36.347"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:36.350" level="INFO">Running command 'rm -f /tmp/tempkey-82368 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:36.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:36.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:36.349" endtime="20220802 01:12:36.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:36.354" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:36.353" endtime="20220802 01:12:36.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:36.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:36.354" endtime="20220802 01:12:36.355"/>
</kw>
<status status="PASS" starttime="20220802 01:12:36.348" endtime="20220802 01:12:36.355"/>
</kw>
<msg timestamp="20220802 01:12:36.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:36.348" endtime="20220802 01:12:36.356"/>
</kw>
<status status="PASS" starttime="20220802 01:12:36.347" endtime="20220802 01:12:36.356"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220802 01:12:36.356" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220802 01:12:36.356" endtime="20220802 01:12:36.356"/>
</kw>
<msg timestamp="20220802 01:12:36.357" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220802 01:12:30.798" endtime="20220802 01:12:36.357"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220802 01:12:36.357" endtime="20220802 01:12:36.357"/>
</kw>
<status status="PASS" starttime="20220802 01:12:30.798" endtime="20220802 01:12:36.358"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:12:20.286" endtime="20220802 01:12:36.358"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link" line="154">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:36.364" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:36.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:36.367" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:12:36.362" endtime="20220802 01:12:36.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:36.368" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:12:36.367" endtime="20220802 01:12:36.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:36.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:36.368" endtime="20220802 01:12:36.369"/>
</kw>
<status status="PASS" starttime="20220802 01:12:36.361" endtime="20220802 01:12:36.369"/>
</kw>
<msg timestamp="20220802 01:12:36.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:36.361" endtime="20220802 01:12:36.370"/>
</kw>
<msg timestamp="20220802 01:12:36.370" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:12:36.360" endtime="20220802 01:12:36.370"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:12:36.371" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:12:36.370" endtime="20220802 01:12:36.371"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:36.375" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:36.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:36.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:36.373" endtime="20220802 01:12:36.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:36.383" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:36.382" endtime="20220802 01:12:36.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:36.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:36.383" endtime="20220802 01:12:36.384"/>
</kw>
<status status="PASS" starttime="20220802 01:12:36.372" endtime="20220802 01:12:36.384"/>
</kw>
<msg timestamp="20220802 01:12:36.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:36.372" endtime="20220802 01:12:36.385"/>
</kw>
<status status="PASS" starttime="20220802 01:12:36.371" endtime="20220802 01:12:36.385"/>
</kw>
<status status="PASS" starttime="20220802 01:12:36.371" endtime="20220802 01:12:36.385"/>
</kw>
<status status="PASS" starttime="20220802 01:12:36.360" endtime="20220802 01:12:36.385"/>
</kw>
<status status="PASS" starttime="20220802 01:12:36.359" endtime="20220802 01:12:36.385"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:36.388" level="INFO">Running command 'ozone sh bucket delete 75415-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:40.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:40.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:36.387" endtime="20220802 01:12:40.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:40.074" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:40.073" endtime="20220802 01:12:40.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:40.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:40.074" endtime="20220802 01:12:40.074"/>
</kw>
<status status="PASS" starttime="20220802 01:12:36.386" endtime="20220802 01:12:40.075"/>
</kw>
<msg timestamp="20220802 01:12:40.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:36.386" endtime="20220802 01:12:40.075"/>
</kw>
<status status="PASS" starttime="20220802 01:12:36.385" endtime="20220802 01:12:40.075"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:40.078" level="INFO">Running command 'ozone sh bucket list 75415-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:44.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:44.056" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-0...</msg>
<status status="PASS" starttime="20220802 01:12:40.076" endtime="20220802 01:12:44.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:44.057" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:11:47.403Z",
  "modificationTime" : "2022-08-02T01:11:47.403Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:10:18.822Z",
  "modificationTime" : "2022-08-02T01:10:18.822Z",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:09:56.716Z",
  "modificationTime" : "2022-08-02T01:10:14.916Z",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:11:39.860Z",
  "modificationTime" : "2022-08-02T01:11:39.860Z",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:12:24.100Z",
  "modificationTime" : "2022-08-02T01:12:24.100Z",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:12:16.453Z",
  "modificationTime" : "2022-08-02T01:12:16.453Z",
  "sourceVolume" : "75415-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:12:09.285Z",
  "modificationTime" : "2022-08-02T01:12:09.285Z",
  "sourceVolume" : "75415-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:12:12.783Z",
  "modificationTime" : "2022-08-02T01:12:12.783Z",
  "sourceVolume" : "75415-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:09:49.226Z",
  "modificationTime" : "2022-08-02T01:10:11.370Z",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-02T01:09:52.795Z",
  "modificationTime" : "2022-08-02T01:09:52.795Z",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220802 01:12:44.057" endtime="20220802 01:12:44.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:44.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:44.058" endtime="20220802 01:12:44.058"/>
</kw>
<status status="PASS" starttime="20220802 01:12:40.076" endtime="20220802 01:12:44.059"/>
</kw>
<msg timestamp="20220802 01:12:44.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:40.076" endtime="20220802 01:12:44.059"/>
</kw>
<msg timestamp="20220802 01:12:44.059" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "75415-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-08-0...</msg>
<status status="PASS" starttime="20220802 01:12:40.075" endtime="20220802 01:12:44.059"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:12:44.059" endtime="20220802 01:12:44.060"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:44.063" level="INFO">Running command 'ozone sh key list 75415-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:47.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:47.873" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20220802 01:12:44.061" endtime="20220802 01:12:47.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:47.874" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20220802 01:12:47.874" endtime="20220802 01:12:47.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:47.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:47.875" endtime="20220802 01:12:47.875"/>
</kw>
<status status="PASS" starttime="20220802 01:12:44.061" endtime="20220802 01:12:47.876"/>
</kw>
<msg timestamp="20220802 01:12:47.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:44.060" endtime="20220802 01:12:47.876"/>
</kw>
<msg timestamp="20220802 01:12:47.876" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20220802 01:12:44.060" endtime="20220802 01:12:47.876"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:12:47.877" endtime="20220802 01:12:47.877"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:12:36.359" endtime="20220802 01:12:47.877"/>
</test>
<test id="s1-s1-s3-t16" name="Setting bucket property on link not allowed" line="161">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:47.883" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:47.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:47.886" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:12:47.880" endtime="20220802 01:12:47.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:47.887" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:12:47.887" endtime="20220802 01:12:47.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:47.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:47.888" endtime="20220802 01:12:47.888"/>
</kw>
<status status="PASS" starttime="20220802 01:12:47.880" endtime="20220802 01:12:47.888"/>
</kw>
<msg timestamp="20220802 01:12:47.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:47.880" endtime="20220802 01:12:47.889"/>
</kw>
<msg timestamp="20220802 01:12:47.889" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:12:47.879" endtime="20220802 01:12:47.889"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:12:47.890" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:12:47.889" endtime="20220802 01:12:47.890"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:47.893" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:47.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:47.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:47.891" endtime="20220802 01:12:47.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:47.900" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:47.900" endtime="20220802 01:12:47.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:47.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:47.901" endtime="20220802 01:12:47.901"/>
</kw>
<status status="PASS" starttime="20220802 01:12:47.891" endtime="20220802 01:12:47.901"/>
</kw>
<msg timestamp="20220802 01:12:47.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:47.891" endtime="20220802 01:12:47.902"/>
</kw>
<status status="PASS" starttime="20220802 01:12:47.890" endtime="20220802 01:12:47.902"/>
</kw>
<status status="PASS" starttime="20220802 01:12:47.890" endtime="20220802 01:12:47.902"/>
</kw>
<status status="PASS" starttime="20220802 01:12:47.879" endtime="20220802 01:12:47.902"/>
</kw>
<status status="PASS" starttime="20220802 01:12:47.878" endtime="20220802 01:12:47.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:47.905" level="INFO">Running command 'ozone sh bucket link 75415-source/bucket1 75415-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:51.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:51.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:12:47.904" endtime="20220802 01:12:51.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:51.335" level="INFO"/>
<status status="PASS" starttime="20220802 01:12:51.335" endtime="20220802 01:12:51.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:51.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:51.336" endtime="20220802 01:12:51.336"/>
</kw>
<status status="PASS" starttime="20220802 01:12:47.903" endtime="20220802 01:12:51.336"/>
</kw>
<msg timestamp="20220802 01:12:51.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:47.903" endtime="20220802 01:12:51.337"/>
</kw>
<status status="PASS" starttime="20220802 01:12:47.903" endtime="20220802 01:12:51.337"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:51.340" level="INFO">Running command 'ozone sh bucket setquota 75415-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:54.813" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:12:54.813" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20220802 01:12:51.338" endtime="20220802 01:12:54.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:54.814" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20220802 01:12:54.813" endtime="20220802 01:12:54.814"/>
</kw>
<msg timestamp="20220802 01:12:54.814" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20220802 01:12:51.337" endtime="20220802 01:12:54.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:12:54.815" endtime="20220802 01:12:54.815"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:54.818" level="INFO">Running command 'ozone sh bucket info 75415-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:12:58.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:12:58.919" level="INFO">${output} = {
  "volumeName" : "75415-target",
  "bucketName" : "link4",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-02T01:12:51.168Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220802 01:12:54.816" endtime="20220802 01:12:58.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:12:58.921" level="INFO">{
  "volumeName" : "75415-target",
  "bucketName" : "link4",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-02T01:12:51.168Z",
  "modificationTime" : "2022-08-02T01:12:51.168Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20220802 01:12:58.920" endtime="20220802 01:12:58.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:12:58.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:12:58.921" endtime="20220802 01:12:58.921"/>
</kw>
<status status="PASS" starttime="20220802 01:12:54.816" endtime="20220802 01:12:58.922"/>
</kw>
<msg timestamp="20220802 01:12:58.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:12:54.816" endtime="20220802 01:12:58.922"/>
</kw>
<msg timestamp="20220802 01:12:58.923" level="INFO">${result} = {
  "volumeName" : "75415-target",
  "bucketName" : "link4",
  "sourceVolume" : "75415-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-08-02T01:12:51.168Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220802 01:12:54.815" endtime="20220802 01:12:58.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:12:58.923" endtime="20220802 01:12:58.923"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:12:47.878" endtime="20220802 01:12:58.923"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20220802 01:09:25.837" endtime="20220802 01:12:58.925"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:12:58.951" level="INFO">${random} = 16966</msg>
<status status="PASS" starttime="20220802 01:12:58.951" endtime="20220802 01:12:58.951"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:12:58.952" level="INFO">${prefix} = 16966</msg>
<status status="PASS" starttime="20220802 01:12:58.951" endtime="20220802 01:12:58.952"/>
</kw>
<status status="PASS" starttime="20220802 01:12:58.951" endtime="20220802 01:12:58.952"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell" line="26">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:12:58.957" level="INFO">Running command 'ozone sh volume info /16966-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:02.275" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:13:02.275" level="INFO">${output} = VOLUME_NOT_FOUND Volume 16966-without-scheme is not found</msg>
<status status="PASS" starttime="20220802 01:12:58.955" endtime="20220802 01:13:02.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:02.277" level="INFO">VOLUME_NOT_FOUND Volume 16966-without-scheme is not found</msg>
<status status="PASS" starttime="20220802 01:13:02.276" endtime="20220802 01:13:02.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:02.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:02.277" endtime="20220802 01:13:02.277"/>
</kw>
<msg timestamp="20220802 01:13:02.278" level="INFO">${result} = VOLUME_NOT_FOUND Volume 16966-without-scheme is not found</msg>
<status status="PASS" starttime="20220802 01:12:58.954" endtime="20220802 01:13:02.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:13:02.278" endtime="20220802 01:13:02.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:02.282" level="INFO">Running command 'ozone sh volume create /16966-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:05.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:05.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:13:02.280" endtime="20220802 01:13:05.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:05.934" level="INFO"/>
<status status="PASS" starttime="20220802 01:13:05.933" endtime="20220802 01:13:05.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:05.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:05.934" endtime="20220802 01:13:05.935"/>
</kw>
<status status="PASS" starttime="20220802 01:13:02.279" endtime="20220802 01:13:05.935"/>
</kw>
<msg timestamp="20220802 01:13:05.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:02.279" endtime="20220802 01:13:05.935"/>
</kw>
<msg timestamp="20220802 01:13:05.936" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:13:02.278" endtime="20220802 01:13:05.936"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:13:05.936" endtime="20220802 01:13:05.936"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:05.940" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="16966-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:09.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:09.663" level="INFO">${output} = {
  "metadata": {},
  "name": "16966-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220802 01:13:05.938" endtime="20220802 01:13:09.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:09.664" level="INFO">{
  "metadata": {},
  "name": "16966-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-02T01:13:05.775Z",
  "modificationTime": "2022-08-02T01:13:05.775Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220802 01:13:09.663" endtime="20220802 01:13:09.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:09.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:09.664" endtime="20220802 01:13:09.665"/>
</kw>
<status status="PASS" starttime="20220802 01:13:05.937" endtime="20220802 01:13:09.665"/>
</kw>
<msg timestamp="20220802 01:13:09.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:05.937" endtime="20220802 01:13:09.666"/>
</kw>
<msg timestamp="20220802 01:13:09.666" level="INFO">${result} = {
  "metadata": {},
  "name": "16966-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220802 01:13:05.936" endtime="20220802 01:13:09.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:13:09.666" endtime="20220802 01:13:09.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:09.670" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="16966-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:13.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:13.429" level="INFO">${output} = {
  "metadata": {},
  "name": "16966-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220802 01:13:09.668" endtime="20220802 01:13:13.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:13.430" level="INFO">{
  "metadata": {},
  "name": "16966-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-02T01:13:05.775Z",
  "modificationTime": "2022-08-02T01:13:05.775Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220802 01:13:13.430" endtime="20220802 01:13:13.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:13.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:13.431" endtime="20220802 01:13:13.431"/>
</kw>
<status status="PASS" starttime="20220802 01:13:09.667" endtime="20220802 01:13:13.431"/>
</kw>
<msg timestamp="20220802 01:13:13.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:09.667" endtime="20220802 01:13:13.432"/>
</kw>
<msg timestamp="20220802 01:13:13.432" level="INFO">${result} = {
  "metadata": {},
  "name": "16966-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220802 01:13:09.667" endtime="20220802 01:13:13.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:13:13.432" endtime="20220802 01:13:13.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:13.436" level="INFO">Running command 'ozone sh volume setquota /16966-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:16.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:16.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:13:13.434" endtime="20220802 01:13:16.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:16.747" level="INFO"/>
<status status="PASS" starttime="20220802 01:13:16.747" endtime="20220802 01:13:16.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:16.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:16.748" endtime="20220802 01:13:16.748"/>
</kw>
<status status="PASS" starttime="20220802 01:13:13.433" endtime="20220802 01:13:16.748"/>
</kw>
<msg timestamp="20220802 01:13:16.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:13.433" endtime="20220802 01:13:16.749"/>
</kw>
<status status="PASS" starttime="20220802 01:13:13.433" endtime="20220802 01:13:16.749"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:16.753" level="INFO">Running command 'ozone sh volume info /16966-without-scheme | jq -r '. | select(.name=="16966-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:20.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:20.393" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:13:16.751" endtime="20220802 01:13:20.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:20.394" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220802 01:13:20.393" endtime="20220802 01:13:20.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:20.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:20.394" endtime="20220802 01:13:20.395"/>
</kw>
<status status="PASS" starttime="20220802 01:13:16.750" endtime="20220802 01:13:20.395"/>
</kw>
<msg timestamp="20220802 01:13:20.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:16.750" endtime="20220802 01:13:20.395"/>
</kw>
<msg timestamp="20220802 01:13:20.396" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:13:16.749" endtime="20220802 01:13:20.396"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:13:20.396" endtime="20220802 01:13:20.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:20.399" level="INFO">Running command 'ozone sh bucket create /16966-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:23.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:23.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:13:20.397" endtime="20220802 01:13:23.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:23.793" level="INFO"/>
<status status="PASS" starttime="20220802 01:13:23.792" endtime="20220802 01:13:23.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:23.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:23.793" endtime="20220802 01:13:23.795"/>
</kw>
<status status="PASS" starttime="20220802 01:13:20.397" endtime="20220802 01:13:23.795"/>
</kw>
<msg timestamp="20220802 01:13:23.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:20.397" endtime="20220802 01:13:23.796"/>
</kw>
<status status="PASS" starttime="20220802 01:13:20.396" endtime="20220802 01:13:23.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:23.799" level="INFO">Running command 'ozone sh bucket info /16966-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:27.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:27.581" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220802 01:13:23.798" endtime="20220802 01:13:27.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:27.582" level="INFO">DISK</msg>
<status status="PASS" starttime="20220802 01:13:27.581" endtime="20220802 01:13:27.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:27.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:27.583" endtime="20220802 01:13:27.583"/>
</kw>
<status status="PASS" starttime="20220802 01:13:23.797" endtime="20220802 01:13:27.583"/>
</kw>
<msg timestamp="20220802 01:13:27.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:23.797" endtime="20220802 01:13:27.584"/>
</kw>
<msg timestamp="20220802 01:13:27.584" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220802 01:13:23.796" endtime="20220802 01:13:27.584"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:13:27.584" endtime="20220802 01:13:27.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:27.590" level="INFO">Running command 'ozone sh bucket info /16966-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:31.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:31.485" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:13:27.586" endtime="20220802 01:13:31.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:31.487" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220802 01:13:31.486" endtime="20220802 01:13:31.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:31.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:31.487" endtime="20220802 01:13:31.488"/>
</kw>
<status status="PASS" starttime="20220802 01:13:27.586" endtime="20220802 01:13:31.488"/>
</kw>
<msg timestamp="20220802 01:13:31.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:27.586" endtime="20220802 01:13:31.488"/>
</kw>
<msg timestamp="20220802 01:13:31.489" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:13:27.585" endtime="20220802 01:13:31.489"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:13:31.489" endtime="20220802 01:13:31.489"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:31.493" level="INFO">Running command 'ozone sh bucket info /16966-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:35.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:35.286" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220802 01:13:31.491" endtime="20220802 01:13:35.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:35.287" level="INFO">100</msg>
<status status="PASS" starttime="20220802 01:13:35.286" endtime="20220802 01:13:35.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:35.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:35.287" endtime="20220802 01:13:35.287"/>
</kw>
<status status="PASS" starttime="20220802 01:13:31.490" endtime="20220802 01:13:35.288"/>
</kw>
<msg timestamp="20220802 01:13:35.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:31.490" endtime="20220802 01:13:35.288"/>
</kw>
<msg timestamp="20220802 01:13:35.288" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220802 01:13:31.489" endtime="20220802 01:13:35.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:13:35.289" endtime="20220802 01:13:35.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:35.292" level="INFO">Running command 'ozone sh bucket setquota /16966-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:38.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:38.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:13:35.290" endtime="20220802 01:13:38.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:38.805" level="INFO"/>
<status status="PASS" starttime="20220802 01:13:38.804" endtime="20220802 01:13:38.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:38.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:38.805" endtime="20220802 01:13:38.805"/>
</kw>
<status status="PASS" starttime="20220802 01:13:35.290" endtime="20220802 01:13:38.805"/>
</kw>
<msg timestamp="20220802 01:13:38.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:35.290" endtime="20220802 01:13:38.806"/>
</kw>
<status status="PASS" starttime="20220802 01:13:35.289" endtime="20220802 01:13:38.806"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:38.821" level="INFO">Running command 'ozone sh bucket info /16966-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:42.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:42.381" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220802 01:13:38.819" endtime="20220802 01:13:42.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:42.382" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220802 01:13:42.381" endtime="20220802 01:13:42.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:42.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:42.382" endtime="20220802 01:13:42.383"/>
</kw>
<status status="PASS" starttime="20220802 01:13:38.819" endtime="20220802 01:13:42.383"/>
</kw>
<msg timestamp="20220802 01:13:42.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:38.807" endtime="20220802 01:13:42.384"/>
</kw>
<msg timestamp="20220802 01:13:42.384" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220802 01:13:38.806" endtime="20220802 01:13:42.384"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:13:42.384" endtime="20220802 01:13:42.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:42.388" level="INFO">Running command 'ozone sh bucket info /16966-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:45.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:45.890" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220802 01:13:42.386" endtime="20220802 01:13:45.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:45.892" level="INFO">1000</msg>
<status status="PASS" starttime="20220802 01:13:45.891" endtime="20220802 01:13:45.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:45.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:45.892" endtime="20220802 01:13:45.893"/>
</kw>
<status status="PASS" starttime="20220802 01:13:42.386" endtime="20220802 01:13:45.893"/>
</kw>
<msg timestamp="20220802 01:13:45.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:42.385" endtime="20220802 01:13:45.893"/>
</kw>
<msg timestamp="20220802 01:13:45.894" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220802 01:13:42.385" endtime="20220802 01:13:45.894"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:13:45.894" endtime="20220802 01:13:45.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:45.898" level="INFO">Running command 'ozone sh bucket list /16966-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:49.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:49.553" level="INFO">${output} = 16966-without-scheme</msg>
<status status="PASS" starttime="20220802 01:13:45.896" endtime="20220802 01:13:49.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:49.555" level="INFO">16966-without-scheme</msg>
<status status="PASS" starttime="20220802 01:13:49.554" endtime="20220802 01:13:49.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:49.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:49.555" endtime="20220802 01:13:49.556"/>
</kw>
<status status="PASS" starttime="20220802 01:13:45.895" endtime="20220802 01:13:49.556"/>
</kw>
<msg timestamp="20220802 01:13:49.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:45.895" endtime="20220802 01:13:49.556"/>
</kw>
<msg timestamp="20220802 01:13:49.557" level="INFO">${result} = 16966-without-scheme</msg>
<status status="PASS" starttime="20220802 01:13:45.894" endtime="20220802 01:13:49.557"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:13:49.557" endtime="20220802 01:13:49.557"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:49.561" level="INFO">Running command 'ozone sh key put /16966-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:55.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:55.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:13:49.559" endtime="20220802 01:13:55.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:55.528" level="INFO"/>
<status status="PASS" starttime="20220802 01:13:55.528" endtime="20220802 01:13:55.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:55.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:55.528" endtime="20220802 01:13:55.529"/>
</kw>
<status status="PASS" starttime="20220802 01:13:49.559" endtime="20220802 01:13:55.529"/>
</kw>
<msg timestamp="20220802 01:13:55.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:49.558" endtime="20220802 01:13:55.530"/>
</kw>
<status status="PASS" starttime="20220802 01:13:49.558" endtime="20220802 01:13:55.530"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:55.533" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:13:55.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:13:55.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:13:55.531" endtime="20220802 01:13:55.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:13:55.536" level="INFO"/>
<status status="PASS" starttime="20220802 01:13:55.536" endtime="20220802 01:13:55.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:13:55.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:13:55.536" endtime="20220802 01:13:55.537"/>
</kw>
<status status="PASS" starttime="20220802 01:13:55.531" endtime="20220802 01:13:55.537"/>
</kw>
<msg timestamp="20220802 01:13:55.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:55.530" endtime="20220802 01:13:55.538"/>
</kw>
<status status="PASS" starttime="20220802 01:13:55.530" endtime="20220802 01:13:55.538"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:13:55.541" level="INFO">Running command 'ozone sh key get /16966-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:00.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:00.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:13:55.539" endtime="20220802 01:14:00.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:00.869" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:00.868" endtime="20220802 01:14:00.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:00.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:00.869" endtime="20220802 01:14:00.869"/>
</kw>
<status status="PASS" starttime="20220802 01:13:55.539" endtime="20220802 01:14:00.870"/>
</kw>
<msg timestamp="20220802 01:14:00.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:13:55.538" endtime="20220802 01:14:00.870"/>
</kw>
<status status="PASS" starttime="20220802 01:13:55.538" endtime="20220802 01:14:00.870"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:00.874" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:00.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:00.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:00.872" endtime="20220802 01:14:00.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:00.877" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:00.876" endtime="20220802 01:14:00.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:00.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:00.877" endtime="20220802 01:14:00.877"/>
</kw>
<status status="PASS" starttime="20220802 01:14:00.871" endtime="20220802 01:14:00.878"/>
</kw>
<msg timestamp="20220802 01:14:00.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:00.871" endtime="20220802 01:14:00.878"/>
</kw>
<status status="PASS" starttime="20220802 01:14:00.870" endtime="20220802 01:14:00.878"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:00.881" level="INFO">Running command 'ozone sh key put -t RATIS /16966-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:06.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:06.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:00.880" endtime="20220802 01:14:06.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:06.549" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:06.548" endtime="20220802 01:14:06.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:06.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:06.549" endtime="20220802 01:14:06.550"/>
</kw>
<status status="PASS" starttime="20220802 01:14:00.879" endtime="20220802 01:14:06.550"/>
</kw>
<msg timestamp="20220802 01:14:06.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:00.879" endtime="20220802 01:14:06.550"/>
</kw>
<status status="PASS" starttime="20220802 01:14:00.878" endtime="20220802 01:14:06.551"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:06.554" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:06.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:06.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:06.552" endtime="20220802 01:14:06.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:06.557" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:06.556" endtime="20220802 01:14:06.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:06.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:06.557" endtime="20220802 01:14:06.558"/>
</kw>
<status status="PASS" starttime="20220802 01:14:06.551" endtime="20220802 01:14:06.558"/>
</kw>
<msg timestamp="20220802 01:14:06.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:06.551" endtime="20220802 01:14:06.558"/>
</kw>
<status status="PASS" starttime="20220802 01:14:06.551" endtime="20220802 01:14:06.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:06.562" level="INFO">Running command 'ozone sh key get /16966-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:12.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:12.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:06.560" endtime="20220802 01:14:12.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:12.006" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:12.005" endtime="20220802 01:14:12.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:12.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:12.006" endtime="20220802 01:14:12.007"/>
</kw>
<status status="PASS" starttime="20220802 01:14:06.559" endtime="20220802 01:14:12.007"/>
</kw>
<msg timestamp="20220802 01:14:12.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:06.559" endtime="20220802 01:14:12.008"/>
</kw>
<status status="PASS" starttime="20220802 01:14:06.559" endtime="20220802 01:14:12.008"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:12.012" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:12.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:12.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:12.009" endtime="20220802 01:14:12.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:12.015" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:12.015" endtime="20220802 01:14:12.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:12.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:12.015" endtime="20220802 01:14:12.016"/>
</kw>
<status status="PASS" starttime="20220802 01:14:12.009" endtime="20220802 01:14:12.016"/>
</kw>
<msg timestamp="20220802 01:14:12.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:12.008" endtime="20220802 01:14:12.017"/>
</kw>
<status status="PASS" starttime="20220802 01:14:12.008" endtime="20220802 01:14:12.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:12.021" level="INFO">Running command 'ozone sh key info /16966-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:15.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:15.790" level="INFO">${output} = {
  "volumeName": "16966-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:14:04.332Z",
  "modificationTime": "2022-08-02T01:14:06.1...</msg>
<status status="PASS" starttime="20220802 01:14:12.019" endtime="20220802 01:14:15.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:15.791" level="INFO">{
  "volumeName": "16966-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:14:04.332Z",
  "modificationTime": "2022-08-02T01:14:06.153Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200000,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220802 01:14:15.790" endtime="20220802 01:14:15.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:15.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:15.791" endtime="20220802 01:14:15.792"/>
</kw>
<status status="PASS" starttime="20220802 01:14:12.018" endtime="20220802 01:14:15.792"/>
</kw>
<msg timestamp="20220802 01:14:15.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:12.018" endtime="20220802 01:14:15.792"/>
</kw>
<msg timestamp="20220802 01:14:15.793" level="INFO">${result} = {
  "volumeName": "16966-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:14:04.332Z",
  "modificationTime": "2022-08-02T01:14:06.1...</msg>
<status status="PASS" starttime="20220802 01:14:12.017" endtime="20220802 01:14:15.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:14:15.793" endtime="20220802 01:14:15.793"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:15.796" level="INFO">Running command 'ozone sh key delete /16966-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:19.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:19.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:15.794" endtime="20220802 01:14:19.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:19.273" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:19.272" endtime="20220802 01:14:19.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:19.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:19.273" endtime="20220802 01:14:19.273"/>
</kw>
<status status="PASS" starttime="20220802 01:14:15.794" endtime="20220802 01:14:19.274"/>
</kw>
<msg timestamp="20220802 01:14:19.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:15.794" endtime="20220802 01:14:19.274"/>
</kw>
<status status="PASS" starttime="20220802 01:14:15.793" endtime="20220802 01:14:19.275"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:19.282" level="INFO">Running command 'ozone sh key cp /16966-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:25.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:25.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:19.276" endtime="20220802 01:14:25.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:25.178" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:25.178" endtime="20220802 01:14:25.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:25.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:25.179" endtime="20220802 01:14:25.179"/>
</kw>
<status status="PASS" starttime="20220802 01:14:19.276" endtime="20220802 01:14:25.179"/>
</kw>
<msg timestamp="20220802 01:14:25.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:19.275" endtime="20220802 01:14:25.180"/>
</kw>
<status status="PASS" starttime="20220802 01:14:19.275" endtime="20220802 01:14:25.180"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:25.183" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:25.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:25.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:25.181" endtime="20220802 01:14:25.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:25.186" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:25.186" endtime="20220802 01:14:25.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:25.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:25.186" endtime="20220802 01:14:25.187"/>
</kw>
<status status="PASS" starttime="20220802 01:14:25.181" endtime="20220802 01:14:25.187"/>
</kw>
<msg timestamp="20220802 01:14:25.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:25.181" endtime="20220802 01:14:25.188"/>
</kw>
<status status="PASS" starttime="20220802 01:14:25.180" endtime="20220802 01:14:25.188"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:25.191" level="INFO">Running command 'ozone sh key get /16966-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:30.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:30.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:25.190" endtime="20220802 01:14:30.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:30.142" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:30.141" endtime="20220802 01:14:30.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:30.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:30.142" endtime="20220802 01:14:30.143"/>
</kw>
<status status="PASS" starttime="20220802 01:14:25.189" endtime="20220802 01:14:30.143"/>
</kw>
<msg timestamp="20220802 01:14:30.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:25.188" endtime="20220802 01:14:30.144"/>
</kw>
<status status="PASS" starttime="20220802 01:14:25.188" endtime="20220802 01:14:30.144"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:30.147" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:30.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:30.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:30.145" endtime="20220802 01:14:30.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:30.150" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:30.150" endtime="20220802 01:14:30.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:30.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:30.150" endtime="20220802 01:14:30.151"/>
</kw>
<status status="PASS" starttime="20220802 01:14:30.145" endtime="20220802 01:14:30.151"/>
</kw>
<msg timestamp="20220802 01:14:30.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:30.144" endtime="20220802 01:14:30.152"/>
</kw>
<status status="PASS" starttime="20220802 01:14:30.144" endtime="20220802 01:14:30.152"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:30.155" level="INFO">Running command 'ozone sh key delete /16966-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:33.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:33.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:30.153" endtime="20220802 01:14:33.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:33.494" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:33.493" endtime="20220802 01:14:33.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:33.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:33.494" endtime="20220802 01:14:33.495"/>
</kw>
<status status="PASS" starttime="20220802 01:14:30.153" endtime="20220802 01:14:33.495"/>
</kw>
<msg timestamp="20220802 01:14:33.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:30.153" endtime="20220802 01:14:33.496"/>
</kw>
<status status="PASS" starttime="20220802 01:14:30.152" endtime="20220802 01:14:33.496"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:33.498" level="INFO">Running command 'ozone sh key get /16966-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:36.896" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:14:36.896" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220802 01:14:33.496" endtime="20220802 01:14:36.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:36.898" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220802 01:14:36.897" endtime="20220802 01:14:36.898"/>
</kw>
<msg timestamp="20220802 01:14:36.898" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220802 01:14:33.496" endtime="20220802 01:14:36.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:14:36.898" endtime="20220802 01:14:36.899"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:36.902" level="INFO">Running command 'ozone sh key get --force /16966-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:42.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:42.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:36.900" endtime="20220802 01:14:42.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:42.526" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:42.525" endtime="20220802 01:14:42.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:42.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:42.526" endtime="20220802 01:14:42.527"/>
</kw>
<status status="PASS" starttime="20220802 01:14:36.900" endtime="20220802 01:14:42.527"/>
</kw>
<msg timestamp="20220802 01:14:42.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:36.899" endtime="20220802 01:14:42.528"/>
</kw>
<msg timestamp="20220802 01:14:42.528" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:14:36.899" endtime="20220802 01:14:42.528"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:14:42.528" endtime="20220802 01:14:42.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:42.533" level="INFO">Running command 'ozone sh key info /16966-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:46.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:46.416" level="INFO">${output} = {
  "volumeName": "16966-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:13:53.094Z",
  "modificationTime": "2022-08-02T01:13:54.999Z",
...</msg>
<status status="PASS" starttime="20220802 01:14:42.531" endtime="20220802 01:14:46.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:46.417" level="INFO">{
  "volumeName": "16966-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:13:53.094Z",
  "modificationTime": "2022-08-02T01:13:54.999Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 109611004723200000,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220802 01:14:46.416" endtime="20220802 01:14:46.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:46.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:46.417" endtime="20220802 01:14:46.418"/>
</kw>
<status status="PASS" starttime="20220802 01:14:42.530" endtime="20220802 01:14:46.418"/>
</kw>
<msg timestamp="20220802 01:14:46.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:42.530" endtime="20220802 01:14:46.419"/>
</kw>
<msg timestamp="20220802 01:14:46.419" level="INFO">${result} = {
  "volumeName": "16966-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:13:53.094Z",
  "modificationTime": "2022-08-02T01:13:54.999Z",
...</msg>
<status status="PASS" starttime="20220802 01:14:42.529" endtime="20220802 01:14:46.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:14:46.419" endtime="20220802 01:14:46.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:46.423" level="INFO">Running command 'ozone sh key list /16966-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:50.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:50.134" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220802 01:14:46.421" endtime="20220802 01:14:50.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:50.135" level="INFO">key1</msg>
<status status="PASS" starttime="20220802 01:14:50.135" endtime="20220802 01:14:50.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:50.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:50.136" endtime="20220802 01:14:50.136"/>
</kw>
<status status="PASS" starttime="20220802 01:14:46.421" endtime="20220802 01:14:50.136"/>
</kw>
<msg timestamp="20220802 01:14:50.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:46.420" endtime="20220802 01:14:50.137"/>
</kw>
<msg timestamp="20220802 01:14:50.137" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220802 01:14:46.420" endtime="20220802 01:14:50.137"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:14:50.137" endtime="20220802 01:14:50.138"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:50.141" level="INFO">Running command 'ozone sh key rename /16966-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:53.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:53.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:50.139" endtime="20220802 01:14:53.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:53.695" level="INFO"/>
<status status="PASS" starttime="20220802 01:14:53.694" endtime="20220802 01:14:53.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:53.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:53.695" endtime="20220802 01:14:53.696"/>
</kw>
<status status="PASS" starttime="20220802 01:14:50.139" endtime="20220802 01:14:53.696"/>
</kw>
<msg timestamp="20220802 01:14:53.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:50.138" endtime="20220802 01:14:53.696"/>
</kw>
<status status="PASS" starttime="20220802 01:14:50.138" endtime="20220802 01:14:53.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:53.700" level="INFO">Running command 'ozone sh key list /16966-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:14:57.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:14:57.335" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220802 01:14:53.698" endtime="20220802 01:14:57.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:14:57.337" level="INFO">key2</msg>
<status status="PASS" starttime="20220802 01:14:57.336" endtime="20220802 01:14:57.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:14:57.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:14:57.337" endtime="20220802 01:14:57.337"/>
</kw>
<status status="PASS" starttime="20220802 01:14:53.698" endtime="20220802 01:14:57.338"/>
</kw>
<msg timestamp="20220802 01:14:57.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:53.697" endtime="20220802 01:14:57.338"/>
</kw>
<msg timestamp="20220802 01:14:57.339" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220802 01:14:53.697" endtime="20220802 01:14:57.339"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:14:57.339" endtime="20220802 01:14:57.339"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:14:57.343" level="INFO">Running command 'ozone sh key delete /16966-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:00.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:00.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:14:57.340" endtime="20220802 01:15:00.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:00.905" level="INFO"/>
<status status="PASS" starttime="20220802 01:15:00.905" endtime="20220802 01:15:00.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:00.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:00.906" endtime="20220802 01:15:00.906"/>
</kw>
<status status="PASS" starttime="20220802 01:14:57.340" endtime="20220802 01:15:00.906"/>
</kw>
<msg timestamp="20220802 01:15:00.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:14:57.340" endtime="20220802 01:15:00.907"/>
</kw>
<status status="PASS" starttime="20220802 01:14:57.339" endtime="20220802 01:15:00.907"/>
</kw>
<status status="PASS" starttime="20220802 01:13:49.557" endtime="20220802 01:15:00.907"/>
</kw>
<status status="PASS" starttime="20220802 01:13:49.557" endtime="20220802 01:15:00.907"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:00.911" level="INFO">Running command 'ozone sh volume clrquota --space-quota /16966-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:04.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:04.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:15:00.909" endtime="20220802 01:15:04.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:04.472" level="INFO"/>
<status status="PASS" starttime="20220802 01:15:04.472" endtime="20220802 01:15:04.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:04.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:04.473" endtime="20220802 01:15:04.473"/>
</kw>
<status status="PASS" starttime="20220802 01:15:00.908" endtime="20220802 01:15:04.474"/>
</kw>
<msg timestamp="20220802 01:15:04.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:00.908" endtime="20220802 01:15:04.474"/>
</kw>
<status status="PASS" starttime="20220802 01:15:00.907" endtime="20220802 01:15:04.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:04.478" level="INFO">Running command 'ozone sh volume info /16966-without-scheme | jq -r '. | select(.name=="16966-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:08.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:08.411" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:15:04.476" endtime="20220802 01:15:08.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:08.412" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:15:08.411" endtime="20220802 01:15:08.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:08.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:08.412" endtime="20220802 01:15:08.413"/>
</kw>
<status status="PASS" starttime="20220802 01:15:04.476" endtime="20220802 01:15:08.413"/>
</kw>
<msg timestamp="20220802 01:15:08.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:04.475" endtime="20220802 01:15:08.414"/>
</kw>
<msg timestamp="20220802 01:15:08.414" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:15:04.474" endtime="20220802 01:15:08.414"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:15:08.414" endtime="20220802 01:15:08.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:08.418" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /16966-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:11.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:11.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:15:08.416" endtime="20220802 01:15:11.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:11.962" level="INFO"/>
<status status="PASS" starttime="20220802 01:15:11.962" endtime="20220802 01:15:11.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:11.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:11.963" endtime="20220802 01:15:11.963"/>
</kw>
<status status="PASS" starttime="20220802 01:15:08.416" endtime="20220802 01:15:11.963"/>
</kw>
<msg timestamp="20220802 01:15:11.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:08.415" endtime="20220802 01:15:11.964"/>
</kw>
<status status="PASS" starttime="20220802 01:15:08.415" endtime="20220802 01:15:11.964"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:11.968" level="INFO">Running command 'ozone sh volume info /16966-without-scheme | jq -r '. | select(.name=="16966-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:15.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:15.594" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:15:11.966" endtime="20220802 01:15:15.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:15.595" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:15:15.595" endtime="20220802 01:15:15.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:15.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:15.596" endtime="20220802 01:15:15.596"/>
</kw>
<status status="PASS" starttime="20220802 01:15:11.965" endtime="20220802 01:15:15.596"/>
</kw>
<msg timestamp="20220802 01:15:15.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:11.965" endtime="20220802 01:15:15.597"/>
</kw>
<msg timestamp="20220802 01:15:15.597" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:15:11.964" endtime="20220802 01:15:15.597"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:15:15.597" endtime="20220802 01:15:15.598"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:15.601" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /16966-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:19.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:19.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:15:15.599" endtime="20220802 01:15:19.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:19.273" level="INFO"/>
<status status="PASS" starttime="20220802 01:15:19.273" endtime="20220802 01:15:19.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:19.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:19.274" endtime="20220802 01:15:19.274"/>
</kw>
<status status="PASS" starttime="20220802 01:15:15.599" endtime="20220802 01:15:19.274"/>
</kw>
<msg timestamp="20220802 01:15:19.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:15.598" endtime="20220802 01:15:19.275"/>
</kw>
<status status="PASS" starttime="20220802 01:15:15.598" endtime="20220802 01:15:19.275"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:19.279" level="INFO">Running command 'ozone sh bucket info /16966-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:23.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:23.285" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:15:19.277" endtime="20220802 01:15:23.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:23.287" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:15:23.286" endtime="20220802 01:15:23.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:23.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:23.287" endtime="20220802 01:15:23.288"/>
</kw>
<status status="PASS" starttime="20220802 01:15:19.276" endtime="20220802 01:15:23.288"/>
</kw>
<msg timestamp="20220802 01:15:23.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:19.276" endtime="20220802 01:15:23.288"/>
</kw>
<msg timestamp="20220802 01:15:23.289" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:15:19.275" endtime="20220802 01:15:23.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:15:23.289" endtime="20220802 01:15:23.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:23.294" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /16966-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:27.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:27.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:15:23.291" endtime="20220802 01:15:27.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:27.341" level="INFO"/>
<status status="PASS" starttime="20220802 01:15:27.340" endtime="20220802 01:15:27.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:27.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:27.341" endtime="20220802 01:15:27.341"/>
</kw>
<status status="PASS" starttime="20220802 01:15:23.290" endtime="20220802 01:15:27.342"/>
</kw>
<msg timestamp="20220802 01:15:27.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:23.290" endtime="20220802 01:15:27.342"/>
</kw>
<status status="PASS" starttime="20220802 01:15:23.289" endtime="20220802 01:15:27.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:27.346" level="INFO">Running command 'ozone sh bucket info /16966-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:31.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:31.115" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:15:27.344" endtime="20220802 01:15:31.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:31.116" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:15:31.115" endtime="20220802 01:15:31.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:31.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:31.116" endtime="20220802 01:15:31.117"/>
</kw>
<status status="PASS" starttime="20220802 01:15:27.344" endtime="20220802 01:15:31.117"/>
</kw>
<msg timestamp="20220802 01:15:31.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:27.343" endtime="20220802 01:15:31.118"/>
</kw>
<msg timestamp="20220802 01:15:31.118" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:15:27.343" endtime="20220802 01:15:31.118"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:15:31.118" endtime="20220802 01:15:31.118"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:31.122" level="INFO">Running command 'ozone sh bucket delete /16966-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:34.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:34.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:15:31.120" endtime="20220802 01:15:34.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:34.864" level="INFO"/>
<status status="PASS" starttime="20220802 01:15:34.863" endtime="20220802 01:15:34.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:34.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:34.864" endtime="20220802 01:15:34.865"/>
</kw>
<status status="PASS" starttime="20220802 01:15:31.119" endtime="20220802 01:15:34.865"/>
</kw>
<msg timestamp="20220802 01:15:34.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:31.119" endtime="20220802 01:15:34.866"/>
</kw>
<status status="PASS" starttime="20220802 01:15:31.119" endtime="20220802 01:15:34.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:34.870" level="INFO">Running command 'ozone sh volume delete /16966-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:38.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:38.661" level="INFO">${output} = Volume 16966-without-scheme is deleted</msg>
<status status="PASS" starttime="20220802 01:15:34.868" endtime="20220802 01:15:38.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:38.662" level="INFO">Volume 16966-without-scheme is deleted</msg>
<status status="PASS" starttime="20220802 01:15:38.662" endtime="20220802 01:15:38.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:38.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:38.663" endtime="20220802 01:15:38.663"/>
</kw>
<status status="PASS" starttime="20220802 01:15:34.867" endtime="20220802 01:15:38.663"/>
</kw>
<msg timestamp="20220802 01:15:38.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:34.867" endtime="20220802 01:15:38.664"/>
</kw>
<status status="PASS" starttime="20220802 01:15:34.866" endtime="20220802 01:15:38.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:38.668" level="INFO">Running command 'ozone sh volume create /16966-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:42.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:42.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:15:38.666" endtime="20220802 01:15:42.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:42.310" level="INFO"/>
<status status="PASS" starttime="20220802 01:15:42.309" endtime="20220802 01:15:42.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:42.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:42.310" endtime="20220802 01:15:42.311"/>
</kw>
<status status="PASS" starttime="20220802 01:15:38.665" endtime="20220802 01:15:42.311"/>
</kw>
<msg timestamp="20220802 01:15:42.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:38.665" endtime="20220802 01:15:42.312"/>
</kw>
<status status="PASS" starttime="20220802 01:15:38.664" endtime="20220802 01:15:42.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:42.316" level="INFO">Running command 'ozone sh volume info /16966-without-scheme | jq -r '. | select(.name=="16966-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:46.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:46.275" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:15:42.314" endtime="20220802 01:15:46.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:46.276" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:15:46.276" endtime="20220802 01:15:46.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:46.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:46.276" endtime="20220802 01:15:46.277"/>
</kw>
<status status="PASS" starttime="20220802 01:15:42.314" endtime="20220802 01:15:46.277"/>
</kw>
<msg timestamp="20220802 01:15:46.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:42.313" endtime="20220802 01:15:46.278"/>
</kw>
<msg timestamp="20220802 01:15:46.278" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:15:42.312" endtime="20220802 01:15:46.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:15:46.278" endtime="20220802 01:15:46.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:46.282" level="INFO">Running command 'ozone sh volume info /16966-without-scheme | jq -r '. | select(.name=="16966-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:50.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:50.097" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:15:46.280" endtime="20220802 01:15:50.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:50.098" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:15:50.098" endtime="20220802 01:15:50.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:50.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:50.099" endtime="20220802 01:15:50.099"/>
</kw>
<status status="PASS" starttime="20220802 01:15:46.280" endtime="20220802 01:15:50.099"/>
</kw>
<msg timestamp="20220802 01:15:50.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:46.279" endtime="20220802 01:15:50.100"/>
</kw>
<msg timestamp="20220802 01:15:50.100" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:15:46.279" endtime="20220802 01:15:50.100"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:15:50.100" endtime="20220802 01:15:50.101"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:50.105" level="INFO">Running command 'ozone sh bucket create /16966-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:53.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:53.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:15:50.103" endtime="20220802 01:15:53.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:53.657" level="INFO"/>
<status status="PASS" starttime="20220802 01:15:53.657" endtime="20220802 01:15:53.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:53.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:53.658" endtime="20220802 01:15:53.658"/>
</kw>
<status status="PASS" starttime="20220802 01:15:50.102" endtime="20220802 01:15:53.658"/>
</kw>
<msg timestamp="20220802 01:15:53.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:50.102" endtime="20220802 01:15:53.659"/>
</kw>
<status status="PASS" starttime="20220802 01:15:50.101" endtime="20220802 01:15:53.659"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:53.663" level="INFO">Running command 'ozone sh bucket info /16966-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:15:57.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:15:57.509" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:15:53.661" endtime="20220802 01:15:57.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:15:57.510" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:15:57.509" endtime="20220802 01:15:57.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:15:57.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:15:57.510" endtime="20220802 01:15:57.511"/>
</kw>
<status status="PASS" starttime="20220802 01:15:53.660" endtime="20220802 01:15:57.511"/>
</kw>
<msg timestamp="20220802 01:15:57.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:53.660" endtime="20220802 01:15:57.511"/>
</kw>
<msg timestamp="20220802 01:15:57.512" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:15:53.659" endtime="20220802 01:15:57.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:15:57.512" endtime="20220802 01:15:57.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:15:57.516" level="INFO">Running command 'ozone sh bucket info /16966-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:01.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:01.052" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:15:57.514" endtime="20220802 01:16:01.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:01.053" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:16:01.052" endtime="20220802 01:16:01.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:01.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:01.053" endtime="20220802 01:16:01.054"/>
</kw>
<status status="PASS" starttime="20220802 01:15:57.513" endtime="20220802 01:16:01.054"/>
</kw>
<msg timestamp="20220802 01:16:01.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:15:57.513" endtime="20220802 01:16:01.055"/>
</kw>
<msg timestamp="20220802 01:16:01.055" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:15:57.512" endtime="20220802 01:16:01.055"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:16:01.055" endtime="20220802 01:16:01.055"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:01.059" level="INFO">Running command 'ozone sh bucket delete /16966-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:04.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:04.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:16:01.057" endtime="20220802 01:16:04.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:04.622" level="INFO"/>
<status status="PASS" starttime="20220802 01:16:04.621" endtime="20220802 01:16:04.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:04.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:04.622" endtime="20220802 01:16:04.623"/>
</kw>
<status status="PASS" starttime="20220802 01:16:01.056" endtime="20220802 01:16:04.623"/>
</kw>
<msg timestamp="20220802 01:16:04.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:01.056" endtime="20220802 01:16:04.624"/>
</kw>
<status status="PASS" starttime="20220802 01:16:01.055" endtime="20220802 01:16:04.624"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:04.628" level="INFO">Running command 'ozone sh volume delete /16966-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:08.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:08.044" level="INFO">${output} = Volume 16966-without-scheme is deleted</msg>
<status status="PASS" starttime="20220802 01:16:04.625" endtime="20220802 01:16:08.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:08.045" level="INFO">Volume 16966-without-scheme is deleted</msg>
<status status="PASS" starttime="20220802 01:16:08.044" endtime="20220802 01:16:08.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:08.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:08.045" endtime="20220802 01:16:08.046"/>
</kw>
<status status="PASS" starttime="20220802 01:16:04.625" endtime="20220802 01:16:08.046"/>
</kw>
<msg timestamp="20220802 01:16:08.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:04.624" endtime="20220802 01:16:08.047"/>
</kw>
<status status="PASS" starttime="20220802 01:16:04.624" endtime="20220802 01:16:08.047"/>
</kw>
<status status="PASS" starttime="20220802 01:12:58.953" endtime="20220802 01:16:08.047"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:12:58.952" endtime="20220802 01:16:08.047"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20220802 01:12:58.928" endtime="20220802 01:16:08.048"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:16:08.056" level="INFO">${random} = 23679</msg>
<status status="PASS" starttime="20220802 01:16:08.056" endtime="20220802 01:16:08.056"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:16:08.056" level="INFO">${prefix} = 23679</msg>
<status status="PASS" starttime="20220802 01:16:08.056" endtime="20220802 01:16:08.056"/>
</kw>
<status status="PASS" starttime="20220802 01:16:08.055" endtime="20220802 01:16:08.057"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:08.062" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:08.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:08.065" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:16:08.060" endtime="20220802 01:16:08.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:08.066" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:16:08.065" endtime="20220802 01:16:08.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:08.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:08.066" endtime="20220802 01:16:08.066"/>
</kw>
<status status="PASS" starttime="20220802 01:16:08.059" endtime="20220802 01:16:08.067"/>
</kw>
<msg timestamp="20220802 01:16:08.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:08.059" endtime="20220802 01:16:08.067"/>
</kw>
<msg timestamp="20220802 01:16:08.067" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:16:08.058" endtime="20220802 01:16:08.067"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:16:08.069" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:16:08.068" endtime="20220802 01:16:08.069"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:08.072" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:08.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:08.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:16:08.071" endtime="20220802 01:16:08.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:08.190" level="INFO"/>
<status status="PASS" starttime="20220802 01:16:08.189" endtime="20220802 01:16:08.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:08.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:08.190" endtime="20220802 01:16:08.191"/>
</kw>
<status status="PASS" starttime="20220802 01:16:08.070" endtime="20220802 01:16:08.191"/>
</kw>
<msg timestamp="20220802 01:16:08.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:08.070" endtime="20220802 01:16:08.192"/>
</kw>
<status status="PASS" starttime="20220802 01:16:08.069" endtime="20220802 01:16:08.192"/>
</kw>
<status status="PASS" starttime="20220802 01:16:08.069" endtime="20220802 01:16:08.192"/>
</kw>
<status status="PASS" starttime="20220802 01:16:08.058" endtime="20220802 01:16:08.192"/>
</kw>
<status status="PASS" starttime="20220802 01:16:08.057" endtime="20220802 01:16:08.192"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:08.195" level="INFO">Running command 'ozone sh volume info o3://om:9862/23679-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:11.467" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:16:11.467" level="INFO">${output} = VOLUME_NOT_FOUND Volume 23679-with-host is not found</msg>
<status status="PASS" starttime="20220802 01:16:08.193" endtime="20220802 01:16:11.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:11.468" level="INFO">VOLUME_NOT_FOUND Volume 23679-with-host is not found</msg>
<status status="PASS" starttime="20220802 01:16:11.467" endtime="20220802 01:16:11.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:11.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:11.468" endtime="20220802 01:16:11.469"/>
</kw>
<msg timestamp="20220802 01:16:11.469" level="INFO">${result} = VOLUME_NOT_FOUND Volume 23679-with-host is not found</msg>
<status status="PASS" starttime="20220802 01:16:08.193" endtime="20220802 01:16:11.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:16:11.469" endtime="20220802 01:16:11.469"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:11.473" level="INFO">Running command 'ozone sh volume create o3://om:9862/23679-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:14.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:14.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:16:11.471" endtime="20220802 01:16:14.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:14.892" level="INFO"/>
<status status="PASS" starttime="20220802 01:16:14.891" endtime="20220802 01:16:14.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:14.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:14.892" endtime="20220802 01:16:14.893"/>
</kw>
<status status="PASS" starttime="20220802 01:16:11.470" endtime="20220802 01:16:14.894"/>
</kw>
<msg timestamp="20220802 01:16:14.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:11.470" endtime="20220802 01:16:14.894"/>
</kw>
<msg timestamp="20220802 01:16:14.894" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:16:11.470" endtime="20220802 01:16:14.894"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:16:14.894" endtime="20220802 01:16:14.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:14.898" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="23679-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:18.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:18.610" level="INFO">${output} = {
  "metadata": {},
  "name": "23679-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220802 01:16:14.896" endtime="20220802 01:16:18.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:18.612" level="INFO">{
  "metadata": {},
  "name": "23679-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-02T01:16:14.824Z",
  "modificationTime": "2022-08-02T01:16:14.824Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220802 01:16:18.611" endtime="20220802 01:16:18.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:18.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:18.612" endtime="20220802 01:16:18.612"/>
</kw>
<status status="PASS" starttime="20220802 01:16:14.896" endtime="20220802 01:16:18.613"/>
</kw>
<msg timestamp="20220802 01:16:18.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:14.895" endtime="20220802 01:16:18.613"/>
</kw>
<msg timestamp="20220802 01:16:18.614" level="INFO">${result} = {
  "metadata": {},
  "name": "23679-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220802 01:16:14.895" endtime="20220802 01:16:18.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:16:18.614" endtime="20220802 01:16:18.614"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:18.618" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="23679-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:22.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:22.225" level="INFO">${output} = {
  "metadata": {},
  "name": "23679-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220802 01:16:18.616" endtime="20220802 01:16:22.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:22.227" level="INFO">{
  "metadata": {},
  "name": "23679-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-02T01:16:14.824Z",
  "modificationTime": "2022-08-02T01:16:14.824Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220802 01:16:22.226" endtime="20220802 01:16:22.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:22.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:22.227" endtime="20220802 01:16:22.228"/>
</kw>
<status status="PASS" starttime="20220802 01:16:18.615" endtime="20220802 01:16:22.228"/>
</kw>
<msg timestamp="20220802 01:16:22.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:18.615" endtime="20220802 01:16:22.228"/>
</kw>
<msg timestamp="20220802 01:16:22.229" level="INFO">${result} = {
  "metadata": {},
  "name": "23679-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220802 01:16:18.614" endtime="20220802 01:16:22.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:16:22.229" endtime="20220802 01:16:22.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:22.233" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/23679-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:25.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:25.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:16:22.231" endtime="20220802 01:16:25.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:25.905" level="INFO"/>
<status status="PASS" starttime="20220802 01:16:25.904" endtime="20220802 01:16:25.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:25.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:25.905" endtime="20220802 01:16:25.906"/>
</kw>
<status status="PASS" starttime="20220802 01:16:22.230" endtime="20220802 01:16:25.906"/>
</kw>
<msg timestamp="20220802 01:16:25.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:22.230" endtime="20220802 01:16:25.907"/>
</kw>
<status status="PASS" starttime="20220802 01:16:22.229" endtime="20220802 01:16:25.907"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:25.910" level="INFO">Running command 'ozone sh volume info o3://om:9862/23679-with-host | jq -r '. | select(.name=="23679-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:29.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:29.540" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:16:25.908" endtime="20220802 01:16:29.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:29.542" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220802 01:16:29.541" endtime="20220802 01:16:29.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:29.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:29.542" endtime="20220802 01:16:29.542"/>
</kw>
<status status="PASS" starttime="20220802 01:16:25.908" endtime="20220802 01:16:29.542"/>
</kw>
<msg timestamp="20220802 01:16:29.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:25.908" endtime="20220802 01:16:29.543"/>
</kw>
<msg timestamp="20220802 01:16:29.543" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:16:25.907" endtime="20220802 01:16:29.543"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:16:29.543" endtime="20220802 01:16:29.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:29.547" level="INFO">Running command 'ozone sh bucket create o3://om:9862/23679-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:33.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:33.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:16:29.545" endtime="20220802 01:16:33.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:33.099" level="INFO"/>
<status status="PASS" starttime="20220802 01:16:33.098" endtime="20220802 01:16:33.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:33.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:33.099" endtime="20220802 01:16:33.099"/>
</kw>
<status status="PASS" starttime="20220802 01:16:29.545" endtime="20220802 01:16:33.100"/>
</kw>
<msg timestamp="20220802 01:16:33.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:29.544" endtime="20220802 01:16:33.100"/>
</kw>
<status status="PASS" starttime="20220802 01:16:29.544" endtime="20220802 01:16:33.100"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:33.104" level="INFO">Running command 'ozone sh bucket info o3://om:9862/23679-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:37.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:37.101" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220802 01:16:33.102" endtime="20220802 01:16:37.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:37.103" level="INFO">DISK</msg>
<status status="PASS" starttime="20220802 01:16:37.102" endtime="20220802 01:16:37.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:37.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:37.103" endtime="20220802 01:16:37.103"/>
</kw>
<status status="PASS" starttime="20220802 01:16:33.101" endtime="20220802 01:16:37.104"/>
</kw>
<msg timestamp="20220802 01:16:37.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:33.101" endtime="20220802 01:16:37.104"/>
</kw>
<msg timestamp="20220802 01:16:37.104" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220802 01:16:33.100" endtime="20220802 01:16:37.104"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:16:37.105" endtime="20220802 01:16:37.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:37.109" level="INFO">Running command 'ozone sh bucket info o3://om:9862/23679-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:40.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:40.902" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:16:37.107" endtime="20220802 01:16:40.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:40.903" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220802 01:16:40.902" endtime="20220802 01:16:40.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:40.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:40.903" endtime="20220802 01:16:40.904"/>
</kw>
<status status="PASS" starttime="20220802 01:16:37.106" endtime="20220802 01:16:40.904"/>
</kw>
<msg timestamp="20220802 01:16:40.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:37.106" endtime="20220802 01:16:40.905"/>
</kw>
<msg timestamp="20220802 01:16:40.905" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:16:37.105" endtime="20220802 01:16:40.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:16:40.905" endtime="20220802 01:16:40.905"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:40.909" level="INFO">Running command 'ozone sh bucket info o3://om:9862/23679-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:44.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:44.592" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220802 01:16:40.907" endtime="20220802 01:16:44.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:44.593" level="INFO">100</msg>
<status status="PASS" starttime="20220802 01:16:44.592" endtime="20220802 01:16:44.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:44.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:44.593" endtime="20220802 01:16:44.594"/>
</kw>
<status status="PASS" starttime="20220802 01:16:40.907" endtime="20220802 01:16:44.594"/>
</kw>
<msg timestamp="20220802 01:16:44.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:40.906" endtime="20220802 01:16:44.594"/>
</kw>
<msg timestamp="20220802 01:16:44.594" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220802 01:16:40.905" endtime="20220802 01:16:44.594"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:16:44.595" endtime="20220802 01:16:44.595"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:44.599" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/23679-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:48.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:48.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:16:44.596" endtime="20220802 01:16:48.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:48.166" level="INFO"/>
<status status="PASS" starttime="20220802 01:16:48.166" endtime="20220802 01:16:48.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:48.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:48.167" endtime="20220802 01:16:48.167"/>
</kw>
<status status="PASS" starttime="20220802 01:16:44.596" endtime="20220802 01:16:48.168"/>
</kw>
<msg timestamp="20220802 01:16:48.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:44.596" endtime="20220802 01:16:48.168"/>
</kw>
<status status="PASS" starttime="20220802 01:16:44.595" endtime="20220802 01:16:48.168"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:48.172" level="INFO">Running command 'ozone sh bucket info o3://om:9862/23679-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:52.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:52.110" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220802 01:16:48.170" endtime="20220802 01:16:52.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:52.111" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220802 01:16:52.110" endtime="20220802 01:16:52.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:52.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:52.111" endtime="20220802 01:16:52.112"/>
</kw>
<status status="PASS" starttime="20220802 01:16:48.169" endtime="20220802 01:16:52.112"/>
</kw>
<msg timestamp="20220802 01:16:52.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:48.169" endtime="20220802 01:16:52.113"/>
</kw>
<msg timestamp="20220802 01:16:52.113" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220802 01:16:48.168" endtime="20220802 01:16:52.113"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:16:52.113" endtime="20220802 01:16:52.114"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:52.118" level="INFO">Running command 'ozone sh bucket info o3://om:9862/23679-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:55.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:55.826" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220802 01:16:52.115" endtime="20220802 01:16:55.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:55.828" level="INFO">1000</msg>
<status status="PASS" starttime="20220802 01:16:55.827" endtime="20220802 01:16:55.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:55.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:55.828" endtime="20220802 01:16:55.829"/>
</kw>
<status status="PASS" starttime="20220802 01:16:52.115" endtime="20220802 01:16:55.829"/>
</kw>
<msg timestamp="20220802 01:16:55.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:52.115" endtime="20220802 01:16:55.829"/>
</kw>
<msg timestamp="20220802 01:16:55.830" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220802 01:16:52.114" endtime="20220802 01:16:55.830"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:16:55.830" endtime="20220802 01:16:55.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:55.834" level="INFO">Running command 'ozone sh bucket list o3://om:9862/23679-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:16:59.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:16:59.751" level="INFO">${output} = 23679-with-host</msg>
<status status="PASS" starttime="20220802 01:16:55.832" endtime="20220802 01:16:59.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:16:59.752" level="INFO">23679-with-host</msg>
<status status="PASS" starttime="20220802 01:16:59.751" endtime="20220802 01:16:59.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:16:59.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:16:59.752" endtime="20220802 01:16:59.753"/>
</kw>
<status status="PASS" starttime="20220802 01:16:55.831" endtime="20220802 01:16:59.753"/>
</kw>
<msg timestamp="20220802 01:16:59.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:55.831" endtime="20220802 01:16:59.753"/>
</kw>
<msg timestamp="20220802 01:16:59.754" level="INFO">${result} = 23679-with-host</msg>
<status status="PASS" starttime="20220802 01:16:55.830" endtime="20220802 01:16:59.754"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:16:59.754" endtime="20220802 01:16:59.754"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:16:59.758" level="INFO">Running command 'ozone sh key put o3://om:9862/23679-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:05.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:05.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:16:59.756" endtime="20220802 01:17:05.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:05.108" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:05.107" endtime="20220802 01:17:05.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:05.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:05.108" endtime="20220802 01:17:05.109"/>
</kw>
<status status="PASS" starttime="20220802 01:16:59.756" endtime="20220802 01:17:05.109"/>
</kw>
<msg timestamp="20220802 01:17:05.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:16:59.756" endtime="20220802 01:17:05.110"/>
</kw>
<status status="PASS" starttime="20220802 01:16:59.755" endtime="20220802 01:17:05.110"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:05.113" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:05.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:05.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:05.111" endtime="20220802 01:17:05.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:05.116" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:05.116" endtime="20220802 01:17:05.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:05.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:05.117" endtime="20220802 01:17:05.117"/>
</kw>
<status status="PASS" starttime="20220802 01:17:05.111" endtime="20220802 01:17:05.117"/>
</kw>
<msg timestamp="20220802 01:17:05.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:05.110" endtime="20220802 01:17:05.118"/>
</kw>
<status status="PASS" starttime="20220802 01:17:05.110" endtime="20220802 01:17:05.118"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:05.121" level="INFO">Running command 'ozone sh key get o3://om:9862/23679-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:10.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:10.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:05.119" endtime="20220802 01:17:10.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:10.852" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:10.852" endtime="20220802 01:17:10.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:10.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:10.853" endtime="20220802 01:17:10.853"/>
</kw>
<status status="PASS" starttime="20220802 01:17:05.119" endtime="20220802 01:17:10.853"/>
</kw>
<msg timestamp="20220802 01:17:10.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:05.119" endtime="20220802 01:17:10.854"/>
</kw>
<status status="PASS" starttime="20220802 01:17:05.118" endtime="20220802 01:17:10.854"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:10.857" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:10.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:10.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:10.856" endtime="20220802 01:17:10.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:10.861" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:10.860" endtime="20220802 01:17:10.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:10.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:10.861" endtime="20220802 01:17:10.861"/>
</kw>
<status status="PASS" starttime="20220802 01:17:10.855" endtime="20220802 01:17:10.861"/>
</kw>
<msg timestamp="20220802 01:17:10.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:10.855" endtime="20220802 01:17:10.862"/>
</kw>
<status status="PASS" starttime="20220802 01:17:10.854" endtime="20220802 01:17:10.862"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:10.865" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/23679-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:16.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:16.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:10.863" endtime="20220802 01:17:16.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:16.446" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:16.446" endtime="20220802 01:17:16.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:16.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:16.447" endtime="20220802 01:17:16.447"/>
</kw>
<status status="PASS" starttime="20220802 01:17:10.863" endtime="20220802 01:17:16.447"/>
</kw>
<msg timestamp="20220802 01:17:16.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:10.863" endtime="20220802 01:17:16.448"/>
</kw>
<status status="PASS" starttime="20220802 01:17:10.862" endtime="20220802 01:17:16.448"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:16.452" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:16.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:16.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:16.450" endtime="20220802 01:17:16.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:16.456" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:16.455" endtime="20220802 01:17:16.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:16.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:16.456" endtime="20220802 01:17:16.456"/>
</kw>
<status status="PASS" starttime="20220802 01:17:16.449" endtime="20220802 01:17:16.456"/>
</kw>
<msg timestamp="20220802 01:17:16.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:16.449" endtime="20220802 01:17:16.457"/>
</kw>
<status status="PASS" starttime="20220802 01:17:16.448" endtime="20220802 01:17:16.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:16.461" level="INFO">Running command 'ozone sh key get o3://om:9862/23679-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:21.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:21.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:16.459" endtime="20220802 01:17:21.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:21.836" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:21.835" endtime="20220802 01:17:21.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:21.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:21.836" endtime="20220802 01:17:21.837"/>
</kw>
<status status="PASS" starttime="20220802 01:17:16.458" endtime="20220802 01:17:21.837"/>
</kw>
<msg timestamp="20220802 01:17:21.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:16.458" endtime="20220802 01:17:21.837"/>
</kw>
<status status="PASS" starttime="20220802 01:17:16.457" endtime="20220802 01:17:21.838"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:21.841" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:21.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:21.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:21.839" endtime="20220802 01:17:21.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:21.844" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:21.843" endtime="20220802 01:17:21.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:21.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:21.844" endtime="20220802 01:17:21.845"/>
</kw>
<status status="PASS" starttime="20220802 01:17:21.838" endtime="20220802 01:17:21.845"/>
</kw>
<msg timestamp="20220802 01:17:21.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:21.838" endtime="20220802 01:17:21.845"/>
</kw>
<status status="PASS" starttime="20220802 01:17:21.838" endtime="20220802 01:17:21.846"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:21.849" level="INFO">Running command 'ozone sh key info o3://om:9862/23679-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:25.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:25.766" level="INFO">${output} = {
  "volumeName": "23679-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:17:14.287Z",
  "modificationTime": "2022-08-02T01:17:16.003Z",...</msg>
<status status="PASS" starttime="20220802 01:17:21.847" endtime="20220802 01:17:25.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:25.768" level="INFO">{
  "volumeName": "23679-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:17:14.287Z",
  "modificationTime": "2022-08-02T01:17:16.003Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220802 01:17:25.767" endtime="20220802 01:17:25.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:25.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:25.768" endtime="20220802 01:17:25.768"/>
</kw>
<status status="PASS" starttime="20220802 01:17:21.847" endtime="20220802 01:17:25.769"/>
</kw>
<msg timestamp="20220802 01:17:25.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:21.846" endtime="20220802 01:17:25.769"/>
</kw>
<msg timestamp="20220802 01:17:25.769" level="INFO">${result} = {
  "volumeName": "23679-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:17:14.287Z",
  "modificationTime": "2022-08-02T01:17:16.003Z",...</msg>
<status status="PASS" starttime="20220802 01:17:21.846" endtime="20220802 01:17:25.769"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:17:25.770" endtime="20220802 01:17:25.770"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:25.773" level="INFO">Running command 'ozone sh key delete o3://om:9862/23679-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:29.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:29.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:25.771" endtime="20220802 01:17:29.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:29.508" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:29.508" endtime="20220802 01:17:29.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:29.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:29.508" endtime="20220802 01:17:29.509"/>
</kw>
<status status="PASS" starttime="20220802 01:17:25.771" endtime="20220802 01:17:29.509"/>
</kw>
<msg timestamp="20220802 01:17:29.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:25.771" endtime="20220802 01:17:29.510"/>
</kw>
<status status="PASS" starttime="20220802 01:17:25.770" endtime="20220802 01:17:29.510"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:29.514" level="INFO">Running command 'ozone sh key cp o3://om:9862/23679-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:35.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:35.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:29.512" endtime="20220802 01:17:35.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:35.187" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:35.187" endtime="20220802 01:17:35.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:35.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:35.188" endtime="20220802 01:17:35.188"/>
</kw>
<status status="PASS" starttime="20220802 01:17:29.512" endtime="20220802 01:17:35.188"/>
</kw>
<msg timestamp="20220802 01:17:35.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:29.511" endtime="20220802 01:17:35.189"/>
</kw>
<status status="PASS" starttime="20220802 01:17:29.510" endtime="20220802 01:17:35.189"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:35.193" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:35.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:35.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:35.190" endtime="20220802 01:17:35.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:35.196" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:35.196" endtime="20220802 01:17:35.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:35.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:35.196" endtime="20220802 01:17:35.197"/>
</kw>
<status status="PASS" starttime="20220802 01:17:35.190" endtime="20220802 01:17:35.197"/>
</kw>
<msg timestamp="20220802 01:17:35.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:35.190" endtime="20220802 01:17:35.198"/>
</kw>
<status status="PASS" starttime="20220802 01:17:35.189" endtime="20220802 01:17:35.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:35.201" level="INFO">Running command 'ozone sh key get o3://om:9862/23679-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:40.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:40.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:35.199" endtime="20220802 01:17:40.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:40.775" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:40.775" endtime="20220802 01:17:40.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:40.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:40.776" endtime="20220802 01:17:40.776"/>
</kw>
<status status="PASS" starttime="20220802 01:17:35.199" endtime="20220802 01:17:40.777"/>
</kw>
<msg timestamp="20220802 01:17:40.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:35.198" endtime="20220802 01:17:40.778"/>
</kw>
<status status="PASS" starttime="20220802 01:17:35.198" endtime="20220802 01:17:40.778"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:40.781" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:40.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:40.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:40.779" endtime="20220802 01:17:40.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:40.785" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:40.784" endtime="20220802 01:17:40.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:40.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:40.785" endtime="20220802 01:17:40.786"/>
</kw>
<status status="PASS" starttime="20220802 01:17:40.779" endtime="20220802 01:17:40.786"/>
</kw>
<msg timestamp="20220802 01:17:40.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:40.779" endtime="20220802 01:17:40.787"/>
</kw>
<status status="PASS" starttime="20220802 01:17:40.778" endtime="20220802 01:17:40.787"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:40.791" level="INFO">Running command 'ozone sh key delete o3://om:9862/23679-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:44.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:44.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:40.789" endtime="20220802 01:17:44.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:44.216" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:44.215" endtime="20220802 01:17:44.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:44.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:44.217" endtime="20220802 01:17:44.217"/>
</kw>
<status status="PASS" starttime="20220802 01:17:40.788" endtime="20220802 01:17:44.218"/>
</kw>
<msg timestamp="20220802 01:17:44.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:40.788" endtime="20220802 01:17:44.218"/>
</kw>
<status status="PASS" starttime="20220802 01:17:40.787" endtime="20220802 01:17:44.218"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:44.221" level="INFO">Running command 'ozone sh key get o3://om:9862/23679-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:47.448" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:17:47.448" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220802 01:17:44.219" endtime="20220802 01:17:47.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:47.450" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220802 01:17:47.449" endtime="20220802 01:17:47.450"/>
</kw>
<msg timestamp="20220802 01:17:47.450" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220802 01:17:44.218" endtime="20220802 01:17:47.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:17:47.450" endtime="20220802 01:17:47.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:47.454" level="INFO">Running command 'ozone sh key get --force o3://om:9862/23679-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:52.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:52.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:17:47.452" endtime="20220802 01:17:52.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:52.442" level="INFO"/>
<status status="PASS" starttime="20220802 01:17:52.441" endtime="20220802 01:17:52.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:52.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:52.442" endtime="20220802 01:17:52.443"/>
</kw>
<status status="PASS" starttime="20220802 01:17:47.452" endtime="20220802 01:17:52.443"/>
</kw>
<msg timestamp="20220802 01:17:52.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:47.451" endtime="20220802 01:17:52.444"/>
</kw>
<msg timestamp="20220802 01:17:52.444" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:17:47.451" endtime="20220802 01:17:52.444"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:17:52.444" endtime="20220802 01:17:52.444"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:52.448" level="INFO">Running command 'ozone sh key info o3://om:9862/23679-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:17:56.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:17:56.425" level="INFO">${output} = {
  "volumeName": "23679-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:17:02.994Z",
  "modificationTime": "2022-08-02T01:17:04.613Z",
  "re...</msg>
<status status="PASS" starttime="20220802 01:17:52.446" endtime="20220802 01:17:56.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:17:56.427" level="INFO">{
  "volumeName": "23679-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:17:02.994Z",
  "modificationTime": "2022-08-02T01:17:04.613Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 3,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220802 01:17:56.426" endtime="20220802 01:17:56.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:17:56.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:17:56.427" endtime="20220802 01:17:56.427"/>
</kw>
<status status="PASS" starttime="20220802 01:17:52.446" endtime="20220802 01:17:56.428"/>
</kw>
<msg timestamp="20220802 01:17:56.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:52.445" endtime="20220802 01:17:56.428"/>
</kw>
<msg timestamp="20220802 01:17:56.428" level="INFO">${result} = {
  "volumeName": "23679-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:17:02.994Z",
  "modificationTime": "2022-08-02T01:17:04.613Z",
  "re...</msg>
<status status="PASS" starttime="20220802 01:17:52.444" endtime="20220802 01:17:56.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:17:56.429" endtime="20220802 01:17:56.429"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:17:56.433" level="INFO">Running command 'ozone sh key list o3://om:9862/23679-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:00.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:00.397" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220802 01:17:56.431" endtime="20220802 01:18:00.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:00.398" level="INFO">key1</msg>
<status status="PASS" starttime="20220802 01:18:00.397" endtime="20220802 01:18:00.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:00.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:00.398" endtime="20220802 01:18:00.399"/>
</kw>
<status status="PASS" starttime="20220802 01:17:56.430" endtime="20220802 01:18:00.399"/>
</kw>
<msg timestamp="20220802 01:18:00.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:17:56.430" endtime="20220802 01:18:00.400"/>
</kw>
<msg timestamp="20220802 01:18:00.400" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220802 01:17:56.429" endtime="20220802 01:18:00.400"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:18:00.400" endtime="20220802 01:18:00.401"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:00.405" level="INFO">Running command 'ozone sh key rename o3://om:9862/23679-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:04.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:04.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:18:00.402" endtime="20220802 01:18:04.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:04.093" level="INFO"/>
<status status="PASS" starttime="20220802 01:18:04.092" endtime="20220802 01:18:04.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:04.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:04.093" endtime="20220802 01:18:04.094"/>
</kw>
<status status="PASS" starttime="20220802 01:18:00.402" endtime="20220802 01:18:04.094"/>
</kw>
<msg timestamp="20220802 01:18:04.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:00.401" endtime="20220802 01:18:04.094"/>
</kw>
<status status="PASS" starttime="20220802 01:18:00.401" endtime="20220802 01:18:04.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:04.098" level="INFO">Running command 'ozone sh key list o3://om:9862/23679-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:08.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:08.169" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220802 01:18:04.096" endtime="20220802 01:18:08.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:08.171" level="INFO">key2</msg>
<status status="PASS" starttime="20220802 01:18:08.170" endtime="20220802 01:18:08.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:08.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:08.171" endtime="20220802 01:18:08.171"/>
</kw>
<status status="PASS" starttime="20220802 01:18:04.095" endtime="20220802 01:18:08.172"/>
</kw>
<msg timestamp="20220802 01:18:08.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:04.095" endtime="20220802 01:18:08.172"/>
</kw>
<msg timestamp="20220802 01:18:08.173" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220802 01:18:04.095" endtime="20220802 01:18:08.173"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:18:08.173" endtime="20220802 01:18:08.173"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:08.177" level="INFO">Running command 'ozone sh key delete o3://om:9862/23679-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:11.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:11.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:18:08.175" endtime="20220802 01:18:11.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:11.656" level="INFO"/>
<status status="PASS" starttime="20220802 01:18:11.655" endtime="20220802 01:18:11.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:11.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:11.656" endtime="20220802 01:18:11.657"/>
</kw>
<status status="PASS" starttime="20220802 01:18:08.174" endtime="20220802 01:18:11.657"/>
</kw>
<msg timestamp="20220802 01:18:11.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:08.174" endtime="20220802 01:18:11.658"/>
</kw>
<status status="PASS" starttime="20220802 01:18:08.173" endtime="20220802 01:18:11.658"/>
</kw>
<status status="PASS" starttime="20220802 01:16:59.755" endtime="20220802 01:18:11.658"/>
</kw>
<status status="PASS" starttime="20220802 01:16:59.754" endtime="20220802 01:18:11.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:11.661" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/23679-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:15.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:15.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:18:11.659" endtime="20220802 01:18:15.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:15.218" level="INFO"/>
<status status="PASS" starttime="20220802 01:18:15.217" endtime="20220802 01:18:15.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:15.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:15.218" endtime="20220802 01:18:15.218"/>
</kw>
<status status="PASS" starttime="20220802 01:18:11.659" endtime="20220802 01:18:15.219"/>
</kw>
<msg timestamp="20220802 01:18:15.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:11.659" endtime="20220802 01:18:15.219"/>
</kw>
<status status="PASS" starttime="20220802 01:18:11.658" endtime="20220802 01:18:15.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:15.223" level="INFO">Running command 'ozone sh volume info o3://om:9862/23679-with-host | jq -r '. | select(.name=="23679-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:18.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:18.829" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:18:15.221" endtime="20220802 01:18:18.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:18.832" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:18:18.830" endtime="20220802 01:18:18.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:18.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:18.833" endtime="20220802 01:18:18.833"/>
</kw>
<status status="PASS" starttime="20220802 01:18:15.220" endtime="20220802 01:18:18.834"/>
</kw>
<msg timestamp="20220802 01:18:18.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:15.220" endtime="20220802 01:18:18.834"/>
</kw>
<msg timestamp="20220802 01:18:18.834" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:18:15.219" endtime="20220802 01:18:18.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:18:18.835" endtime="20220802 01:18:18.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:18.839" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/23679-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:22.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:22.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:18:18.837" endtime="20220802 01:18:22.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:22.307" level="INFO"/>
<status status="PASS" starttime="20220802 01:18:22.306" endtime="20220802 01:18:22.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:22.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:22.307" endtime="20220802 01:18:22.308"/>
</kw>
<status status="PASS" starttime="20220802 01:18:18.836" endtime="20220802 01:18:22.308"/>
</kw>
<msg timestamp="20220802 01:18:22.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:18.836" endtime="20220802 01:18:22.309"/>
</kw>
<status status="PASS" starttime="20220802 01:18:18.835" endtime="20220802 01:18:22.309"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:22.313" level="INFO">Running command 'ozone sh volume info o3://om:9862/23679-with-host | jq -r '. | select(.name=="23679-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:25.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:25.897" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:18:22.311" endtime="20220802 01:18:25.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:25.898" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:18:25.898" endtime="20220802 01:18:25.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:25.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:25.899" endtime="20220802 01:18:25.899"/>
</kw>
<status status="PASS" starttime="20220802 01:18:22.310" endtime="20220802 01:18:25.899"/>
</kw>
<msg timestamp="20220802 01:18:25.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:22.310" endtime="20220802 01:18:25.900"/>
</kw>
<msg timestamp="20220802 01:18:25.900" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:18:22.309" endtime="20220802 01:18:25.900"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:18:25.900" endtime="20220802 01:18:25.901"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:25.904" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/23679-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:29.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:29.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:18:25.902" endtime="20220802 01:18:29.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:29.580" level="INFO"/>
<status status="PASS" starttime="20220802 01:18:29.580" endtime="20220802 01:18:29.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:29.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:29.581" endtime="20220802 01:18:29.581"/>
</kw>
<status status="PASS" starttime="20220802 01:18:25.901" endtime="20220802 01:18:29.581"/>
</kw>
<msg timestamp="20220802 01:18:29.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:25.901" endtime="20220802 01:18:29.582"/>
</kw>
<status status="PASS" starttime="20220802 01:18:25.901" endtime="20220802 01:18:29.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:29.586" level="INFO">Running command 'ozone sh bucket info o3://om:9862/23679-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:33.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:33.595" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:18:29.584" endtime="20220802 01:18:33.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:33.596" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:18:33.595" endtime="20220802 01:18:33.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:33.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:33.596" endtime="20220802 01:18:33.597"/>
</kw>
<status status="PASS" starttime="20220802 01:18:29.583" endtime="20220802 01:18:33.597"/>
</kw>
<msg timestamp="20220802 01:18:33.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:29.583" endtime="20220802 01:18:33.598"/>
</kw>
<msg timestamp="20220802 01:18:33.598" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:18:29.582" endtime="20220802 01:18:33.598"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:18:33.598" endtime="20220802 01:18:33.599"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:33.602" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/23679-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:37.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:37.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:18:33.600" endtime="20220802 01:18:37.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:37.457" level="INFO"/>
<status status="PASS" starttime="20220802 01:18:37.456" endtime="20220802 01:18:37.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:37.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:37.457" endtime="20220802 01:18:37.458"/>
</kw>
<status status="PASS" starttime="20220802 01:18:33.600" endtime="20220802 01:18:37.458"/>
</kw>
<msg timestamp="20220802 01:18:37.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:33.599" endtime="20220802 01:18:37.459"/>
</kw>
<status status="PASS" starttime="20220802 01:18:33.599" endtime="20220802 01:18:37.459"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:37.463" level="INFO">Running command 'ozone sh bucket info o3://om:9862/23679-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:41.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:41.177" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:18:37.461" endtime="20220802 01:18:41.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:41.178" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:18:41.177" endtime="20220802 01:18:41.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:41.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:41.178" endtime="20220802 01:18:41.178"/>
</kw>
<status status="PASS" starttime="20220802 01:18:37.460" endtime="20220802 01:18:41.179"/>
</kw>
<msg timestamp="20220802 01:18:41.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:37.460" endtime="20220802 01:18:41.179"/>
</kw>
<msg timestamp="20220802 01:18:41.179" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:18:37.459" endtime="20220802 01:18:41.179"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:18:41.180" endtime="20220802 01:18:41.180"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:41.183" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/23679-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:44.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:44.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:18:41.181" endtime="20220802 01:18:44.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:44.591" level="INFO"/>
<status status="PASS" starttime="20220802 01:18:44.591" endtime="20220802 01:18:44.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:44.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:44.591" endtime="20220802 01:18:44.592"/>
</kw>
<status status="PASS" starttime="20220802 01:18:41.181" endtime="20220802 01:18:44.592"/>
</kw>
<msg timestamp="20220802 01:18:44.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:41.181" endtime="20220802 01:18:44.593"/>
</kw>
<status status="PASS" starttime="20220802 01:18:41.180" endtime="20220802 01:18:44.593"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:44.596" level="INFO">Running command 'ozone sh volume delete o3://om:9862/23679-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:48.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:48.112" level="INFO">${output} = Volume 23679-with-host is deleted</msg>
<status status="PASS" starttime="20220802 01:18:44.594" endtime="20220802 01:18:48.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:48.113" level="INFO">Volume 23679-with-host is deleted</msg>
<status status="PASS" starttime="20220802 01:18:48.113" endtime="20220802 01:18:48.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:48.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:48.114" endtime="20220802 01:18:48.114"/>
</kw>
<status status="PASS" starttime="20220802 01:18:44.594" endtime="20220802 01:18:48.114"/>
</kw>
<msg timestamp="20220802 01:18:48.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:44.594" endtime="20220802 01:18:48.115"/>
</kw>
<status status="PASS" starttime="20220802 01:18:44.593" endtime="20220802 01:18:48.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:48.118" level="INFO">Running command 'ozone sh volume create o3://om:9862/23679-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:51.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:51.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:18:48.116" endtime="20220802 01:18:51.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:51.557" level="INFO"/>
<status status="PASS" starttime="20220802 01:18:51.556" endtime="20220802 01:18:51.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:51.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:51.557" endtime="20220802 01:18:51.558"/>
</kw>
<status status="PASS" starttime="20220802 01:18:48.116" endtime="20220802 01:18:51.558"/>
</kw>
<msg timestamp="20220802 01:18:51.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:48.116" endtime="20220802 01:18:51.559"/>
</kw>
<status status="PASS" starttime="20220802 01:18:48.115" endtime="20220802 01:18:51.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:51.563" level="INFO">Running command 'ozone sh volume info o3://om:9862/23679-with-host | jq -r '. | select(.name=="23679-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:55.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:55.139" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:18:51.561" endtime="20220802 01:18:55.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:55.140" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:18:55.140" endtime="20220802 01:18:55.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:55.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:55.141" endtime="20220802 01:18:55.141"/>
</kw>
<status status="PASS" starttime="20220802 01:18:51.560" endtime="20220802 01:18:55.141"/>
</kw>
<msg timestamp="20220802 01:18:55.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:51.560" endtime="20220802 01:18:55.142"/>
</kw>
<msg timestamp="20220802 01:18:55.142" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:18:51.559" endtime="20220802 01:18:55.142"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:18:55.142" endtime="20220802 01:18:55.143"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:55.146" level="INFO">Running command 'ozone sh volume info o3://om:9862/23679-with-host | jq -r '. | select(.name=="23679-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:18:58.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:18:58.844" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:18:55.144" endtime="20220802 01:18:58.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:18:58.845" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:18:58.844" endtime="20220802 01:18:58.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:18:58.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:18:58.845" endtime="20220802 01:18:58.846"/>
</kw>
<status status="PASS" starttime="20220802 01:18:55.144" endtime="20220802 01:18:58.846"/>
</kw>
<msg timestamp="20220802 01:18:58.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:55.144" endtime="20220802 01:18:58.847"/>
</kw>
<msg timestamp="20220802 01:18:58.847" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:18:55.143" endtime="20220802 01:18:58.847"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:18:58.847" endtime="20220802 01:18:58.847"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:18:58.850" level="INFO">Running command 'ozone sh bucket create o3://om:9862/23679-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:02.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:02.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:18:58.849" endtime="20220802 01:19:02.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:02.183" level="INFO"/>
<status status="PASS" starttime="20220802 01:19:02.182" endtime="20220802 01:19:02.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:02.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:02.183" endtime="20220802 01:19:02.184"/>
</kw>
<status status="PASS" starttime="20220802 01:18:58.848" endtime="20220802 01:19:02.184"/>
</kw>
<msg timestamp="20220802 01:19:02.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:18:58.848" endtime="20220802 01:19:02.184"/>
</kw>
<status status="PASS" starttime="20220802 01:18:58.847" endtime="20220802 01:19:02.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:02.188" level="INFO">Running command 'ozone sh bucket info o3://om:9862/23679-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:05.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:05.796" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:19:02.186" endtime="20220802 01:19:05.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:05.797" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:19:05.796" endtime="20220802 01:19:05.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:05.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:05.797" endtime="20220802 01:19:05.798"/>
</kw>
<status status="PASS" starttime="20220802 01:19:02.186" endtime="20220802 01:19:05.798"/>
</kw>
<msg timestamp="20220802 01:19:05.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:02.185" endtime="20220802 01:19:05.799"/>
</kw>
<msg timestamp="20220802 01:19:05.799" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:19:02.185" endtime="20220802 01:19:05.799"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:19:05.799" endtime="20220802 01:19:05.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:05.804" level="INFO">Running command 'ozone sh bucket info o3://om:9862/23679-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:09.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:09.554" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:19:05.801" endtime="20220802 01:19:09.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:09.555" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:19:09.555" endtime="20220802 01:19:09.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:09.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:09.555" endtime="20220802 01:19:09.556"/>
</kw>
<status status="PASS" starttime="20220802 01:19:05.801" endtime="20220802 01:19:09.556"/>
</kw>
<msg timestamp="20220802 01:19:09.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:05.801" endtime="20220802 01:19:09.557"/>
</kw>
<msg timestamp="20220802 01:19:09.557" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:19:05.800" endtime="20220802 01:19:09.557"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:19:09.557" endtime="20220802 01:19:09.557"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:09.561" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/23679-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:13.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:13.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:19:09.559" endtime="20220802 01:19:13.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:13.006" level="INFO"/>
<status status="PASS" starttime="20220802 01:19:13.006" endtime="20220802 01:19:13.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:13.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:13.007" endtime="20220802 01:19:13.007"/>
</kw>
<status status="PASS" starttime="20220802 01:19:09.558" endtime="20220802 01:19:13.008"/>
</kw>
<msg timestamp="20220802 01:19:13.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:09.558" endtime="20220802 01:19:13.008"/>
</kw>
<status status="PASS" starttime="20220802 01:19:09.558" endtime="20220802 01:19:13.008"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:13.012" level="INFO">Running command 'ozone sh volume delete o3://om:9862/23679-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:16.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:16.293" level="INFO">${output} = Volume 23679-with-host is deleted</msg>
<status status="PASS" starttime="20220802 01:19:13.010" endtime="20220802 01:19:16.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:16.294" level="INFO">Volume 23679-with-host is deleted</msg>
<status status="PASS" starttime="20220802 01:19:16.293" endtime="20220802 01:19:16.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:16.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:16.294" endtime="20220802 01:19:16.295"/>
</kw>
<status status="PASS" starttime="20220802 01:19:13.009" endtime="20220802 01:19:16.295"/>
</kw>
<msg timestamp="20220802 01:19:16.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:13.009" endtime="20220802 01:19:16.296"/>
</kw>
<status status="PASS" starttime="20220802 01:19:13.008" endtime="20220802 01:19:16.296"/>
</kw>
<status status="PASS" starttime="20220802 01:16:08.192" endtime="20220802 01:19:16.296"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:16:08.057" endtime="20220802 01:19:16.296"/>
</test>
<test id="s1-s1-s5-t2" name="RpcClient with execution errors" line="29">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:16.302" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:16.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:16.305" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:19:16.300" endtime="20220802 01:19:16.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:16.305" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:19:16.305" endtime="20220802 01:19:16.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:16.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:16.306" endtime="20220802 01:19:16.306"/>
</kw>
<status status="PASS" starttime="20220802 01:19:16.299" endtime="20220802 01:19:16.306"/>
</kw>
<msg timestamp="20220802 01:19:16.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:16.299" endtime="20220802 01:19:16.307"/>
</kw>
<msg timestamp="20220802 01:19:16.307" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:19:16.298" endtime="20220802 01:19:16.307"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:19:16.308" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:19:16.307" endtime="20220802 01:19:16.308"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:16.312" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:16.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:16.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:19:16.310" endtime="20220802 01:19:16.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:16.387" level="INFO"/>
<status status="PASS" starttime="20220802 01:19:16.387" endtime="20220802 01:19:16.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:16.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:16.388" endtime="20220802 01:19:16.388"/>
</kw>
<status status="PASS" starttime="20220802 01:19:16.309" endtime="20220802 01:19:16.388"/>
</kw>
<msg timestamp="20220802 01:19:16.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:16.309" endtime="20220802 01:19:16.389"/>
</kw>
<status status="PASS" starttime="20220802 01:19:16.308" endtime="20220802 01:19:16.389"/>
</kw>
<status status="PASS" starttime="20220802 01:19:16.308" endtime="20220802 01:19:16.389"/>
</kw>
<status status="PASS" starttime="20220802 01:19:16.298" endtime="20220802 01:19:16.390"/>
</kw>
<status status="PASS" starttime="20220802 01:19:16.297" endtime="20220802 01:19:16.390"/>
</kw>
<kw name="Test ozone shell errors" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-errors</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota invalid</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:16.393" level="INFO">Running command 'ozone sh volume create o3://om:9862/23679-with-errors --space-quota invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:19.721" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:19:19.721" level="INFO">${output} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20220802 01:19:16.391" endtime="20220802 01:19:19.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:19.722" level="INFO">Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20220802 01:19:19.721" endtime="20220802 01:19:19.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:19.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:19.722" endtime="20220802 01:19:19.723"/>
</kw>
<msg timestamp="20220802 01:19:19.723" level="INFO">${result} = Invalid values for quota, to ensure that the Quota format is legal(supported values are B, KB, MB, GB and TB). And the quota value cannot be greater than Long.MAX_VALUE BYTES</msg>
<status status="PASS" starttime="20220802 01:19:16.391" endtime="20220802 01:19:19.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:19:19.723" endtime="20220802 01:19:19.723"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:19.726" level="INFO">Running command 'ozone sh volume create o3://om:9862/23679-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:22.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:22.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:19:19.724" endtime="20220802 01:19:22.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:22.920" level="INFO"/>
<status status="PASS" starttime="20220802 01:19:22.920" endtime="20220802 01:19:22.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:22.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:22.921" endtime="20220802 01:19:22.921"/>
</kw>
<status status="PASS" starttime="20220802 01:19:19.723" endtime="20220802 01:19:22.921"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket_1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:22.925" level="INFO">Running command 'ozone sh bucket create o3://om:9862/23679-with-errors/bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:26.307" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:19:26.307" level="INFO">${output} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20220802 01:19:22.922" endtime="20220802 01:19:26.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:26.308" level="INFO">INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20220802 01:19:26.307" endtime="20220802 01:19:26.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:26.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:26.308" endtime="20220802 01:19:26.309"/>
</kw>
<msg timestamp="20220802 01:19:26.309" level="INFO">${result} = INVALID_BUCKET_NAME Bucket or Volume name has an unsupported character : _</msg>
<status status="PASS" starttime="20220802 01:19:22.921" endtime="20220802 01:19:26.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>INVALID_BUCKET_NAME</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:19:26.309" endtime="20220802 01:19:26.310"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1 --layout Invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:26.312" level="INFO">Running command 'ozone sh bucket create o3://om:9862/23679-with-errors/bucket1 --layout Invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:28.205" level="INFO">${rc} = 2</msg>
<msg timestamp="20220802 01:19:28.205" level="INFO">${output} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20220802 01:19:26.310" endtime="20220802 01:19:28.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:28.206" level="INFO">Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could start with o3:// or without prefix.
                             URI may contain the host/serviceId and port of the
                             OM server. Both are optional. If they are not
                             specified it will be identified from the config
                             files.
  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20220802 01:19:28.205" endtime="20220802 01:19:28.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:28.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:28.206" endtime="20220802 01:19:28.207"/>
</kw>
<msg timestamp="20220802 01:19:28.207" level="INFO">${result} = Invalid value for option '--layout': expected one of [FILE_SYSTEM_OPTIMIZED, OBJECT_STORE, LEGACY] (case-sensitive) but was 'Invalid'
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBu...</msg>
<status status="PASS" starttime="20220802 01:19:26.310" endtime="20220802 01:19:28.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Usage</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:19:28.207" endtime="20220802 01:19:28.207"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:28.210" level="INFO">Running command 'ozone sh bucket create o3://om:9862/23679-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:31.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:31.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:19:28.208" endtime="20220802 01:19:31.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:31.466" level="INFO"/>
<status status="PASS" starttime="20220802 01:19:31.465" endtime="20220802 01:19:31.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:31.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:31.466" endtime="20220802 01:19:31.467"/>
</kw>
<status status="PASS" starttime="20220802 01:19:28.208" endtime="20220802 01:19:31.467"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bucket1/non-existing</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:31.469" level="INFO">Running command 'ozone sh key info o3://om:9862/23679-with-errors/bucket1/non-existing 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:35.027" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:19:35.027" level="INFO">${output} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20220802 01:19:31.468" endtime="20220802 01:19:35.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:35.028" level="INFO">KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20220802 01:19:35.028" endtime="20220802 01:19:35.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:35.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:35.029" endtime="20220802 01:19:35.029"/>
</kw>
<msg timestamp="20220802 01:19:35.030" level="INFO">${result} = KEY_NOT_FOUND Key:non-existing not found</msg>
<status status="PASS" starttime="20220802 01:19:31.467" endtime="20220802 01:19:35.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>KEY_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:19:35.030" endtime="20220802 01:19:35.030"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put ${protocol}${server}/${volume}/bucket1/key1 unexisting --type invalid</arg>
<arg>2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:35.033" level="INFO">Running command 'ozone sh key put o3://om:9862/23679-with-errors/bucket1/key1 unexisting --type invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:36.773" level="INFO">${rc} = 2</msg>
<msg timestamp="20220802 01:19:36.773" level="INFO">${output} = Invalid value for option '--replication-type': expected one of [RATIS, STAND_ALONE, CHAINED, EC] (case-sensitive) but was 'invalid'
Usage: ozone sh key put [-hV] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;...</msg>
<status status="PASS" starttime="20220802 01:19:35.031" endtime="20220802 01:19:36.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:36.774" level="INFO">Invalid value for option '--replication-type': expected one of [RATIS, STAND_ALONE, CHAINED, EC] (case-sensitive) but was 'invalid'
Usage: ozone sh key put [-hV] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt; &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could start with o3:// or without prefix. URI may
                     contain the host/serviceId and port of the OM server. Both
                     are optional. If they are not specified it will be
                     identified from the config files.
      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20220802 01:19:36.774" endtime="20220802 01:19:36.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:36.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:36.775" endtime="20220802 01:19:36.775"/>
</kw>
<msg timestamp="20220802 01:19:36.775" level="INFO">${result} = Invalid value for option '--replication-type': expected one of [RATIS, STAND_ALONE, CHAINED, EC] (case-sensitive) but was 'invalid'
Usage: ozone sh key put [-hV] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;...</msg>
<status status="PASS" starttime="20220802 01:19:35.030" endtime="20220802 01:19:36.775"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bucket1</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:36.778" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/23679-with-errors/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:40.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:40.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:19:36.776" endtime="20220802 01:19:40.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:40.248" level="INFO"/>
<status status="PASS" starttime="20220802 01:19:40.248" endtime="20220802 01:19:40.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:40.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:40.248" endtime="20220802 01:19:40.249"/>
</kw>
<status status="PASS" starttime="20220802 01:19:36.776" endtime="20220802 01:19:40.249"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:40.252" level="INFO">Running command 'ozone sh volume delete o3://om:9862/23679-with-errors 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:43.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:43.571" level="INFO">${output} = Volume 23679-with-errors is deleted</msg>
<status status="PASS" starttime="20220802 01:19:40.250" endtime="20220802 01:19:43.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:43.572" level="INFO">Volume 23679-with-errors is deleted</msg>
<status status="PASS" starttime="20220802 01:19:43.571" endtime="20220802 01:19:43.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:43.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:43.572" endtime="20220802 01:19:43.573"/>
</kw>
<status status="PASS" starttime="20220802 01:19:40.249" endtime="20220802 01:19:43.573"/>
</kw>
<status status="PASS" starttime="20220802 01:19:16.390" endtime="20220802 01:19:43.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:19:16.297" endtime="20220802 01:19:43.573"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient volume acls" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:43.579" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:43.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:43.582" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:19:43.577" endtime="20220802 01:19:43.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:43.582" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:19:43.582" endtime="20220802 01:19:43.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:43.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:43.583" endtime="20220802 01:19:43.583"/>
</kw>
<status status="PASS" starttime="20220802 01:19:43.576" endtime="20220802 01:19:43.583"/>
</kw>
<msg timestamp="20220802 01:19:43.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:43.576" endtime="20220802 01:19:43.584"/>
</kw>
<msg timestamp="20220802 01:19:43.584" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:19:43.576" endtime="20220802 01:19:43.584"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:19:43.584" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:19:43.584" endtime="20220802 01:19:43.584"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:43.588" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:43.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:43.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:19:43.586" endtime="20220802 01:19:43.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:43.595" level="INFO"/>
<status status="PASS" starttime="20220802 01:19:43.594" endtime="20220802 01:19:43.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:43.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:43.595" endtime="20220802 01:19:43.595"/>
</kw>
<status status="PASS" starttime="20220802 01:19:43.586" endtime="20220802 01:19:43.595"/>
</kw>
<msg timestamp="20220802 01:19:43.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:43.585" endtime="20220802 01:19:43.596"/>
</kw>
<status status="PASS" starttime="20220802 01:19:43.585" endtime="20220802 01:19:43.596"/>
</kw>
<status status="PASS" starttime="20220802 01:19:43.585" endtime="20220802 01:19:43.596"/>
</kw>
<status status="PASS" starttime="20220802 01:19:43.575" endtime="20220802 01:19:43.596"/>
</kw>
<status status="PASS" starttime="20220802 01:19:43.575" endtime="20220802 01:19:43.596"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:43.600" level="INFO">Running command 'ozone sh volume create o3://om:9862/23679-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:46.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:46.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:19:43.598" endtime="20220802 01:19:46.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:46.745" level="INFO"/>
<status status="PASS" starttime="20220802 01:19:46.744" endtime="20220802 01:19:46.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:46.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:46.745" endtime="20220802 01:19:46.746"/>
</kw>
<status status="PASS" starttime="20220802 01:19:43.598" endtime="20220802 01:19:46.747"/>
</kw>
<msg timestamp="20220802 01:19:46.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:43.597" endtime="20220802 01:19:46.747"/>
</kw>
<status status="PASS" starttime="20220802 01:19:43.597" endtime="20220802 01:19:46.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:46.750" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/23679-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:50.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:50.212" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:19:46.749" endtime="20220802 01:19:50.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:50.214" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:19:50.213" endtime="20220802 01:19:50.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:50.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:50.214" endtime="20220802 01:19:50.214"/>
</kw>
<status status="PASS" starttime="20220802 01:19:46.748" endtime="20220802 01:19:50.215"/>
</kw>
<msg timestamp="20220802 01:19:50.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:46.748" endtime="20220802 01:19:50.215"/>
</kw>
<msg timestamp="20220802 01:19:50.215" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:19:46.747" endtime="20220802 01:19:50.215"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:19:50.215" endtime="20220802 01:19:50.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:50.220" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/23679-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:53.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:53.804" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220802 01:19:50.217" endtime="20220802 01:19:53.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:53.805" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220802 01:19:53.805" endtime="20220802 01:19:53.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:53.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:53.806" endtime="20220802 01:19:53.806"/>
</kw>
<status status="PASS" starttime="20220802 01:19:50.217" endtime="20220802 01:19:53.807"/>
</kw>
<msg timestamp="20220802 01:19:53.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:50.217" endtime="20220802 01:19:53.807"/>
</kw>
<msg timestamp="20220802 01:19:53.807" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220802 01:19:50.216" endtime="20220802 01:19:53.807"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:53.811" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/23679-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:19:57.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:19:57.751" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220802 01:19:53.809" endtime="20220802 01:19:57.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:19:57.752" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:19:57.751" endtime="20220802 01:19:57.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:19:57.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:19:57.752" endtime="20220802 01:19:57.753"/>
</kw>
<status status="PASS" starttime="20220802 01:19:53.808" endtime="20220802 01:19:57.753"/>
</kw>
<msg timestamp="20220802 01:19:57.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:53.808" endtime="20220802 01:19:57.754"/>
</kw>
<msg timestamp="20220802 01:19:57.754" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220802 01:19:53.807" endtime="20220802 01:19:57.754"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:19:57.754" endtime="20220802 01:19:57.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:19:57.759" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/23679-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:01.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:01.295" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:19:57.757" endtime="20220802 01:20:01.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:01.297" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:20:01.296" endtime="20220802 01:20:01.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:01.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:01.297" endtime="20220802 01:20:01.297"/>
</kw>
<status status="PASS" starttime="20220802 01:19:57.756" endtime="20220802 01:20:01.298"/>
</kw>
<msg timestamp="20220802 01:20:01.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:19:57.756" endtime="20220802 01:20:01.298"/>
</kw>
<msg timestamp="20220802 01:20:01.298" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:19:57.755" endtime="20220802 01:20:01.298"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:01.302" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/23679-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:04.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:04.921" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220802 01:20:01.300" endtime="20220802 01:20:04.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:04.923" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:20:04.922" endtime="20220802 01:20:04.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:04.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:04.923" endtime="20220802 01:20:04.923"/>
</kw>
<status status="PASS" starttime="20220802 01:20:01.299" endtime="20220802 01:20:04.924"/>
</kw>
<msg timestamp="20220802 01:20:04.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:01.299" endtime="20220802 01:20:04.924"/>
</kw>
<msg timestamp="20220802 01:20:04.924" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220802 01:20:01.298" endtime="20220802 01:20:04.924"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:20:04.924" endtime="20220802 01:20:04.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:04.930" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/23679-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:08.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:08.507" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:20:04.928" endtime="20220802 01:20:08.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:08.509" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:20:08.508" endtime="20220802 01:20:08.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:08.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:08.509" endtime="20220802 01:20:08.510"/>
</kw>
<status status="PASS" starttime="20220802 01:20:04.927" endtime="20220802 01:20:08.510"/>
</kw>
<msg timestamp="20220802 01:20:08.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:04.927" endtime="20220802 01:20:08.511"/>
</kw>
<msg timestamp="20220802 01:20:08.511" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:20:04.925" endtime="20220802 01:20:08.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:08.514" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/23679-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:11.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:11.999" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220802 01:20:08.512" endtime="20220802 01:20:11.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:12.000" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:20:11.999" endtime="20220802 01:20:12.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:12.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:12.000" endtime="20220802 01:20:12.001"/>
</kw>
<status status="PASS" starttime="20220802 01:20:08.512" endtime="20220802 01:20:12.001"/>
</kw>
<msg timestamp="20220802 01:20:12.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:08.512" endtime="20220802 01:20:12.002"/>
</kw>
<msg timestamp="20220802 01:20:12.002" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220802 01:20:08.511" endtime="20220802 01:20:12.002"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:20:12.002" endtime="20220802 01:20:12.002"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:20:12.003" endtime="20220802 01:20:12.003"/>
</kw>
<status status="PASS" starttime="20220802 01:19:43.596" endtime="20220802 01:20:12.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:19:43.574" endtime="20220802 01:20:12.004"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient bucket acls" line="35">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:12.010" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:12.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:12.012" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:20:12.008" endtime="20220802 01:20:12.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:12.013" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:20:12.013" endtime="20220802 01:20:12.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:12.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:12.014" endtime="20220802 01:20:12.014"/>
</kw>
<status status="PASS" starttime="20220802 01:20:12.007" endtime="20220802 01:20:12.014"/>
</kw>
<msg timestamp="20220802 01:20:12.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:12.007" endtime="20220802 01:20:12.015"/>
</kw>
<msg timestamp="20220802 01:20:12.015" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:20:12.006" endtime="20220802 01:20:12.015"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:20:12.016" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:20:12.015" endtime="20220802 01:20:12.016"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:12.019" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:12.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:12.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:20:12.017" endtime="20220802 01:20:12.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:12.027" level="INFO"/>
<status status="PASS" starttime="20220802 01:20:12.026" endtime="20220802 01:20:12.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:12.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:12.027" endtime="20220802 01:20:12.027"/>
</kw>
<status status="PASS" starttime="20220802 01:20:12.017" endtime="20220802 01:20:12.027"/>
</kw>
<msg timestamp="20220802 01:20:12.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:12.017" endtime="20220802 01:20:12.028"/>
</kw>
<status status="PASS" starttime="20220802 01:20:12.016" endtime="20220802 01:20:12.028"/>
</kw>
<status status="PASS" starttime="20220802 01:20:12.016" endtime="20220802 01:20:12.028"/>
</kw>
<status status="PASS" starttime="20220802 01:20:12.006" endtime="20220802 01:20:12.028"/>
</kw>
<status status="PASS" starttime="20220802 01:20:12.005" endtime="20220802 01:20:12.028"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:12.031" level="INFO">Running command 'ozone sh bucket create o3://om:9862/23679-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:15.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:15.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:20:12.030" endtime="20220802 01:20:15.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:15.242" level="INFO"/>
<status status="PASS" starttime="20220802 01:20:15.242" endtime="20220802 01:20:15.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:15.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:15.242" endtime="20220802 01:20:15.243"/>
</kw>
<status status="PASS" starttime="20220802 01:20:12.030" endtime="20220802 01:20:15.243"/>
</kw>
<msg timestamp="20220802 01:20:15.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:12.029" endtime="20220802 01:20:15.244"/>
</kw>
<status status="PASS" starttime="20220802 01:20:12.029" endtime="20220802 01:20:15.244"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:15.247" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/23679-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:18.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:18.580" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:20:15.246" endtime="20220802 01:20:18.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:18.581" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:20:18.581" endtime="20220802 01:20:18.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:18.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:18.582" endtime="20220802 01:20:18.582"/>
</kw>
<status status="PASS" starttime="20220802 01:20:15.245" endtime="20220802 01:20:18.582"/>
</kw>
<msg timestamp="20220802 01:20:18.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:15.245" endtime="20220802 01:20:18.583"/>
</kw>
<msg timestamp="20220802 01:20:18.583" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:20:15.244" endtime="20220802 01:20:18.583"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:20:18.583" endtime="20220802 01:20:18.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:18.587" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/23679-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:21.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:21.966" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220802 01:20:18.585" endtime="20220802 01:20:21.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:21.967" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220802 01:20:21.966" endtime="20220802 01:20:21.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:21.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:21.967" endtime="20220802 01:20:21.968"/>
</kw>
<status status="PASS" starttime="20220802 01:20:18.585" endtime="20220802 01:20:21.968"/>
</kw>
<msg timestamp="20220802 01:20:21.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:18.584" endtime="20220802 01:20:21.968"/>
</kw>
<msg timestamp="20220802 01:20:21.969" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220802 01:20:18.584" endtime="20220802 01:20:21.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:21.972" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/23679-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:25.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:25.316" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:20:21.970" endtime="20220802 01:20:25.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:25.318" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:20:25.317" endtime="20220802 01:20:25.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:25.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:25.318" endtime="20220802 01:20:25.318"/>
</kw>
<status status="PASS" starttime="20220802 01:20:21.970" endtime="20220802 01:20:25.319"/>
</kw>
<msg timestamp="20220802 01:20:25.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:21.969" endtime="20220802 01:20:25.319"/>
</kw>
<msg timestamp="20220802 01:20:25.319" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:20:21.969" endtime="20220802 01:20:25.319"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:20:25.319" endtime="20220802 01:20:25.320"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:25.324" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/23679-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:28.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:28.758" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:20:25.322" endtime="20220802 01:20:28.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:28.759" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:20:28.758" endtime="20220802 01:20:28.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:28.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:28.759" endtime="20220802 01:20:28.760"/>
</kw>
<status status="PASS" starttime="20220802 01:20:25.321" endtime="20220802 01:20:28.760"/>
</kw>
<msg timestamp="20220802 01:20:28.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:25.321" endtime="20220802 01:20:28.760"/>
</kw>
<msg timestamp="20220802 01:20:28.761" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:20:25.320" endtime="20220802 01:20:28.761"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:28.764" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/23679-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:32.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:32.272" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:20:28.762" endtime="20220802 01:20:32.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:32.274" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:20:32.273" endtime="20220802 01:20:32.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:32.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:32.274" endtime="20220802 01:20:32.274"/>
</kw>
<status status="PASS" starttime="20220802 01:20:28.762" endtime="20220802 01:20:32.275"/>
</kw>
<msg timestamp="20220802 01:20:32.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:28.761" endtime="20220802 01:20:32.275"/>
</kw>
<msg timestamp="20220802 01:20:32.275" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:20:28.761" endtime="20220802 01:20:32.275"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:20:32.275" endtime="20220802 01:20:32.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:32.279" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/23679-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:35.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:35.674" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:20:32.277" endtime="20220802 01:20:35.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:35.675" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:20:35.675" endtime="20220802 01:20:35.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:35.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:35.676" endtime="20220802 01:20:35.676"/>
</kw>
<status status="PASS" starttime="20220802 01:20:32.277" endtime="20220802 01:20:35.676"/>
</kw>
<msg timestamp="20220802 01:20:35.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:32.277" endtime="20220802 01:20:35.677"/>
</kw>
<msg timestamp="20220802 01:20:35.677" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:20:32.276" endtime="20220802 01:20:35.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:35.681" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/23679-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:39.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:39.582" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220802 01:20:35.679" endtime="20220802 01:20:39.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:39.583" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:20:39.582" endtime="20220802 01:20:39.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:39.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:39.583" endtime="20220802 01:20:39.584"/>
</kw>
<status status="PASS" starttime="20220802 01:20:35.678" endtime="20220802 01:20:39.584"/>
</kw>
<msg timestamp="20220802 01:20:39.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:35.678" endtime="20220802 01:20:39.585"/>
</kw>
<msg timestamp="20220802 01:20:39.585" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220802 01:20:35.677" endtime="20220802 01:20:39.585"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:20:39.585" endtime="20220802 01:20:39.586"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:20:39.586" endtime="20220802 01:20:39.586"/>
</kw>
<status status="PASS" starttime="20220802 01:20:12.028" endtime="20220802 01:20:39.586"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:20:12.005" endtime="20220802 01:20:39.586"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient key acls" line="38">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:39.592" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:39.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:39.595" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:20:39.590" endtime="20220802 01:20:39.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:39.596" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:20:39.596" endtime="20220802 01:20:39.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:39.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:39.596" endtime="20220802 01:20:39.597"/>
</kw>
<status status="PASS" starttime="20220802 01:20:39.590" endtime="20220802 01:20:39.597"/>
</kw>
<msg timestamp="20220802 01:20:39.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:39.589" endtime="20220802 01:20:39.598"/>
</kw>
<msg timestamp="20220802 01:20:39.598" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:20:39.589" endtime="20220802 01:20:39.598"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:20:39.598" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:20:39.598" endtime="20220802 01:20:39.598"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:39.602" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:39.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:39.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:20:39.600" endtime="20220802 01:20:39.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:39.610" level="INFO"/>
<status status="PASS" starttime="20220802 01:20:39.609" endtime="20220802 01:20:39.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:39.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:39.610" endtime="20220802 01:20:39.611"/>
</kw>
<status status="PASS" starttime="20220802 01:20:39.600" endtime="20220802 01:20:39.611"/>
</kw>
<msg timestamp="20220802 01:20:39.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:39.600" endtime="20220802 01:20:39.611"/>
</kw>
<status status="PASS" starttime="20220802 01:20:39.599" endtime="20220802 01:20:39.612"/>
</kw>
<status status="PASS" starttime="20220802 01:20:39.599" endtime="20220802 01:20:39.612"/>
</kw>
<status status="PASS" starttime="20220802 01:20:39.589" endtime="20220802 01:20:39.612"/>
</kw>
<status status="PASS" starttime="20220802 01:20:39.588" endtime="20220802 01:20:39.612"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:39.616" level="INFO">Running command 'ozone sh key put o3://om:9862/23679-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:45.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:45.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:20:39.614" endtime="20220802 01:20:45.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:45.667" level="INFO"/>
<status status="PASS" starttime="20220802 01:20:45.666" endtime="20220802 01:20:45.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:45.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:45.667" endtime="20220802 01:20:45.668"/>
</kw>
<status status="PASS" starttime="20220802 01:20:39.613" endtime="20220802 01:20:45.668"/>
</kw>
<msg timestamp="20220802 01:20:45.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:39.613" endtime="20220802 01:20:45.668"/>
</kw>
<status status="PASS" starttime="20220802 01:20:39.613" endtime="20220802 01:20:45.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:45.672" level="INFO">Running command 'ozone sh key getacl o3://om:9862/23679-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:49.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:49.482" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:20:45.670" endtime="20220802 01:20:49.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:49.484" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:20:49.483" endtime="20220802 01:20:49.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:49.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:49.484" endtime="20220802 01:20:49.485"/>
</kw>
<status status="PASS" starttime="20220802 01:20:45.670" endtime="20220802 01:20:49.485"/>
</kw>
<msg timestamp="20220802 01:20:49.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:45.669" endtime="20220802 01:20:49.485"/>
</kw>
<msg timestamp="20220802 01:20:49.486" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:20:45.669" endtime="20220802 01:20:49.486"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:20:49.486" endtime="20220802 01:20:49.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:49.490" level="INFO">Running command 'ozone sh key addacl o3://om:9862/23679-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:53.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:53.048" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:20:49.488" endtime="20220802 01:20:53.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:53.050" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:20:53.049" endtime="20220802 01:20:53.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:53.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:53.050" endtime="20220802 01:20:53.050"/>
</kw>
<status status="PASS" starttime="20220802 01:20:49.487" endtime="20220802 01:20:53.051"/>
</kw>
<msg timestamp="20220802 01:20:53.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:49.487" endtime="20220802 01:20:53.051"/>
</kw>
<msg timestamp="20220802 01:20:53.051" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:20:49.486" endtime="20220802 01:20:53.051"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:53.055" level="INFO">Running command 'ozone sh key getacl o3://om:9862/23679-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:20:56.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:20:56.837" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:20:53.053" endtime="20220802 01:20:56.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:20:56.838" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:20:56.837" endtime="20220802 01:20:56.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:20:56.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:20:56.838" endtime="20220802 01:20:56.839"/>
</kw>
<status status="PASS" starttime="20220802 01:20:53.052" endtime="20220802 01:20:56.839"/>
</kw>
<msg timestamp="20220802 01:20:56.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:53.052" endtime="20220802 01:20:56.840"/>
</kw>
<msg timestamp="20220802 01:20:56.840" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:20:53.052" endtime="20220802 01:20:56.840"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:20:56.840" endtime="20220802 01:20:56.841"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:20:56.844" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/23679-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:00.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:00.313" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:20:56.842" endtime="20220802 01:21:00.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:00.314" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:21:00.313" endtime="20220802 01:21:00.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:00.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:00.314" endtime="20220802 01:21:00.315"/>
</kw>
<status status="PASS" starttime="20220802 01:20:56.842" endtime="20220802 01:21:00.315"/>
</kw>
<msg timestamp="20220802 01:21:00.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:20:56.841" endtime="20220802 01:21:00.316"/>
</kw>
<msg timestamp="20220802 01:21:00.316" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:20:56.841" endtime="20220802 01:21:00.316"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:00.319" level="INFO">Running command 'ozone sh key getacl o3://om:9862/23679-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:03.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:03.960" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:21:00.318" endtime="20220802 01:21:03.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:03.961" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:21:03.961" endtime="20220802 01:21:03.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:03.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:03.962" endtime="20220802 01:21:03.962"/>
</kw>
<status status="PASS" starttime="20220802 01:21:00.317" endtime="20220802 01:21:03.962"/>
</kw>
<msg timestamp="20220802 01:21:03.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:00.317" endtime="20220802 01:21:03.963"/>
</kw>
<msg timestamp="20220802 01:21:03.963" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:21:00.316" endtime="20220802 01:21:03.963"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:21:03.963" endtime="20220802 01:21:03.964"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:03.967" level="INFO">Running command 'ozone sh key setacl o3://om:9862/23679-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:07.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:07.277" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:21:03.965" endtime="20220802 01:21:07.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:07.278" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:21:07.278" endtime="20220802 01:21:07.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:07.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:07.279" endtime="20220802 01:21:07.279"/>
</kw>
<status status="PASS" starttime="20220802 01:21:03.965" endtime="20220802 01:21:07.279"/>
</kw>
<msg timestamp="20220802 01:21:07.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:03.964" endtime="20220802 01:21:07.280"/>
</kw>
<msg timestamp="20220802 01:21:07.280" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:21:03.964" endtime="20220802 01:21:07.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:07.283" level="INFO">Running command 'ozone sh key getacl o3://om:9862/23679-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:10.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:10.768" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220802 01:21:07.281" endtime="20220802 01:21:10.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:10.769" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:21:10.769" endtime="20220802 01:21:10.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:10.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:10.770" endtime="20220802 01:21:10.770"/>
</kw>
<status status="PASS" starttime="20220802 01:21:07.281" endtime="20220802 01:21:10.770"/>
</kw>
<msg timestamp="20220802 01:21:10.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:07.281" endtime="20220802 01:21:10.771"/>
</kw>
<msg timestamp="20220802 01:21:10.771" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220802 01:21:07.280" endtime="20220802 01:21:10.771"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:21:10.771" endtime="20220802 01:21:10.772"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:21:10.772" endtime="20220802 01:21:10.772"/>
</kw>
<status status="PASS" starttime="20220802 01:20:39.612" endtime="20220802 01:21:10.773"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:20:39.587" endtime="20220802 01:21:10.773"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient prefix acls" line="41">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:10.778" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:10.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:10.781" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:21:10.777" endtime="20220802 01:21:10.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:10.782" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:21:10.782" endtime="20220802 01:21:10.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:10.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:10.782" endtime="20220802 01:21:10.783"/>
</kw>
<status status="PASS" starttime="20220802 01:21:10.776" endtime="20220802 01:21:10.783"/>
</kw>
<msg timestamp="20220802 01:21:10.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:10.776" endtime="20220802 01:21:10.784"/>
</kw>
<msg timestamp="20220802 01:21:10.784" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:21:10.775" endtime="20220802 01:21:10.784"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:21:10.784" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:21:10.784" endtime="20220802 01:21:10.784"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:10.788" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:10.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:10.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:21:10.786" endtime="20220802 01:21:10.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:10.961" level="INFO"/>
<status status="PASS" starttime="20220802 01:21:10.960" endtime="20220802 01:21:10.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:10.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:10.961" endtime="20220802 01:21:10.962"/>
</kw>
<status status="PASS" starttime="20220802 01:21:10.786" endtime="20220802 01:21:10.962"/>
</kw>
<msg timestamp="20220802 01:21:10.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:10.785" endtime="20220802 01:21:10.962"/>
</kw>
<status status="PASS" starttime="20220802 01:21:10.785" endtime="20220802 01:21:10.962"/>
</kw>
<status status="PASS" starttime="20220802 01:21:10.784" endtime="20220802 01:21:10.963"/>
</kw>
<status status="PASS" starttime="20220802 01:21:10.775" endtime="20220802 01:21:10.963"/>
</kw>
<status status="PASS" starttime="20220802 01:21:10.775" endtime="20220802 01:21:10.963"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:10.967" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/23679-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:14.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:14.547" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220802 01:21:10.965" endtime="20220802 01:21:14.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:14.549" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220802 01:21:14.548" endtime="20220802 01:21:14.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:14.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:14.549" endtime="20220802 01:21:14.549"/>
</kw>
<status status="PASS" starttime="20220802 01:21:10.964" endtime="20220802 01:21:14.550"/>
</kw>
<msg timestamp="20220802 01:21:14.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:10.964" endtime="20220802 01:21:14.550"/>
</kw>
<status status="PASS" starttime="20220802 01:21:10.963" endtime="20220802 01:21:14.550"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:14.554" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/23679-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:18.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:18.045" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220802 01:21:14.552" endtime="20220802 01:21:18.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:18.046" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:21:18.045" endtime="20220802 01:21:18.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:18.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:18.046" endtime="20220802 01:21:18.047"/>
</kw>
<status status="PASS" starttime="20220802 01:21:14.551" endtime="20220802 01:21:18.047"/>
</kw>
<msg timestamp="20220802 01:21:18.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:14.551" endtime="20220802 01:21:18.048"/>
</kw>
<msg timestamp="20220802 01:21:18.048" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220802 01:21:14.551" endtime="20220802 01:21:18.048"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:21:18.048" endtime="20220802 01:21:18.049"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:18.052" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/23679-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:21.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:21.438" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220802 01:21:18.051" endtime="20220802 01:21:21.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:21.440" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220802 01:21:21.439" endtime="20220802 01:21:21.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:21.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:21.440" endtime="20220802 01:21:21.441"/>
</kw>
<status status="PASS" starttime="20220802 01:21:18.050" endtime="20220802 01:21:21.441"/>
</kw>
<msg timestamp="20220802 01:21:21.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:18.049" endtime="20220802 01:21:21.441"/>
</kw>
<msg timestamp="20220802 01:21:21.442" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220802 01:21:18.049" endtime="20220802 01:21:21.442"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:21.445" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/23679-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:25.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:25.004" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220802 01:21:21.443" endtime="20220802 01:21:25.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:25.006" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:21:25.005" endtime="20220802 01:21:25.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:25.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:25.006" endtime="20220802 01:21:25.006"/>
</kw>
<status status="PASS" starttime="20220802 01:21:21.443" endtime="20220802 01:21:25.007"/>
</kw>
<msg timestamp="20220802 01:21:25.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:21.442" endtime="20220802 01:21:25.007"/>
</kw>
<msg timestamp="20220802 01:21:25.007" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220802 01:21:21.442" endtime="20220802 01:21:25.007"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:21:25.008" endtime="20220802 01:21:25.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:25.011" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/23679-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:28.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:28.234" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:21:25.010" endtime="20220802 01:21:28.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:28.235" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:21:28.235" endtime="20220802 01:21:28.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:28.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:28.236" endtime="20220802 01:21:28.236"/>
</kw>
<status status="PASS" starttime="20220802 01:21:25.009" endtime="20220802 01:21:28.236"/>
</kw>
<msg timestamp="20220802 01:21:28.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:25.009" endtime="20220802 01:21:28.237"/>
</kw>
<msg timestamp="20220802 01:21:28.237" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:21:25.008" endtime="20220802 01:21:28.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:28.240" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/23679-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:31.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:31.873" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220802 01:21:28.238" endtime="20220802 01:21:31.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:31.875" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:21:31.874" endtime="20220802 01:21:31.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:31.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:31.875" endtime="20220802 01:21:31.876"/>
</kw>
<status status="PASS" starttime="20220802 01:21:28.238" endtime="20220802 01:21:31.876"/>
</kw>
<msg timestamp="20220802 01:21:31.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:28.238" endtime="20220802 01:21:31.876"/>
</kw>
<msg timestamp="20220802 01:21:31.876" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220802 01:21:28.237" endtime="20220802 01:21:31.876"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:21:31.877" endtime="20220802 01:21:31.877"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:21:31.877" endtime="20220802 01:21:31.877"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:31.881" level="INFO">Running command 'ozone sh key put o3://om:9862/23679-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:37.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:37.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:21:31.879" endtime="20220802 01:21:37.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:37.647" level="INFO"/>
<status status="PASS" starttime="20220802 01:21:37.646" endtime="20220802 01:21:37.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:37.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:37.647" endtime="20220802 01:21:37.648"/>
</kw>
<status status="PASS" starttime="20220802 01:21:31.878" endtime="20220802 01:21:37.648"/>
</kw>
<msg timestamp="20220802 01:21:37.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:31.878" endtime="20220802 01:21:37.648"/>
</kw>
<status status="PASS" starttime="20220802 01:21:31.878" endtime="20220802 01:21:37.649"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:37.652" level="INFO">Running command 'ozone sh key getacl o3://om:9862/23679-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:41.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:41.292" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:21:37.650" endtime="20220802 01:21:41.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:41.294" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:21:41.293" endtime="20220802 01:21:41.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:41.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:41.294" endtime="20220802 01:21:41.294"/>
</kw>
<status status="PASS" starttime="20220802 01:21:37.650" endtime="20220802 01:21:41.295"/>
</kw>
<msg timestamp="20220802 01:21:41.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:37.649" endtime="20220802 01:21:41.295"/>
</kw>
<msg timestamp="20220802 01:21:41.295" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:21:37.649" endtime="20220802 01:21:41.295"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:21:41.296" endtime="20220802 01:21:41.296"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:21:41.296" endtime="20220802 01:21:41.297"/>
</kw>
<status status="PASS" starttime="20220802 01:21:10.963" endtime="20220802 01:21:41.297"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:21:10.774" endtime="20220802 01:21:41.297"/>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without host" line="44">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:41.302" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:41.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:41.305" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:21:41.300" endtime="20220802 01:21:41.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:41.306" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:21:41.305" endtime="20220802 01:21:41.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:41.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:41.306" endtime="20220802 01:21:41.307"/>
</kw>
<status status="PASS" starttime="20220802 01:21:41.300" endtime="20220802 01:21:41.307"/>
</kw>
<msg timestamp="20220802 01:21:41.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:41.300" endtime="20220802 01:21:41.307"/>
</kw>
<msg timestamp="20220802 01:21:41.307" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:21:41.299" endtime="20220802 01:21:41.307"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:21:41.308" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:21:41.308" endtime="20220802 01:21:41.308"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:41.311" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:41.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:41.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:21:41.310" endtime="20220802 01:21:41.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:41.318" level="INFO"/>
<status status="PASS" starttime="20220802 01:21:41.318" endtime="20220802 01:21:41.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:41.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:41.319" endtime="20220802 01:21:41.319"/>
</kw>
<status status="PASS" starttime="20220802 01:21:41.309" endtime="20220802 01:21:41.319"/>
</kw>
<msg timestamp="20220802 01:21:41.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:41.309" endtime="20220802 01:21:41.320"/>
</kw>
<status status="PASS" starttime="20220802 01:21:41.308" endtime="20220802 01:21:41.320"/>
</kw>
<status status="PASS" starttime="20220802 01:21:41.308" endtime="20220802 01:21:41.320"/>
</kw>
<status status="PASS" starttime="20220802 01:21:41.299" endtime="20220802 01:21:41.320"/>
</kw>
<status status="PASS" starttime="20220802 01:21:41.298" endtime="20220802 01:21:41.320"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:41.324" level="INFO">Running command 'ozone sh volume info o3:///23679-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:44.762" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:21:44.762" level="INFO">${output} = VOLUME_NOT_FOUND Volume 23679-without-host is not found</msg>
<status status="PASS" starttime="20220802 01:21:41.323" endtime="20220802 01:21:44.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:44.763" level="INFO">VOLUME_NOT_FOUND Volume 23679-without-host is not found</msg>
<status status="PASS" starttime="20220802 01:21:44.763" endtime="20220802 01:21:44.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:44.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:44.764" endtime="20220802 01:21:44.764"/>
</kw>
<msg timestamp="20220802 01:21:44.764" level="INFO">${result} = VOLUME_NOT_FOUND Volume 23679-without-host is not found</msg>
<status status="PASS" starttime="20220802 01:21:41.321" endtime="20220802 01:21:44.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:21:44.765" endtime="20220802 01:21:44.765"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:44.769" level="INFO">Running command 'ozone sh volume create o3:///23679-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:48.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:48.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:21:44.767" endtime="20220802 01:21:48.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:48.421" level="INFO"/>
<status status="PASS" starttime="20220802 01:21:48.420" endtime="20220802 01:21:48.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:48.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:48.421" endtime="20220802 01:21:48.422"/>
</kw>
<status status="PASS" starttime="20220802 01:21:44.766" endtime="20220802 01:21:48.422"/>
</kw>
<msg timestamp="20220802 01:21:48.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:44.766" endtime="20220802 01:21:48.423"/>
</kw>
<msg timestamp="20220802 01:21:48.423" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:21:44.765" endtime="20220802 01:21:48.423"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:21:48.423" endtime="20220802 01:21:48.423"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:48.427" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="23679-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:52.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:52.081" level="INFO">${output} = {
  "metadata": {},
  "name": "23679-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220802 01:21:48.425" endtime="20220802 01:21:52.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:52.082" level="INFO">{
  "metadata": {},
  "name": "23679-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-02T01:21:48.196Z",
  "modificationTime": "2022-08-02T01:21:48.196Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220802 01:21:52.082" endtime="20220802 01:21:52.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:52.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:52.083" endtime="20220802 01:21:52.083"/>
</kw>
<status status="PASS" starttime="20220802 01:21:48.424" endtime="20220802 01:21:52.083"/>
</kw>
<msg timestamp="20220802 01:21:52.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:48.424" endtime="20220802 01:21:52.084"/>
</kw>
<msg timestamp="20220802 01:21:52.084" level="INFO">${result} = {
  "metadata": {},
  "name": "23679-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220802 01:21:48.424" endtime="20220802 01:21:52.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:21:52.084" endtime="20220802 01:21:52.085"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:52.088" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="23679-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:55.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:55.804" level="INFO">${output} = {
  "metadata": {},
  "name": "23679-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220802 01:21:52.086" endtime="20220802 01:21:55.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:55.805" level="INFO">{
  "metadata": {},
  "name": "23679-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-08-02T01:21:48.196Z",
  "modificationTime": "2022-08-02T01:21:48.196Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "refCount": 0
}</msg>
<status status="PASS" starttime="20220802 01:21:55.804" endtime="20220802 01:21:55.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:55.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:55.805" endtime="20220802 01:21:55.806"/>
</kw>
<status status="PASS" starttime="20220802 01:21:52.086" endtime="20220802 01:21:55.806"/>
</kw>
<msg timestamp="20220802 01:21:55.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:52.085" endtime="20220802 01:21:55.807"/>
</kw>
<msg timestamp="20220802 01:21:55.807" level="INFO">${result} = {
  "metadata": {},
  "name": "23679-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220802 01:21:52.085" endtime="20220802 01:21:55.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:21:55.807" endtime="20220802 01:21:55.807"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:55.811" level="INFO">Running command 'ozone sh volume setquota o3:///23679-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:21:59.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:21:59.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:21:55.809" endtime="20220802 01:21:59.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:21:59.261" level="INFO"/>
<status status="PASS" starttime="20220802 01:21:59.261" endtime="20220802 01:21:59.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:21:59.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:21:59.262" endtime="20220802 01:21:59.262"/>
</kw>
<status status="PASS" starttime="20220802 01:21:55.808" endtime="20220802 01:21:59.262"/>
</kw>
<msg timestamp="20220802 01:21:59.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:55.808" endtime="20220802 01:21:59.263"/>
</kw>
<status status="PASS" starttime="20220802 01:21:55.807" endtime="20220802 01:21:59.263"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:21:59.267" level="INFO">Running command 'ozone sh volume info o3:///23679-without-host | jq -r '. | select(.name=="23679-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:02.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:02.796" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:21:59.265" endtime="20220802 01:22:02.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:02.797" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220802 01:22:02.797" endtime="20220802 01:22:02.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:02.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:02.798" endtime="20220802 01:22:02.798"/>
</kw>
<status status="PASS" starttime="20220802 01:21:59.264" endtime="20220802 01:22:02.798"/>
</kw>
<msg timestamp="20220802 01:22:02.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:21:59.264" endtime="20220802 01:22:02.799"/>
</kw>
<msg timestamp="20220802 01:22:02.799" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:21:59.263" endtime="20220802 01:22:02.799"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:22:02.799" endtime="20220802 01:22:02.800"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:02.803" level="INFO">Running command 'ozone sh bucket create o3:///23679-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:06.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:06.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:22:02.801" endtime="20220802 01:22:06.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:06.247" level="INFO"/>
<status status="PASS" starttime="20220802 01:22:06.247" endtime="20220802 01:22:06.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:06.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:06.248" endtime="20220802 01:22:06.248"/>
</kw>
<status status="PASS" starttime="20220802 01:22:02.801" endtime="20220802 01:22:06.248"/>
</kw>
<msg timestamp="20220802 01:22:06.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:02.800" endtime="20220802 01:22:06.249"/>
</kw>
<status status="PASS" starttime="20220802 01:22:02.800" endtime="20220802 01:22:06.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:06.252" level="INFO">Running command 'ozone sh bucket info o3:///23679-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:09.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:09.913" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220802 01:22:06.250" endtime="20220802 01:22:09.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:09.914" level="INFO">DISK</msg>
<status status="PASS" starttime="20220802 01:22:09.913" endtime="20220802 01:22:09.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:09.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:09.914" endtime="20220802 01:22:09.915"/>
</kw>
<status status="PASS" starttime="20220802 01:22:06.250" endtime="20220802 01:22:09.915"/>
</kw>
<msg timestamp="20220802 01:22:09.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:06.250" endtime="20220802 01:22:09.916"/>
</kw>
<msg timestamp="20220802 01:22:09.916" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220802 01:22:06.249" endtime="20220802 01:22:09.916"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:22:09.916" endtime="20220802 01:22:09.917"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:09.920" level="INFO">Running command 'ozone sh bucket info o3:///23679-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:13.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:13.879" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:22:09.918" endtime="20220802 01:22:13.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:13.881" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220802 01:22:13.880" endtime="20220802 01:22:13.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:13.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:13.881" endtime="20220802 01:22:13.882"/>
</kw>
<status status="PASS" starttime="20220802 01:22:09.918" endtime="20220802 01:22:13.882"/>
</kw>
<msg timestamp="20220802 01:22:13.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:09.918" endtime="20220802 01:22:13.882"/>
</kw>
<msg timestamp="20220802 01:22:13.883" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220802 01:22:09.917" endtime="20220802 01:22:13.883"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:22:13.883" endtime="20220802 01:22:13.883"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:13.887" level="INFO">Running command 'ozone sh bucket info o3:///23679-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:17.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:17.429" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220802 01:22:13.885" endtime="20220802 01:22:17.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:17.430" level="INFO">100</msg>
<status status="PASS" starttime="20220802 01:22:17.429" endtime="20220802 01:22:17.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:17.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:17.430" endtime="20220802 01:22:17.431"/>
</kw>
<status status="PASS" starttime="20220802 01:22:13.885" endtime="20220802 01:22:17.431"/>
</kw>
<msg timestamp="20220802 01:22:17.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:13.884" endtime="20220802 01:22:17.432"/>
</kw>
<msg timestamp="20220802 01:22:17.432" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220802 01:22:13.883" endtime="20220802 01:22:17.432"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:22:17.432" endtime="20220802 01:22:17.433"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:17.436" level="INFO">Running command 'ozone sh bucket setquota o3:///23679-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:21.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:21.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:22:17.434" endtime="20220802 01:22:21.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:21.002" level="INFO"/>
<status status="PASS" starttime="20220802 01:22:21.002" endtime="20220802 01:22:21.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:21.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:21.003" endtime="20220802 01:22:21.003"/>
</kw>
<status status="PASS" starttime="20220802 01:22:17.434" endtime="20220802 01:22:21.004"/>
</kw>
<msg timestamp="20220802 01:22:21.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:17.433" endtime="20220802 01:22:21.004"/>
</kw>
<status status="PASS" starttime="20220802 01:22:17.433" endtime="20220802 01:22:21.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:21.008" level="INFO">Running command 'ozone sh bucket info o3:///23679-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:24.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:24.615" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220802 01:22:21.006" endtime="20220802 01:22:24.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:24.616" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220802 01:22:24.615" endtime="20220802 01:22:24.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:24.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:24.616" endtime="20220802 01:22:24.617"/>
</kw>
<status status="PASS" starttime="20220802 01:22:21.005" endtime="20220802 01:22:24.617"/>
</kw>
<msg timestamp="20220802 01:22:24.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:21.005" endtime="20220802 01:22:24.617"/>
</kw>
<msg timestamp="20220802 01:22:24.618" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220802 01:22:21.004" endtime="20220802 01:22:24.618"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:22:24.618" endtime="20220802 01:22:24.618"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:24.622" level="INFO">Running command 'ozone sh bucket info o3:///23679-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:28.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:28.215" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220802 01:22:24.620" endtime="20220802 01:22:28.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:28.217" level="INFO">1000</msg>
<status status="PASS" starttime="20220802 01:22:28.216" endtime="20220802 01:22:28.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:28.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:28.217" endtime="20220802 01:22:28.217"/>
</kw>
<status status="PASS" starttime="20220802 01:22:24.619" endtime="20220802 01:22:28.218"/>
</kw>
<msg timestamp="20220802 01:22:28.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:24.619" endtime="20220802 01:22:28.218"/>
</kw>
<msg timestamp="20220802 01:22:28.218" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220802 01:22:24.618" endtime="20220802 01:22:28.218"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:22:28.218" endtime="20220802 01:22:28.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:28.222" level="INFO">Running command 'ozone sh bucket list o3:///23679-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:31.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:31.978" level="INFO">${output} = 23679-without-host</msg>
<status status="PASS" starttime="20220802 01:22:28.220" endtime="20220802 01:22:31.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:31.979" level="INFO">23679-without-host</msg>
<status status="PASS" starttime="20220802 01:22:31.979" endtime="20220802 01:22:31.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:31.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:31.980" endtime="20220802 01:22:31.980"/>
</kw>
<status status="PASS" starttime="20220802 01:22:28.220" endtime="20220802 01:22:31.980"/>
</kw>
<msg timestamp="20220802 01:22:31.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:28.220" endtime="20220802 01:22:31.981"/>
</kw>
<msg timestamp="20220802 01:22:31.981" level="INFO">${result} = 23679-without-host</msg>
<status status="PASS" starttime="20220802 01:22:28.219" endtime="20220802 01:22:31.981"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:22:31.981" endtime="20220802 01:22:31.982"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:31.986" level="INFO">Running command 'ozone sh key put o3:///23679-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:37.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:37.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:22:31.984" endtime="20220802 01:22:37.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:37.471" level="INFO"/>
<status status="PASS" starttime="20220802 01:22:37.470" endtime="20220802 01:22:37.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:37.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:37.472" endtime="20220802 01:22:37.472"/>
</kw>
<status status="PASS" starttime="20220802 01:22:31.984" endtime="20220802 01:22:37.473"/>
</kw>
<msg timestamp="20220802 01:22:37.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:31.984" endtime="20220802 01:22:37.473"/>
</kw>
<status status="PASS" starttime="20220802 01:22:31.983" endtime="20220802 01:22:37.474"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:37.477" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:37.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:37.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:22:37.475" endtime="20220802 01:22:37.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:37.481" level="INFO"/>
<status status="PASS" starttime="20220802 01:22:37.480" endtime="20220802 01:22:37.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:37.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:37.483" endtime="20220802 01:22:37.483"/>
</kw>
<status status="PASS" starttime="20220802 01:22:37.475" endtime="20220802 01:22:37.484"/>
</kw>
<msg timestamp="20220802 01:22:37.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:37.474" endtime="20220802 01:22:37.484"/>
</kw>
<status status="PASS" starttime="20220802 01:22:37.474" endtime="20220802 01:22:37.485"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:37.492" level="INFO">Running command 'ozone sh key get o3:///23679-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:42.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:42.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:22:37.486" endtime="20220802 01:22:42.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:42.446" level="INFO"/>
<status status="PASS" starttime="20220802 01:22:42.446" endtime="20220802 01:22:42.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:42.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:42.447" endtime="20220802 01:22:42.447"/>
</kw>
<status status="PASS" starttime="20220802 01:22:37.486" endtime="20220802 01:22:42.448"/>
</kw>
<msg timestamp="20220802 01:22:42.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:37.485" endtime="20220802 01:22:42.448"/>
</kw>
<status status="PASS" starttime="20220802 01:22:37.485" endtime="20220802 01:22:42.448"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:42.452" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:42.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:42.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:22:42.450" endtime="20220802 01:22:42.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:42.455" level="INFO"/>
<status status="PASS" starttime="20220802 01:22:42.455" endtime="20220802 01:22:42.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:42.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:42.455" endtime="20220802 01:22:42.456"/>
</kw>
<status status="PASS" starttime="20220802 01:22:42.449" endtime="20220802 01:22:42.456"/>
</kw>
<msg timestamp="20220802 01:22:42.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:42.449" endtime="20220802 01:22:42.457"/>
</kw>
<status status="PASS" starttime="20220802 01:22:42.449" endtime="20220802 01:22:42.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:42.460" level="INFO">Running command 'ozone sh key put -t RATIS o3:///23679-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:48.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:48.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:22:42.458" endtime="20220802 01:22:48.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:48.116" level="INFO"/>
<status status="PASS" starttime="20220802 01:22:48.115" endtime="20220802 01:22:48.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:48.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:48.116" endtime="20220802 01:22:48.117"/>
</kw>
<status status="PASS" starttime="20220802 01:22:42.458" endtime="20220802 01:22:48.117"/>
</kw>
<msg timestamp="20220802 01:22:48.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:42.458" endtime="20220802 01:22:48.118"/>
</kw>
<status status="PASS" starttime="20220802 01:22:42.457" endtime="20220802 01:22:48.118"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:48.121" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:48.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:48.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:22:48.119" endtime="20220802 01:22:48.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:48.124" level="INFO"/>
<status status="PASS" starttime="20220802 01:22:48.124" endtime="20220802 01:22:48.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:48.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:48.124" endtime="20220802 01:22:48.125"/>
</kw>
<status status="PASS" starttime="20220802 01:22:48.119" endtime="20220802 01:22:48.125"/>
</kw>
<msg timestamp="20220802 01:22:48.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:48.118" endtime="20220802 01:22:48.126"/>
</kw>
<status status="PASS" starttime="20220802 01:22:48.118" endtime="20220802 01:22:48.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:48.129" level="INFO">Running command 'ozone sh key get o3:///23679-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:53.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:53.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:22:48.127" endtime="20220802 01:22:53.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:53.148" level="INFO"/>
<status status="PASS" starttime="20220802 01:22:53.147" endtime="20220802 01:22:53.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:53.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:53.148" endtime="20220802 01:22:53.149"/>
</kw>
<status status="PASS" starttime="20220802 01:22:48.127" endtime="20220802 01:22:53.149"/>
</kw>
<msg timestamp="20220802 01:22:53.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:48.127" endtime="20220802 01:22:53.149"/>
</kw>
<status status="PASS" starttime="20220802 01:22:48.126" endtime="20220802 01:22:53.150"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:53.153" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:53.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:53.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:22:53.151" endtime="20220802 01:22:53.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:53.156" level="INFO"/>
<status status="PASS" starttime="20220802 01:22:53.155" endtime="20220802 01:22:53.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:53.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:53.156" endtime="20220802 01:22:53.156"/>
</kw>
<status status="PASS" starttime="20220802 01:22:53.150" endtime="20220802 01:22:53.157"/>
</kw>
<msg timestamp="20220802 01:22:53.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:53.150" endtime="20220802 01:22:53.157"/>
</kw>
<status status="PASS" starttime="20220802 01:22:53.150" endtime="20220802 01:22:53.157"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:53.161" level="INFO">Running command 'ozone sh key info o3:///23679-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:22:56.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:22:56.849" level="INFO">${output} = {
  "volumeName": "23679-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:22:45.862Z",
  "modificationTime": "2022-08-02T01:22:47.593...</msg>
<status status="PASS" starttime="20220802 01:22:53.159" endtime="20220802 01:22:56.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:22:56.850" level="INFO">{
  "volumeName": "23679-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:22:45.862Z",
  "modificationTime": "2022-08-02T01:22:47.593Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220802 01:22:56.849" endtime="20220802 01:22:56.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:22:56.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:22:56.850" endtime="20220802 01:22:56.851"/>
</kw>
<status status="PASS" starttime="20220802 01:22:53.158" endtime="20220802 01:22:56.851"/>
</kw>
<msg timestamp="20220802 01:22:56.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:53.158" endtime="20220802 01:22:56.852"/>
</kw>
<msg timestamp="20220802 01:22:56.852" level="INFO">${result} = {
  "volumeName": "23679-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:22:45.862Z",
  "modificationTime": "2022-08-02T01:22:47.593...</msg>
<status status="PASS" starttime="20220802 01:22:53.157" endtime="20220802 01:22:56.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:22:56.852" endtime="20220802 01:22:56.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:22:56.855" level="INFO">Running command 'ozone sh key delete o3:///23679-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:00.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:00.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:22:56.854" endtime="20220802 01:23:00.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:00.180" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:00.179" endtime="20220802 01:23:00.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:00.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:00.180" endtime="20220802 01:23:00.181"/>
</kw>
<status status="PASS" starttime="20220802 01:22:56.853" endtime="20220802 01:23:00.181"/>
</kw>
<msg timestamp="20220802 01:23:00.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:22:56.853" endtime="20220802 01:23:00.181"/>
</kw>
<status status="PASS" starttime="20220802 01:22:56.852" endtime="20220802 01:23:00.182"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:00.185" level="INFO">Running command 'ozone sh key cp o3:///23679-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:06.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:06.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:23:00.183" endtime="20220802 01:23:06.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:06.018" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:06.018" endtime="20220802 01:23:06.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:06.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:06.019" endtime="20220802 01:23:06.019"/>
</kw>
<status status="PASS" starttime="20220802 01:23:00.183" endtime="20220802 01:23:06.019"/>
</kw>
<msg timestamp="20220802 01:23:06.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:00.182" endtime="20220802 01:23:06.020"/>
</kw>
<status status="PASS" starttime="20220802 01:23:00.182" endtime="20220802 01:23:06.020"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:06.023" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:06.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:06.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:23:06.021" endtime="20220802 01:23:06.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:06.026" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:06.026" endtime="20220802 01:23:06.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:06.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:06.027" endtime="20220802 01:23:06.027"/>
</kw>
<status status="PASS" starttime="20220802 01:23:06.021" endtime="20220802 01:23:06.027"/>
</kw>
<msg timestamp="20220802 01:23:06.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:06.021" endtime="20220802 01:23:06.028"/>
</kw>
<status status="PASS" starttime="20220802 01:23:06.020" endtime="20220802 01:23:06.028"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:06.031" level="INFO">Running command 'ozone sh key get o3:///23679-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:11.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:11.119" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:23:06.029" endtime="20220802 01:23:11.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:11.120" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:11.119" endtime="20220802 01:23:11.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:11.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:11.120" endtime="20220802 01:23:11.121"/>
</kw>
<status status="PASS" starttime="20220802 01:23:06.029" endtime="20220802 01:23:11.121"/>
</kw>
<msg timestamp="20220802 01:23:11.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:06.029" endtime="20220802 01:23:11.122"/>
</kw>
<status status="PASS" starttime="20220802 01:23:06.028" endtime="20220802 01:23:11.122"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:11.130" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:11.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:11.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:23:11.123" endtime="20220802 01:23:11.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:11.134" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:11.133" endtime="20220802 01:23:11.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:11.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:11.134" endtime="20220802 01:23:11.134"/>
</kw>
<status status="PASS" starttime="20220802 01:23:11.123" endtime="20220802 01:23:11.134"/>
</kw>
<msg timestamp="20220802 01:23:11.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:11.122" endtime="20220802 01:23:11.135"/>
</kw>
<status status="PASS" starttime="20220802 01:23:11.122" endtime="20220802 01:23:11.135"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:11.138" level="INFO">Running command 'ozone sh key delete o3:///23679-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:14.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:14.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:23:11.136" endtime="20220802 01:23:14.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:14.568" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:14.568" endtime="20220802 01:23:14.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:14.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:14.568" endtime="20220802 01:23:14.569"/>
</kw>
<status status="PASS" starttime="20220802 01:23:11.136" endtime="20220802 01:23:14.569"/>
</kw>
<msg timestamp="20220802 01:23:14.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:11.136" endtime="20220802 01:23:14.570"/>
</kw>
<status status="PASS" starttime="20220802 01:23:11.135" endtime="20220802 01:23:14.570"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:14.573" level="INFO">Running command 'ozone sh key get o3:///23679-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:17.821" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:23:17.821" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220802 01:23:14.571" endtime="20220802 01:23:17.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:17.822" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220802 01:23:17.821" endtime="20220802 01:23:17.822"/>
</kw>
<msg timestamp="20220802 01:23:17.822" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20220802 01:23:14.570" endtime="20220802 01:23:17.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:23:17.823" endtime="20220802 01:23:17.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:17.826" level="INFO">Running command 'ozone sh key get --force o3:///23679-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:23.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:23.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:23:17.824" endtime="20220802 01:23:23.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:23.081" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:23.080" endtime="20220802 01:23:23.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:23.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:23.081" endtime="20220802 01:23:23.082"/>
</kw>
<status status="PASS" starttime="20220802 01:23:17.824" endtime="20220802 01:23:23.082"/>
</kw>
<msg timestamp="20220802 01:23:23.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:17.824" endtime="20220802 01:23:23.083"/>
</kw>
<msg timestamp="20220802 01:23:23.083" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:23:17.823" endtime="20220802 01:23:23.083"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:23:23.083" endtime="20220802 01:23:23.084"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:23.087" level="INFO">Running command 'ozone sh key info o3:///23679-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:26.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:26.785" level="INFO">${output} = {
  "volumeName": "23679-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:22:35.564Z",
  "modificationTime": "2022-08-02T01:22:37.037Z",
  ...</msg>
<status status="PASS" starttime="20220802 01:23:23.085" endtime="20220802 01:23:26.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:26.787" level="INFO">{
  "volumeName": "23679-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:22:35.564Z",
  "modificationTime": "2022-08-02T01:22:37.037Z",
  "replicationConfig": {
    "replicationFactor": "ONE",
    "requiredNodes": 1,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 109611004723200020,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {}
}</msg>
<status status="PASS" starttime="20220802 01:23:26.786" endtime="20220802 01:23:26.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:26.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:26.787" endtime="20220802 01:23:26.787"/>
</kw>
<status status="PASS" starttime="20220802 01:23:23.085" endtime="20220802 01:23:26.788"/>
</kw>
<msg timestamp="20220802 01:23:26.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:23.085" endtime="20220802 01:23:26.788"/>
</kw>
<msg timestamp="20220802 01:23:26.788" level="INFO">${result} = {
  "volumeName": "23679-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2022-08-02T01:22:35.564Z",
  "modificationTime": "2022-08-02T01:22:37.037Z",
  ...</msg>
<status status="PASS" starttime="20220802 01:23:23.084" endtime="20220802 01:23:26.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:23:26.788" endtime="20220802 01:23:26.789"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:26.793" level="INFO">Running command 'ozone sh key list o3:///23679-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:30.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:30.245" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220802 01:23:26.791" endtime="20220802 01:23:30.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:30.246" level="INFO">key1</msg>
<status status="PASS" starttime="20220802 01:23:30.245" endtime="20220802 01:23:30.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:30.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:30.246" endtime="20220802 01:23:30.247"/>
</kw>
<status status="PASS" starttime="20220802 01:23:26.790" endtime="20220802 01:23:30.247"/>
</kw>
<msg timestamp="20220802 01:23:30.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:26.790" endtime="20220802 01:23:30.247"/>
</kw>
<msg timestamp="20220802 01:23:30.248" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20220802 01:23:26.789" endtime="20220802 01:23:30.248"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:23:30.248" endtime="20220802 01:23:30.248"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:30.251" level="INFO">Running command 'ozone sh key rename o3:///23679-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:33.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:33.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:23:30.250" endtime="20220802 01:23:33.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:33.593" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:33.592" endtime="20220802 01:23:33.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:33.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:33.593" endtime="20220802 01:23:33.594"/>
</kw>
<status status="PASS" starttime="20220802 01:23:30.249" endtime="20220802 01:23:33.594"/>
</kw>
<msg timestamp="20220802 01:23:33.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:30.249" endtime="20220802 01:23:33.594"/>
</kw>
<status status="PASS" starttime="20220802 01:23:30.248" endtime="20220802 01:23:33.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:33.598" level="INFO">Running command 'ozone sh key list o3:///23679-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:37.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:37.289" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20220802 01:23:33.596" endtime="20220802 01:23:37.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:37.290" level="INFO">key2</msg>
<status status="PASS" starttime="20220802 01:23:37.289" endtime="20220802 01:23:37.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:37.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:37.290" endtime="20220802 01:23:37.291"/>
</kw>
<status status="PASS" starttime="20220802 01:23:33.595" endtime="20220802 01:23:37.291"/>
</kw>
<msg timestamp="20220802 01:23:37.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:33.595" endtime="20220802 01:23:37.292"/>
</kw>
<msg timestamp="20220802 01:23:37.292" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20220802 01:23:33.595" endtime="20220802 01:23:37.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:23:37.292" endtime="20220802 01:23:37.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:37.296" level="INFO">Running command 'ozone sh key delete o3:///23679-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:40.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:40.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:23:37.294" endtime="20220802 01:23:40.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:40.755" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:40.754" endtime="20220802 01:23:40.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:40.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:40.755" endtime="20220802 01:23:40.755"/>
</kw>
<status status="PASS" starttime="20220802 01:23:37.293" endtime="20220802 01:23:40.756"/>
</kw>
<msg timestamp="20220802 01:23:40.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:37.293" endtime="20220802 01:23:40.756"/>
</kw>
<status status="PASS" starttime="20220802 01:23:37.293" endtime="20220802 01:23:40.756"/>
</kw>
<status status="PASS" starttime="20220802 01:22:31.982" endtime="20220802 01:23:40.757"/>
</kw>
<status status="PASS" starttime="20220802 01:22:31.982" endtime="20220802 01:23:40.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:40.760" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///23679-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:44.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:44.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:23:40.758" endtime="20220802 01:23:44.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:44.131" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:44.131" endtime="20220802 01:23:44.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:44.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:44.132" endtime="20220802 01:23:44.133"/>
</kw>
<status status="PASS" starttime="20220802 01:23:40.758" endtime="20220802 01:23:44.133"/>
</kw>
<msg timestamp="20220802 01:23:44.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:40.757" endtime="20220802 01:23:44.134"/>
</kw>
<status status="PASS" starttime="20220802 01:23:40.757" endtime="20220802 01:23:44.134"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:44.137" level="INFO">Running command 'ozone sh volume info o3:///23679-without-host | jq -r '. | select(.name=="23679-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:47.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:47.552" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:23:44.135" endtime="20220802 01:23:47.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:47.553" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:23:47.552" endtime="20220802 01:23:47.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:47.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:47.553" endtime="20220802 01:23:47.553"/>
</kw>
<status status="PASS" starttime="20220802 01:23:44.135" endtime="20220802 01:23:47.554"/>
</kw>
<msg timestamp="20220802 01:23:47.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:44.135" endtime="20220802 01:23:47.554"/>
</kw>
<msg timestamp="20220802 01:23:47.554" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:23:44.134" endtime="20220802 01:23:47.554"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:23:47.555" endtime="20220802 01:23:47.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:47.558" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///23679-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:50.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:50.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:23:47.556" endtime="20220802 01:23:50.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:50.858" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:50.857" endtime="20220802 01:23:50.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:50.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:50.858" endtime="20220802 01:23:50.858"/>
</kw>
<status status="PASS" starttime="20220802 01:23:47.556" endtime="20220802 01:23:50.859"/>
</kw>
<msg timestamp="20220802 01:23:50.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:47.556" endtime="20220802 01:23:50.859"/>
</kw>
<status status="PASS" starttime="20220802 01:23:47.555" endtime="20220802 01:23:50.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:50.863" level="INFO">Running command 'ozone sh volume info o3:///23679-without-host | jq -r '. | select(.name=="23679-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:54.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:54.224" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:23:50.861" endtime="20220802 01:23:54.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:54.225" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:23:54.224" endtime="20220802 01:23:54.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:54.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:54.225" endtime="20220802 01:23:54.225"/>
</kw>
<status status="PASS" starttime="20220802 01:23:50.860" endtime="20220802 01:23:54.226"/>
</kw>
<msg timestamp="20220802 01:23:54.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:50.860" endtime="20220802 01:23:54.226"/>
</kw>
<msg timestamp="20220802 01:23:54.226" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:23:50.859" endtime="20220802 01:23:54.226"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:23:54.227" endtime="20220802 01:23:54.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:54.230" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///23679-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:23:57.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:23:57.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:23:54.228" endtime="20220802 01:23:57.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:23:57.683" level="INFO"/>
<status status="PASS" starttime="20220802 01:23:57.683" endtime="20220802 01:23:57.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:23:57.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:23:57.684" endtime="20220802 01:23:57.684"/>
</kw>
<status status="PASS" starttime="20220802 01:23:54.228" endtime="20220802 01:23:57.684"/>
</kw>
<msg timestamp="20220802 01:23:57.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:54.228" endtime="20220802 01:23:57.685"/>
</kw>
<status status="PASS" starttime="20220802 01:23:54.227" endtime="20220802 01:23:57.685"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:23:57.689" level="INFO">Running command 'ozone sh bucket info o3:///23679-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:01.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:01.230" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:23:57.687" endtime="20220802 01:24:01.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:01.231" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:24:01.230" endtime="20220802 01:24:01.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:01.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:01.231" endtime="20220802 01:24:01.232"/>
</kw>
<status status="PASS" starttime="20220802 01:23:57.686" endtime="20220802 01:24:01.232"/>
</kw>
<msg timestamp="20220802 01:24:01.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:23:57.686" endtime="20220802 01:24:01.233"/>
</kw>
<msg timestamp="20220802 01:24:01.233" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:23:57.685" endtime="20220802 01:24:01.233"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:24:01.233" endtime="20220802 01:24:01.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:01.237" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///23679-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:04.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:04.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:24:01.235" endtime="20220802 01:24:04.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:04.610" level="INFO"/>
<status status="PASS" starttime="20220802 01:24:04.609" endtime="20220802 01:24:04.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:04.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:04.610" endtime="20220802 01:24:04.611"/>
</kw>
<status status="PASS" starttime="20220802 01:24:01.234" endtime="20220802 01:24:04.611"/>
</kw>
<msg timestamp="20220802 01:24:04.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:01.234" endtime="20220802 01:24:04.612"/>
</kw>
<status status="PASS" starttime="20220802 01:24:01.233" endtime="20220802 01:24:04.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:04.615" level="INFO">Running command 'ozone sh bucket info o3:///23679-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:08.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:08.413" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:24:04.613" endtime="20220802 01:24:08.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:08.414" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:24:08.413" endtime="20220802 01:24:08.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:08.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:08.414" endtime="20220802 01:24:08.415"/>
</kw>
<status status="PASS" starttime="20220802 01:24:04.613" endtime="20220802 01:24:08.415"/>
</kw>
<msg timestamp="20220802 01:24:08.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:04.613" endtime="20220802 01:24:08.416"/>
</kw>
<msg timestamp="20220802 01:24:08.416" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:24:04.612" endtime="20220802 01:24:08.416"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:24:08.416" endtime="20220802 01:24:08.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:08.420" level="INFO">Running command 'ozone sh bucket delete o3:///23679-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:11.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:11.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:24:08.418" endtime="20220802 01:24:11.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:11.820" level="INFO"/>
<status status="PASS" starttime="20220802 01:24:11.820" endtime="20220802 01:24:11.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:11.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:11.821" endtime="20220802 01:24:11.821"/>
</kw>
<status status="PASS" starttime="20220802 01:24:08.418" endtime="20220802 01:24:11.821"/>
</kw>
<msg timestamp="20220802 01:24:11.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:08.417" endtime="20220802 01:24:11.822"/>
</kw>
<status status="PASS" starttime="20220802 01:24:08.417" endtime="20220802 01:24:11.822"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:11.826" level="INFO">Running command 'ozone sh volume delete o3:///23679-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:15.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:15.125" level="INFO">${output} = Volume 23679-without-host is deleted</msg>
<status status="PASS" starttime="20220802 01:24:11.823" endtime="20220802 01:24:15.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:15.126" level="INFO">Volume 23679-without-host is deleted</msg>
<status status="PASS" starttime="20220802 01:24:15.126" endtime="20220802 01:24:15.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:15.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:15.127" endtime="20220802 01:24:15.127"/>
</kw>
<status status="PASS" starttime="20220802 01:24:11.823" endtime="20220802 01:24:15.127"/>
</kw>
<msg timestamp="20220802 01:24:15.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:11.823" endtime="20220802 01:24:15.128"/>
</kw>
<status status="PASS" starttime="20220802 01:24:11.822" endtime="20220802 01:24:15.128"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:15.131" level="INFO">Running command 'ozone sh volume create o3:///23679-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:18.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:18.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:24:15.129" endtime="20220802 01:24:18.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:18.543" level="INFO"/>
<status status="PASS" starttime="20220802 01:24:18.543" endtime="20220802 01:24:18.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:18.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:18.543" endtime="20220802 01:24:18.544"/>
</kw>
<status status="PASS" starttime="20220802 01:24:15.129" endtime="20220802 01:24:18.544"/>
</kw>
<msg timestamp="20220802 01:24:18.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:15.129" endtime="20220802 01:24:18.545"/>
</kw>
<status status="PASS" starttime="20220802 01:24:15.128" endtime="20220802 01:24:18.545"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:18.548" level="INFO">Running command 'ozone sh volume info o3:///23679-without-host | jq -r '. | select(.name=="23679-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:22.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:22.033" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:24:18.546" endtime="20220802 01:24:22.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:22.034" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:24:22.033" endtime="20220802 01:24:22.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:22.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:22.034" endtime="20220802 01:24:22.035"/>
</kw>
<status status="PASS" starttime="20220802 01:24:18.546" endtime="20220802 01:24:22.035"/>
</kw>
<msg timestamp="20220802 01:24:22.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:18.546" endtime="20220802 01:24:22.036"/>
</kw>
<msg timestamp="20220802 01:24:22.036" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:24:18.545" endtime="20220802 01:24:22.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:24:22.036" endtime="20220802 01:24:22.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:22.040" level="INFO">Running command 'ozone sh volume info o3:///23679-without-host | jq -r '. | select(.name=="23679-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:25.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:25.551" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:24:22.038" endtime="20220802 01:24:25.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:25.552" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:24:25.551" endtime="20220802 01:24:25.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:25.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:25.552" endtime="20220802 01:24:25.553"/>
</kw>
<status status="PASS" starttime="20220802 01:24:22.038" endtime="20220802 01:24:25.553"/>
</kw>
<msg timestamp="20220802 01:24:25.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:22.037" endtime="20220802 01:24:25.554"/>
</kw>
<msg timestamp="20220802 01:24:25.554" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:24:22.036" endtime="20220802 01:24:25.554"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:24:25.554" endtime="20220802 01:24:25.554"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:25.558" level="INFO">Running command 'ozone sh bucket create o3:///23679-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:28.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:28.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:24:25.556" endtime="20220802 01:24:28.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:28.750" level="INFO"/>
<status status="PASS" starttime="20220802 01:24:28.749" endtime="20220802 01:24:28.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:28.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:28.750" endtime="20220802 01:24:28.750"/>
</kw>
<status status="PASS" starttime="20220802 01:24:25.555" endtime="20220802 01:24:28.751"/>
</kw>
<msg timestamp="20220802 01:24:28.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:25.555" endtime="20220802 01:24:28.751"/>
</kw>
<status status="PASS" starttime="20220802 01:24:25.554" endtime="20220802 01:24:28.751"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:28.756" level="INFO">Running command 'ozone sh bucket info o3:///23679-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:32.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:32.384" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:24:28.753" endtime="20220802 01:24:32.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:32.386" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:24:32.385" endtime="20220802 01:24:32.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:32.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:32.386" endtime="20220802 01:24:32.386"/>
</kw>
<status status="PASS" starttime="20220802 01:24:28.753" endtime="20220802 01:24:32.387"/>
</kw>
<msg timestamp="20220802 01:24:32.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:28.752" endtime="20220802 01:24:32.387"/>
</kw>
<msg timestamp="20220802 01:24:32.388" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:24:28.752" endtime="20220802 01:24:32.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:24:32.388" endtime="20220802 01:24:32.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:32.392" level="INFO">Running command 'ozone sh bucket info o3:///23679-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:36.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:36.215" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20220802 01:24:32.390" endtime="20220802 01:24:36.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:36.216" level="INFO">-1</msg>
<status status="PASS" starttime="20220802 01:24:36.215" endtime="20220802 01:24:36.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:36.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:36.216" endtime="20220802 01:24:36.217"/>
</kw>
<status status="PASS" starttime="20220802 01:24:32.389" endtime="20220802 01:24:36.217"/>
</kw>
<msg timestamp="20220802 01:24:36.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:32.389" endtime="20220802 01:24:36.217"/>
</kw>
<msg timestamp="20220802 01:24:36.218" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20220802 01:24:32.388" endtime="20220802 01:24:36.218"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:24:36.218" endtime="20220802 01:24:36.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:36.221" level="INFO">Running command 'ozone sh bucket delete o3:///23679-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:39.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:39.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:24:36.219" endtime="20220802 01:24:39.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:39.644" level="INFO"/>
<status status="PASS" starttime="20220802 01:24:39.643" endtime="20220802 01:24:39.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:39.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:39.644" endtime="20220802 01:24:39.644"/>
</kw>
<status status="PASS" starttime="20220802 01:24:36.219" endtime="20220802 01:24:39.645"/>
</kw>
<msg timestamp="20220802 01:24:39.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:36.219" endtime="20220802 01:24:39.645"/>
</kw>
<status status="PASS" starttime="20220802 01:24:36.218" endtime="20220802 01:24:39.645"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:39.650" level="INFO">Running command 'ozone sh volume delete o3:///23679-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:43.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:43.113" level="INFO">${output} = Volume 23679-without-host is deleted</msg>
<status status="PASS" starttime="20220802 01:24:39.647" endtime="20220802 01:24:43.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:43.114" level="INFO">Volume 23679-without-host is deleted</msg>
<status status="PASS" starttime="20220802 01:24:43.114" endtime="20220802 01:24:43.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:43.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:43.115" endtime="20220802 01:24:43.115"/>
</kw>
<status status="PASS" starttime="20220802 01:24:39.646" endtime="20220802 01:24:43.115"/>
</kw>
<msg timestamp="20220802 01:24:43.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:39.646" endtime="20220802 01:24:43.116"/>
</kw>
<status status="PASS" starttime="20220802 01:24:39.645" endtime="20220802 01:24:43.116"/>
</kw>
<status status="PASS" starttime="20220802 01:21:41.320" endtime="20220802 01:24:43.116"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:21:41.298" endtime="20220802 01:24:43.117"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20220802 01:16:08.050" endtime="20220802 01:24:43.118"/>
</suite>
<suite id="s1-s1-s6" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s1-s6-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:43.132" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:43.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:43.135" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:24:43.131" endtime="20220802 01:24:43.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:43.136" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:24:43.136" endtime="20220802 01:24:43.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:43.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:43.136" endtime="20220802 01:24:43.137"/>
</kw>
<status status="PASS" starttime="20220802 01:24:43.130" endtime="20220802 01:24:43.137"/>
</kw>
<msg timestamp="20220802 01:24:43.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:43.130" endtime="20220802 01:24:43.138"/>
</kw>
<msg timestamp="20220802 01:24:43.138" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:24:43.130" endtime="20220802 01:24:43.138"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:24:43.139" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:24:43.138" endtime="20220802 01:24:43.139"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:43.143" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:43.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:43.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:24:43.141" endtime="20220802 01:24:43.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:43.223" level="INFO"/>
<status status="PASS" starttime="20220802 01:24:43.222" endtime="20220802 01:24:43.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:43.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:43.223" endtime="20220802 01:24:43.223"/>
</kw>
<status status="PASS" starttime="20220802 01:24:43.141" endtime="20220802 01:24:43.224"/>
</kw>
<msg timestamp="20220802 01:24:43.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:43.141" endtime="20220802 01:24:43.224"/>
</kw>
<status status="PASS" starttime="20220802 01:24:43.140" endtime="20220802 01:24:43.224"/>
</kw>
<status status="PASS" starttime="20220802 01:24:43.140" endtime="20220802 01:24:43.224"/>
</kw>
<status status="PASS" starttime="20220802 01:24:43.129" endtime="20220802 01:24:43.224"/>
</kw>
<status status="PASS" starttime="20220802 01:24:43.129" endtime="20220802 01:24:43.224"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:24:43.225" level="INFO">${random} = Qym25zZbPD</msg>
<status status="PASS" starttime="20220802 01:24:43.225" endtime="20220802 01:24:43.225"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:43.229" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p Qym25zZbPD --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:48.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:48.990" level="INFO">${output} = 2022-08-02 01:24:44,885 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:24:45,005 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220802 01:24:43.227" endtime="20220802 01:24:48.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:48.991" level="INFO">2022-08-02 01:24:44,885 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:24:45,005 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-08-02 01:24:45,005 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-08-02 01:24:45,167 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Qym25zZbPD
2022-08-02 01:24:45,249 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:24:46,253 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:24:47,071 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-08-02 01:24:47,255 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:24:47,390 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-08-02 01:24:48,256 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-08-02 01:24:48,642 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1595.504168, max=1595.504168, mean=1595.504168, stddev=0.0, median=1595.504168, p75=1595.504168, p95=1595.504168, p98=1595.504168, p99=1595.504168, p999=1595.504168, mean_rate=0.47619111927524493, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-08-02 01:24:48,643 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-08-02 01:24:48,643 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-08-02 01:24:48,643 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220802 01:24:48.990" endtime="20220802 01:24:48.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:48.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:48.991" endtime="20220802 01:24:48.992"/>
</kw>
<status status="PASS" starttime="20220802 01:24:43.227" endtime="20220802 01:24:48.992"/>
</kw>
<msg timestamp="20220802 01:24:48.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:43.226" endtime="20220802 01:24:48.992"/>
</kw>
<msg timestamp="20220802 01:24:48.993" level="INFO">${result} = 2022-08-02 01:24:44,885 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:24:45,005 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220802 01:24:43.226" endtime="20220802 01:24:48.993"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:24:48.993" endtime="20220802 01:24:48.993"/>
</kw>
<status status="PASS" starttime="20220802 01:24:43.225" endtime="20220802 01:24:48.994"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:24:48.998" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p Qym25zZbPD  2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:24:55.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:24:55.054" level="INFO">${output} = 2022-08-02 01:24:50,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:24:50,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220802 01:24:48.996" endtime="20220802 01:24:55.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:24:55.055" level="INFO">2022-08-02 01:24:50,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:24:50,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-08-02 01:24:50,738 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-08-02 01:24:50,859 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Qym25zZbPD
2022-08-02 01:24:50,917 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:24:51,926 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:24:52,507 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-08-02 01:24:52,926 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-08-02 01:24:53,927 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-08-02 01:24:54,695 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=38.067362, max=38.067362, mean=38.067362, stddev=0.0, median=38.067362, p75=38.067362, p95=38.067362, p98=38.067362, p99=38.067362, p999=38.067362, mean_rate=0.785610697893414, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-08-02 01:24:54,695 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-08-02 01:24:54,696 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-08-02 01:24:54,696 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220802 01:24:55.054" endtime="20220802 01:24:55.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:24:55.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:24:55.055" endtime="20220802 01:24:55.055"/>
</kw>
<status status="PASS" starttime="20220802 01:24:48.996" endtime="20220802 01:24:55.056"/>
</kw>
<msg timestamp="20220802 01:24:55.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:24:48.995" endtime="20220802 01:24:55.056"/>
</kw>
<msg timestamp="20220802 01:24:55.057" level="INFO">${result} = 2022-08-02 01:24:50,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-08-02 01:24:50,738 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220802 01:24:48.995" endtime="20220802 01:24:55.057"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:24:55.057" endtime="20220802 01:24:55.057"/>
</kw>
<status status="PASS" starttime="20220802 01:24:48.994" endtime="20220802 01:24:55.057"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:24:43.128" endtime="20220802 01:24:55.057"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20220802 01:24:43.120" endtime="20220802 01:24:55.059"/>
</suite>
<status status="PASS" starttime="20220802 01:09:00.271" endtime="20220802 01:24:55.061"/>
</suite>
<suite id="s1-s2" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s2-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:00.140" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:00.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:00.143" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:25:00.136" endtime="20220802 01:25:00.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:00.143" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:25:00.143" endtime="20220802 01:25:00.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:00.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:00.144" endtime="20220802 01:25:00.144"/>
</kw>
<status status="PASS" starttime="20220802 01:25:00.135" endtime="20220802 01:25:00.144"/>
</kw>
<msg timestamp="20220802 01:25:00.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:00.135" endtime="20220802 01:25:00.145"/>
</kw>
<msg timestamp="20220802 01:25:00.146" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:25:00.135" endtime="20220802 01:25:00.146"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:25:00.147" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:25:00.146" endtime="20220802 01:25:00.147"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:00.150" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:00.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:00.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:00.148" endtime="20220802 01:25:00.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:00.158" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:00.157" endtime="20220802 01:25:00.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:00.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:00.158" endtime="20220802 01:25:00.158"/>
</kw>
<status status="PASS" starttime="20220802 01:25:00.148" endtime="20220802 01:25:00.159"/>
</kw>
<msg timestamp="20220802 01:25:00.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:00.148" endtime="20220802 01:25:00.159"/>
</kw>
<status status="PASS" starttime="20220802 01:25:00.147" endtime="20220802 01:25:00.159"/>
</kw>
<status status="PASS" starttime="20220802 01:25:00.147" endtime="20220802 01:25:00.159"/>
</kw>
<status status="PASS" starttime="20220802 01:25:00.134" endtime="20220802 01:25:00.159"/>
</kw>
<status status="PASS" starttime="20220802 01:25:00.134" endtime="20220802 01:25:00.159"/>
</kw>
<status status="PASS" starttime="20220802 01:25:00.134" endtime="20220802 01:25:00.160"/>
</kw>
<test id="s1-s2-s1-t1" name="List valid certificates" line="33">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:00.164" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:03.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:03.114" level="INFO">${output} = Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20220802 01:25:00.162" endtime="20220802 01:25:03.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:03.115" level="INFO">Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       
1                 Tue Aug 02 00:00:00 UTC 2022   Fri Sep 10 23:59:59 UTC 2027   O=CID-b0cb0ca6-92e8-4785-9cf0-8ea32bfe0e07, OU=cc1cfd6a-0954-4646-8348-3e898b6cf5ad, CN=scm@scm               
344091987519      Tue Aug 02 00:00:00 UTC 2022   Fri Sep 10 00:00:00 UTC 2027   O=CID-b0cb0ca6-92e8-4785-9cf0-8ea32bfe0e07, OU=cc1cfd6a-0954-4646-8348-3e898b6cf5ad, CN=scm-sub@scm           
362618755472      Tue Aug 02 00:00:00 UTC 2022   Wed Aug 02 00:00:00 UTC 2023   O=CID-b0cb0ca6-92e8-4785-9cf0-8ea32bfe0e07, OU=cc1cfd6a-0954-4646-8348-3e898b6cf5ad, CN=dn@0ce876fd380e       
363003864112      Tue Aug 02 00:00:00 UTC 2022   Wed Aug 02 00:00:00 UTC 2023   O=CID-b0cb0ca6-92e8-4785-9cf0-8ea32bfe0e07, OU=cc1cfd6a-0954-4646-8348-3e898b6cf5ad, CN=dn@c454b5abed6a       
363126632914      Tue Aug 02 00:00:00 UTC 2022   Wed Aug 02 00:00:00 UTC 2023   O=CID-b0cb0ca6-92e8-4785-9cf0-8ea32bfe0e07, OU=cc1cfd6a-0954-4646-8348-3e898b6cf5ad, CN=dn@09f0a9f91423       
363268180477      Tue Aug 02 00:00:00 UTC 2022   Wed Aug 02 00:00:00 UTC 2023   O=CID-b0cb0ca6-92e8-4785-9cf0-8ea32bfe0e07, OU=cc1cfd6a-0954-4646-8348-3e898b6cf5ad, CN=recon@recon           
366299954157      Tue Aug 02 00:00:00 UTC 2022   Wed Aug 02 00:00:00 UTC 2023   O=CID-b0cb0ca6-92e8-4785-9cf0-8ea32bfe0e07, OU=cc1cfd6a-0954-4646-8348-3e898b6cf5ad, CN=om                    </msg>
<status status="PASS" starttime="20220802 01:25:03.114" endtime="20220802 01:25:03.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:03.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:03.115" endtime="20220802 01:25:03.116"/>
</kw>
<status status="PASS" starttime="20220802 01:25:00.162" endtime="20220802 01:25:03.116"/>
</kw>
<msg timestamp="20220802 01:25:03.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:00.161" endtime="20220802 01:25:03.117"/>
</kw>
<msg timestamp="20220802 01:25:03.117" level="INFO">${output} = Total 7 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20220802 01:25:00.161" endtime="20220802 01:25:03.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>valid certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:25:03.117" endtime="20220802 01:25:03.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:25:00.160" endtime="20220802 01:25:03.117"/>
</test>
<test id="s1-s2-s1-t2" name="List revoked certificates" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:03.121" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:05.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:05.813" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20220802 01:25:03.120" endtime="20220802 01:25:05.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:05.814" level="INFO">Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       </msg>
<status status="PASS" starttime="20220802 01:25:05.814" endtime="20220802 01:25:05.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:05.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:05.815" endtime="20220802 01:25:05.815"/>
</kw>
<status status="PASS" starttime="20220802 01:25:03.119" endtime="20220802 01:25:05.815"/>
</kw>
<msg timestamp="20220802 01:25:05.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:03.119" endtime="20220802 01:25:05.816"/>
</kw>
<msg timestamp="20220802 01:25:05.816" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20220802 01:25:03.119" endtime="20220802 01:25:05.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Total 0 revoked certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:25:05.816" endtime="20220802 01:25:05.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:25:03.118" endtime="20220802 01:25:05.817"/>
</test>
<test id="s1-s2-s1-t3" name="Info of the cert" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:05.821" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:11.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:11.260" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-b0cb0ca6-92e8-4785-9cf0-8ea32bfe0e07, OU=cc1cfd6a-0954-4646-8348-3e898b6cf5ad, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20220802 01:25:05.819" endtime="20220802 01:25:11.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:11.261" level="INFO">Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-b0cb0ca6-92e8-4785-9cf0-8ea32bfe0e07, OU=cc1cfd6a-0954-4646-8348-3e898b6cf5ad, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11

  Key:  Sun RSA public key, 2048 bits
  params: null
  modulus: 21732817221047016523000733744846420116986270804839326198062539196389549306267748760357517585469110196234850922171129735038756740692163592349840559624512151358193662780763208994917918804506427740883536652424106370195379508465894911258697159321548287784469304105984563654357399359693589470761576587480883100615429892607808784244985660084947548534868090724654488151638431181789207068294813905896655319163225751590643319900837618888217528319373211422092861373614208095838612487139227808607289385403363658252229441888956364411543385900305358132701305177182949019601127686298498613538464460281203268514614201544707776573169
  public exponent: 65537
  Validity: [From: Tue Aug 02 00:00:00 UTC 2022,
               To: Fri Sep 10 23:59:59 UTC 2027]
  Issuer: O=CID-b0cb0ca6-92e8-4785-9cf0-8ea32bfe0e07, OU=cc1cfd6a-0954-4646-8348-3e898b6cf5ad, CN=scm@scm
  SerialNumber: [    01]

Certificate Extensions: 3
[1]: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

[2]: ObjectId: 2.5.29.15 Criticality=true
KeyUsage [
  Key_CertSign
  Crl_Sign
]

[3]: ObjectId: 2.5.29.17 Criticality=false
SubjectAlternativeName [
  IPAddress: 172.18.0.7
]

]
  Algorithm: [SHA256withRSA]
  Signature:
0000: 46 E5 7A B7 1C C5 AC 24   73 08 37 03 CF DE EB D2  F.z....$s.7.....
0010: AF F7 71 DE BB 97 A1 41   3C 42 3E F4 AC B4 19 45  ..q....A&lt;B&gt;....E
0020: C8 31 2F BC 5E 31 C4 FD   CD 48 20 E8 23 2D A7 0F  .1/.^1...H .#-..
0030: 86 A4 E0 7C 14 96 3B 84   AF 4B FB B0 7A A8 87 DF  ......;..K..z...
0040: AB B5 C1 BB 32 63 CF AB   2F 2C 38 FA 41 1F B3 2D  ....2c../,8.A..-
0050: E6 94 F3 C2 15 D1 75 B5   E3 47 EB AB C3 5E CD 27  ......u..G...^.'
0060: 9A D1 40 20 54 83 A3 A0   7B DB 47 3C 33 A2 FE 5A  ..@ T.....G&lt;3..Z
0070: 22 C1 9C D6 F9 B7 D0 F4   10 C4 41 C5 51 4E 05 89  ".........A.QN..
0080: EC 90 B2 D1 2A B3 8A 3E   DC F0 75 0D 41 F5 59 EA  ....*..&gt;..u.A.Y.
0090: 0C 41 93 1E C3 54 6A 0E   9B 10 46 5E 5E 84 68 AE  .A...Tj...F^^.h.
00A0: 3A 50 DA AE 6B 3E FE EF   ED 00 E4 C6 50 3F DC C0  :P..k&gt;......P?..
00B0: C1 37 9B 7C 07 57 8F 45   E2 35 B1 56 E8 07 E4 CF  .7...W.E.5.V....
00C0: D4 29 D6 04 FC 42 C3 90   40 2E 26 51 36 EF 20 57  .)...B..@.&amp;Q6. W
00D0: 1C 74 E0 28 A8 19 2B F2   FF FC 4F 5D DD 0B 01 32  .t.(..+...O]...2
00E0: DC EC A1 4D F9 52 EB 5F   83 7C 36 55 C1 D8 22 66  ...M.R._..6U.."f
00F0: 2C BD E8 AC D3 16 AC 83   B6 0F CD EC C7 F6 36 08  ,.............6.

]</msg>
<status status="PASS" starttime="20220802 01:25:11.261" endtime="20220802 01:25:11.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:11.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:11.262" endtime="20220802 01:25:11.262"/>
</kw>
<status status="PASS" starttime="20220802 01:25:05.819" endtime="20220802 01:25:11.262"/>
</kw>
<msg timestamp="20220802 01:25:11.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:05.819" endtime="20220802 01:25:11.263"/>
</kw>
<msg timestamp="20220802 01:25:11.263" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-b0cb0ca6-92e8-4785-9cf0-8ea32bfe0e07, OU=cc1cfd6a-0954-4646-8348-3e898b6cf5ad, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20220802 01:25:05.818" endtime="20220802 01:25:11.263"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:25:11.263" endtime="20220802 01:25:11.264"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:25:05.818" endtime="20220802 01:25:11.264"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20220802 01:25:00.107" endtime="20220802 01:25:11.265"/>
</suite>
<suite id="s1-s2-s2" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Create Random Volume" library="shell">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:25:11.273" level="INFO">${random} = yhquk</msg>
<status status="PASS" starttime="20220802 01:25:11.273" endtime="20220802 01:25:11.273"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:11.276" level="INFO">Running command 'ozone sh volume create o3://om/vol-yhquk 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:14.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:14.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:11.275" endtime="20220802 01:25:14.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:14.639" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:14.639" endtime="20220802 01:25:14.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:14.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:14.639" endtime="20220802 01:25:14.640"/>
</kw>
<status status="PASS" starttime="20220802 01:25:11.274" endtime="20220802 01:25:14.640"/>
</kw>
<msg timestamp="20220802 01:25:14.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:11.274" endtime="20220802 01:25:14.641"/>
</kw>
<status status="PASS" starttime="20220802 01:25:11.274" endtime="20220802 01:25:14.641"/>
</kw>
<msg timestamp="20220802 01:25:14.641" level="INFO">${volume} = vol-yhquk</msg>
<status status="PASS" starttime="20220802 01:25:11.273" endtime="20220802 01:25:14.641"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:25:14.642" level="INFO">${VOLUME} = vol-yhquk</msg>
<status status="PASS" starttime="20220802 01:25:14.641" endtime="20220802 01:25:14.642"/>
</kw>
<status status="PASS" starttime="20220802 01:25:11.273" endtime="20220802 01:25:14.642"/>
</kw>
<test id="s1-s2-s2-t1" name="Create Encrypted Bucket" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:14.646" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-yhquk/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:18.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:18.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:14.644" endtime="20220802 01:25:18.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:18.293" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:18.292" endtime="20220802 01:25:18.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:18.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:18.293" endtime="20220802 01:25:18.293"/>
</kw>
<status status="PASS" starttime="20220802 01:25:14.644" endtime="20220802 01:25:18.293"/>
</kw>
<msg timestamp="20220802 01:25:18.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:14.643" endtime="20220802 01:25:18.294"/>
</kw>
<msg timestamp="20220802 01:25:18.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:14.643" endtime="20220802 01:25:18.294"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:25:18.294" endtime="20220802 01:25:18.295"/>
</kw>
<kw name="Bucket Exists" library="shell">
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:18.297" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-yhquk/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:21.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:21.664" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol-yhquk",
  "name" : "encrypted-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-...</msg>
<status status="PASS" starttime="20220802 01:25:18.295" endtime="20220802 01:25:21.664"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220802 01:25:21.664" endtime="20220802 01:25:21.665"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220802 01:25:21.665" endtime="20220802 01:25:21.665"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220802 01:25:21.665" endtime="20220802 01:25:21.666"/>
</kw>
<status status="PASS" starttime="20220802 01:25:18.295" endtime="20220802 01:25:21.666"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:25:14.642" endtime="20220802 01:25:21.666"/>
</test>
<test id="s1-s2-s2-t2" name="Create Key in Encrypted Bucket" line="42">
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220802 01:25:21.668" level="INFO">${key} = o3://om/vol-yhquk/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20220802 01:25:21.668" endtime="20220802 01:25:21.668"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${key} /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:21.671" level="INFO">Running command 'ozone sh key put o3://om/vol-yhquk/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:27.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:27.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:21.670" endtime="20220802 01:25:27.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:27.332" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:27.331" endtime="20220802 01:25:27.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:27.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:27.332" endtime="20220802 01:25:27.332"/>
</kw>
<status status="PASS" starttime="20220802 01:25:21.669" endtime="20220802 01:25:27.333"/>
</kw>
<msg timestamp="20220802 01:25:27.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:21.669" endtime="20220802 01:25:27.333"/>
</kw>
<msg timestamp="20220802 01:25:27.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:21.668" endtime="20220802 01:25:27.333"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:25:27.335" level="INFO">${postfix} = 15038</msg>
<status status="PASS" starttime="20220802 01:25:27.334" endtime="20220802 01:25:27.335"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220802 01:25:27.335" level="INFO">${tmpfile} = /tmp/tempkey-15038</msg>
<status status="PASS" starttime="20220802 01:25:27.335" endtime="20220802 01:25:27.335"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:27.338" level="INFO">Running command 'ozone sh key get o3://om/vol-yhquk/encrypted-bucket/passwd /tmp/tempkey-15038 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:32.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:32.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:27.337" endtime="20220802 01:25:32.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:32.502" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:32.501" endtime="20220802 01:25:32.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:32.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:32.502" endtime="20220802 01:25:32.502"/>
</kw>
<status status="PASS" starttime="20220802 01:25:27.336" endtime="20220802 01:25:32.503"/>
</kw>
<msg timestamp="20220802 01:25:32.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:27.336" endtime="20220802 01:25:32.503"/>
</kw>
<status status="PASS" starttime="20220802 01:25:27.336" endtime="20220802 01:25:32.503"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20220802 01:25:32.505" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-15038 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:32.508" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20220802 01:25:32.504" endtime="20220802 01:25:32.508"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:32.511" level="INFO">Running command 'rm -f /tmp/tempkey-15038 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:32.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:32.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:32.509" endtime="20220802 01:25:32.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:32.514" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:32.513" endtime="20220802 01:25:32.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:32.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:32.514" endtime="20220802 01:25:32.515"/>
</kw>
<status status="PASS" starttime="20220802 01:25:32.509" endtime="20220802 01:25:32.515"/>
</kw>
<msg timestamp="20220802 01:25:32.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:32.509" endtime="20220802 01:25:32.515"/>
</kw>
<status status="PASS" starttime="20220802 01:25:32.508" endtime="20220802 01:25:32.515"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220802 01:25:32.516" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20220802 01:25:32.516" endtime="20220802 01:25:32.516"/>
</kw>
<msg timestamp="20220802 01:25:32.516" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20220802 01:25:27.334" endtime="20220802 01:25:32.516"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220802 01:25:32.516" endtime="20220802 01:25:32.517"/>
</kw>
<status status="PASS" starttime="20220802 01:25:27.333" endtime="20220802 01:25:32.517"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:25:21.667" endtime="20220802 01:25:32.517"/>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20220802 01:25:11.266" endtime="20220802 01:25:32.518"/>
</suite>
<suite id="s1-s2-s3" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s2-s3-t1" name="Create volume bucket with wrong credentials" line="37">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:32.529" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:32.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:32.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:32.527" endtime="20220802 01:25:32.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:32.533" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:32.532" endtime="20220802 01:25:32.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:32.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:32.533" endtime="20220802 01:25:32.534"/>
</kw>
<status status="PASS" starttime="20220802 01:25:32.527" endtime="20220802 01:25:32.534"/>
</kw>
<msg timestamp="20220802 01:25:32.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:32.527" endtime="20220802 01:25:32.534"/>
</kw>
<status status="PASS" starttime="20220802 01:25:32.526" endtime="20220802 01:25:32.534"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:32.536" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:35.332" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:25:35.332" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220802 01:25:32.534" endtime="20220802 01:25:35.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:25:35.333" endtime="20220802 01:25:35.333"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:25:32.526" endtime="20220802 01:25:35.334"/>
</test>
<test id="s1-s2-s3-t2" name="Create volume with non-admin user" line="42">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:35.339" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:35.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:35.343" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:25:35.338" endtime="20220802 01:25:35.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:35.344" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:25:35.343" endtime="20220802 01:25:35.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:35.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:35.344" endtime="20220802 01:25:35.345"/>
</kw>
<status status="PASS" starttime="20220802 01:25:35.337" endtime="20220802 01:25:35.345"/>
</kw>
<msg timestamp="20220802 01:25:35.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:35.337" endtime="20220802 01:25:35.345"/>
</kw>
<msg timestamp="20220802 01:25:35.346" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:25:35.337" endtime="20220802 01:25:35.346"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:25:35.347" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:25:35.346" endtime="20220802 01:25:35.347"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:35.350" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:35.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:35.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:35.349" endtime="20220802 01:25:35.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:35.357" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:35.357" endtime="20220802 01:25:35.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:35.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:35.357" endtime="20220802 01:25:35.358"/>
</kw>
<status status="PASS" starttime="20220802 01:25:35.348" endtime="20220802 01:25:35.358"/>
</kw>
<msg timestamp="20220802 01:25:35.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:35.348" endtime="20220802 01:25:35.358"/>
</kw>
<status status="PASS" starttime="20220802 01:25:35.347" endtime="20220802 01:25:35.359"/>
</kw>
<status status="PASS" starttime="20220802 01:25:35.347" endtime="20220802 01:25:35.359"/>
</kw>
<status status="PASS" starttime="20220802 01:25:35.336" endtime="20220802 01:25:35.359"/>
</kw>
<status status="PASS" starttime="20220802 01:25:35.336" endtime="20220802 01:25:35.359"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:35.360" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:38.597" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:25:38.597" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have CREATE permission to access volume Volume:fstest </msg>
<status status="PASS" starttime="20220802 01:25:35.359" endtime="20220802 01:25:38.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:25:38.598" endtime="20220802 01:25:38.598"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:25:35.335" endtime="20220802 01:25:38.599"/>
</test>
<test id="s1-s2-s3-t3" name="Create bucket with non-admin owner(testuser2)" line="47">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:38.604" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:38.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:38.607" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:25:38.602" endtime="20220802 01:25:38.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:38.608" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:25:38.607" endtime="20220802 01:25:38.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:38.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:38.608" endtime="20220802 01:25:38.608"/>
</kw>
<status status="PASS" starttime="20220802 01:25:38.602" endtime="20220802 01:25:38.609"/>
</kw>
<msg timestamp="20220802 01:25:38.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:38.602" endtime="20220802 01:25:38.609"/>
</kw>
<msg timestamp="20220802 01:25:38.609" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:25:38.601" endtime="20220802 01:25:38.609"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:25:38.610" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:25:38.610" endtime="20220802 01:25:38.610"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:38.613" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:38.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:38.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:38.612" endtime="20220802 01:25:38.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:38.620" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:38.620" endtime="20220802 01:25:38.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:38.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:38.621" endtime="20220802 01:25:38.621"/>
</kw>
<status status="PASS" starttime="20220802 01:25:38.611" endtime="20220802 01:25:38.621"/>
</kw>
<msg timestamp="20220802 01:25:38.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:38.611" endtime="20220802 01:25:38.622"/>
</kw>
<status status="PASS" starttime="20220802 01:25:38.610" endtime="20220802 01:25:38.622"/>
</kw>
<status status="PASS" starttime="20220802 01:25:38.610" endtime="20220802 01:25:38.622"/>
</kw>
<status status="PASS" starttime="20220802 01:25:38.601" endtime="20220802 01:25:38.622"/>
</kw>
<status status="PASS" starttime="20220802 01:25:38.601" endtime="20220802 01:25:38.622"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:25:38.623" level="INFO">${random} = 50</msg>
<status status="PASS" starttime="20220802 01:25:38.623" endtime="20220802 01:25:38.623"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:25:38.624" level="INFO">${volume1} = fstest50</msg>
<status status="PASS" starttime="20220802 01:25:38.623" endtime="20220802 01:25:38.625"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:25:38.626" level="INFO">${volume2} = fstest250</msg>
<status status="PASS" starttime="20220802 01:25:38.625" endtime="20220802 01:25:38.626"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:25:38.627" level="INFO">${volume3} = fstest350</msg>
<status status="PASS" starttime="20220802 01:25:38.626" endtime="20220802 01:25:38.627"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:25:38.629" level="INFO">${volume4} = fstest450</msg>
<status status="PASS" starttime="20220802 01:25:38.627" endtime="20220802 01:25:38.629"/>
</kw>
<status status="PASS" starttime="20220802 01:25:38.623" endtime="20220802 01:25:38.629"/>
</kw>
<status status="PASS" starttime="20220802 01:25:38.622" endtime="20220802 01:25:38.629"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:38.631" level="INFO">Running command 'ozone sh volume create o3://om/fstest450 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:41.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:41.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:38.630" endtime="20220802 01:25:41.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:41.899" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:41.898" endtime="20220802 01:25:41.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:41.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:41.899" endtime="20220802 01:25:41.899"/>
</kw>
<status status="PASS" starttime="20220802 01:25:38.630" endtime="20220802 01:25:41.900"/>
</kw>
<msg timestamp="20220802 01:25:41.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:38.629" endtime="20220802 01:25:41.900"/>
</kw>
<status status="PASS" starttime="20220802 01:25:38.629" endtime="20220802 01:25:41.900"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:41.905" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:41.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:41.908" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:25:41.903" endtime="20220802 01:25:41.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:41.908" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:25:41.908" endtime="20220802 01:25:41.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:41.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:41.909" endtime="20220802 01:25:41.909"/>
</kw>
<status status="PASS" starttime="20220802 01:25:41.902" endtime="20220802 01:25:41.909"/>
</kw>
<msg timestamp="20220802 01:25:41.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:41.902" endtime="20220802 01:25:41.910"/>
</kw>
<msg timestamp="20220802 01:25:41.910" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:25:41.902" endtime="20220802 01:25:41.910"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:25:41.910" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:25:41.910" endtime="20220802 01:25:41.910"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:41.914" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:41.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:41.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:41.912" endtime="20220802 01:25:41.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:41.921" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:41.920" endtime="20220802 01:25:41.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:41.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:41.921" endtime="20220802 01:25:41.922"/>
</kw>
<status status="PASS" starttime="20220802 01:25:41.912" endtime="20220802 01:25:41.922"/>
</kw>
<msg timestamp="20220802 01:25:41.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:41.912" endtime="20220802 01:25:41.922"/>
</kw>
<status status="PASS" starttime="20220802 01:25:41.911" endtime="20220802 01:25:41.923"/>
</kw>
<status status="PASS" starttime="20220802 01:25:41.911" endtime="20220802 01:25:41.923"/>
</kw>
<status status="PASS" starttime="20220802 01:25:41.901" endtime="20220802 01:25:41.923"/>
</kw>
<status status="PASS" starttime="20220802 01:25:41.901" endtime="20220802 01:25:41.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:41.925" level="INFO">Running command 'ozone sh bucket create o3://om/fstest450/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:45.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:45.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:41.924" endtime="20220802 01:25:45.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:45.052" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:45.052" endtime="20220802 01:25:45.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:45.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:45.053" endtime="20220802 01:25:45.053"/>
</kw>
<status status="PASS" starttime="20220802 01:25:41.923" endtime="20220802 01:25:45.053"/>
</kw>
<msg timestamp="20220802 01:25:45.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:41.923" endtime="20220802 01:25:45.054"/>
</kw>
<msg timestamp="20220802 01:25:45.054" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:25:41.923" endtime="20220802 01:25:45.054"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:25:45.054" endtime="20220802 01:25:45.055"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:45.058" level="INFO">Running command 'ozone sh key put fstest450/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:50.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:50.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:45.056" endtime="20220802 01:25:50.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:50.180" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:50.180" endtime="20220802 01:25:50.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:50.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:50.181" endtime="20220802 01:25:50.181"/>
</kw>
<status status="PASS" starttime="20220802 01:25:45.055" endtime="20220802 01:25:50.181"/>
</kw>
<msg timestamp="20220802 01:25:50.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:45.055" endtime="20220802 01:25:50.182"/>
</kw>
<msg timestamp="20220802 01:25:50.182" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:25:45.055" endtime="20220802 01:25:50.182"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:25:50.182" endtime="20220802 01:25:50.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:50.186" level="INFO">Running command 'ozone sh key list fstest450/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:53.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:53.808" level="INFO">${output} = [ {
  "volumeName" : "fstest450",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-08-02T01:25:48.178Z",
  "modificationTime" : "2022-08-02T01:25:49.771Z",...</msg>
<status status="PASS" starttime="20220802 01:25:50.184" endtime="20220802 01:25:53.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:53.809" level="INFO">[ {
  "volumeName" : "fstest450",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-08-02T01:25:48.178Z",
  "modificationTime" : "2022-08-02T01:25:49.771Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220802 01:25:53.808" endtime="20220802 01:25:53.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:53.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:53.809" endtime="20220802 01:25:53.810"/>
</kw>
<status status="PASS" starttime="20220802 01:25:50.183" endtime="20220802 01:25:53.810"/>
</kw>
<msg timestamp="20220802 01:25:53.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:50.183" endtime="20220802 01:25:53.810"/>
</kw>
<msg timestamp="20220802 01:25:53.810" level="INFO">${result} = [ {
  "volumeName" : "fstest450",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-08-02T01:25:48.178Z",
  "modificationTime" : "2022-08-02T01:25:49.771Z",...</msg>
<status status="PASS" starttime="20220802 01:25:50.183" endtime="20220802 01:25:53.810"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:25:53.811" endtime="20220802 01:25:53.811"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:53.814" level="INFO">Running command 'ozone sh key delete fstest450/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:25:57.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:25:57.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:53.812" endtime="20220802 01:25:57.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:25:57.176" level="INFO"/>
<status status="PASS" starttime="20220802 01:25:57.175" endtime="20220802 01:25:57.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:25:57.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:25:57.176" endtime="20220802 01:25:57.177"/>
</kw>
<status status="PASS" starttime="20220802 01:25:53.812" endtime="20220802 01:25:57.177"/>
</kw>
<msg timestamp="20220802 01:25:57.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:53.812" endtime="20220802 01:25:57.178"/>
</kw>
<msg timestamp="20220802 01:25:57.178" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:25:53.811" endtime="20220802 01:25:57.178"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:25:57.178" endtime="20220802 01:25:57.179"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:25:57.182" level="INFO">Running command 'ozone sh bucket delete fstest450/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:00.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:00.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:25:57.180" endtime="20220802 01:26:00.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:00.544" level="INFO"/>
<status status="PASS" starttime="20220802 01:26:00.543" endtime="20220802 01:26:00.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:00.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:00.544" endtime="20220802 01:26:00.545"/>
</kw>
<status status="PASS" starttime="20220802 01:25:57.179" endtime="20220802 01:26:00.545"/>
</kw>
<msg timestamp="20220802 01:26:00.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:25:57.179" endtime="20220802 01:26:00.545"/>
</kw>
<msg timestamp="20220802 01:26:00.546" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:25:57.179" endtime="20220802 01:26:00.546"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:26:00.546" endtime="20220802 01:26:00.546"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:25:38.600" endtime="20220802 01:26:00.546"/>
</test>
<test id="s1-s2-s3-t4" name="Create volume bucket with credentials" line="63">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:00.551" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:00.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:00.555" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:26:00.549" endtime="20220802 01:26:00.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:00.556" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:26:00.555" endtime="20220802 01:26:00.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:00.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:00.556" endtime="20220802 01:26:00.557"/>
</kw>
<status status="PASS" starttime="20220802 01:26:00.549" endtime="20220802 01:26:00.557"/>
</kw>
<msg timestamp="20220802 01:26:00.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:00.549" endtime="20220802 01:26:00.557"/>
</kw>
<msg timestamp="20220802 01:26:00.558" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:26:00.548" endtime="20220802 01:26:00.558"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:26:00.558" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:26:00.558" endtime="20220802 01:26:00.558"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:00.562" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:00.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:00.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:26:00.560" endtime="20220802 01:26:00.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:00.569" level="INFO"/>
<status status="PASS" starttime="20220802 01:26:00.568" endtime="20220802 01:26:00.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:00.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:00.569" endtime="20220802 01:26:00.570"/>
</kw>
<status status="PASS" starttime="20220802 01:26:00.559" endtime="20220802 01:26:00.570"/>
</kw>
<msg timestamp="20220802 01:26:00.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:00.559" endtime="20220802 01:26:00.571"/>
</kw>
<status status="PASS" starttime="20220802 01:26:00.559" endtime="20220802 01:26:00.571"/>
</kw>
<status status="PASS" starttime="20220802 01:26:00.558" endtime="20220802 01:26:00.571"/>
</kw>
<status status="PASS" starttime="20220802 01:26:00.548" endtime="20220802 01:26:00.571"/>
</kw>
<status status="PASS" starttime="20220802 01:26:00.548" endtime="20220802 01:26:00.571"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:26:00.572" level="INFO">${random} = 08</msg>
<status status="PASS" starttime="20220802 01:26:00.572" endtime="20220802 01:26:00.573"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:26:00.573" level="INFO">${volume1} = fstest08</msg>
<status status="PASS" starttime="20220802 01:26:00.573" endtime="20220802 01:26:00.573"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:26:00.574" level="INFO">${volume2} = fstest208</msg>
<status status="PASS" starttime="20220802 01:26:00.573" endtime="20220802 01:26:00.574"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:26:00.574" level="INFO">${volume3} = fstest308</msg>
<status status="PASS" starttime="20220802 01:26:00.574" endtime="20220802 01:26:00.574"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:26:00.575" level="INFO">${volume4} = fstest408</msg>
<status status="PASS" starttime="20220802 01:26:00.574" endtime="20220802 01:26:00.575"/>
</kw>
<status status="PASS" starttime="20220802 01:26:00.571" endtime="20220802 01:26:00.575"/>
</kw>
<status status="PASS" starttime="20220802 01:26:00.571" endtime="20220802 01:26:00.575"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:00.578" level="INFO">Running command 'ozone sh volume create o3://om/fstest08 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:04.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:04.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:26:00.576" endtime="20220802 01:26:04.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:04.300" level="INFO"/>
<status status="PASS" starttime="20220802 01:26:04.300" endtime="20220802 01:26:04.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:04.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:04.301" endtime="20220802 01:26:04.301"/>
</kw>
<status status="PASS" starttime="20220802 01:26:00.576" endtime="20220802 01:26:04.302"/>
</kw>
<msg timestamp="20220802 01:26:04.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:00.575" endtime="20220802 01:26:04.302"/>
</kw>
<status status="PASS" starttime="20220802 01:26:00.575" endtime="20220802 01:26:04.302"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:04.306" level="INFO">Running command 'ozone sh volume create o3://om/fstest208 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:08.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:08.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:26:04.304" endtime="20220802 01:26:08.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:08.207" level="INFO"/>
<status status="PASS" starttime="20220802 01:26:08.206" endtime="20220802 01:26:08.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:08.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:08.207" endtime="20220802 01:26:08.208"/>
</kw>
<status status="PASS" starttime="20220802 01:26:04.304" endtime="20220802 01:26:08.208"/>
</kw>
<msg timestamp="20220802 01:26:08.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:04.303" endtime="20220802 01:26:08.209"/>
</kw>
<status status="PASS" starttime="20220802 01:26:04.303" endtime="20220802 01:26:08.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:08.212" level="INFO">Running command 'ozone sh bucket create o3://om/fstest08/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:11.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:11.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:26:08.210" endtime="20220802 01:26:11.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:11.763" level="INFO"/>
<status status="PASS" starttime="20220802 01:26:11.762" endtime="20220802 01:26:11.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:11.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:11.763" endtime="20220802 01:26:11.763"/>
</kw>
<status status="PASS" starttime="20220802 01:26:08.210" endtime="20220802 01:26:11.764"/>
</kw>
<msg timestamp="20220802 01:26:11.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:08.210" endtime="20220802 01:26:11.764"/>
</kw>
<status status="PASS" starttime="20220802 01:26:08.209" endtime="20220802 01:26:11.764"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:11.768" level="INFO">Running command 'ozone sh bucket create o3://om/fstest08/bucket2 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:15.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:15.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:26:11.766" endtime="20220802 01:26:15.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:15.276" level="INFO"/>
<status status="PASS" starttime="20220802 01:26:15.275" endtime="20220802 01:26:15.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:15.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:15.276" endtime="20220802 01:26:15.277"/>
</kw>
<status status="PASS" starttime="20220802 01:26:11.765" endtime="20220802 01:26:15.277"/>
</kw>
<msg timestamp="20220802 01:26:15.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:11.765" endtime="20220802 01:26:15.277"/>
</kw>
<status status="PASS" starttime="20220802 01:26:11.764" endtime="20220802 01:26:15.278"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:15.281" level="INFO">Running command 'ozone sh bucket create o3://om/fstest208/bucket3 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:18.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:18.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:26:15.279" endtime="20220802 01:26:18.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:18.881" level="INFO"/>
<status status="PASS" starttime="20220802 01:26:18.880" endtime="20220802 01:26:18.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:18.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:18.881" endtime="20220802 01:26:18.882"/>
</kw>
<status status="PASS" starttime="20220802 01:26:15.278" endtime="20220802 01:26:18.882"/>
</kw>
<msg timestamp="20220802 01:26:18.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:15.278" endtime="20220802 01:26:18.883"/>
</kw>
<status status="PASS" starttime="20220802 01:26:15.278" endtime="20220802 01:26:18.883"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:26:00.547" endtime="20220802 01:26:18.883"/>
</test>
<test id="s1-s2-s3-t5" name="Check volume from ozonefs" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:18.888" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest08/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:22.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:22.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:26:18.886" endtime="20220802 01:26:22.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:22.093" level="INFO"/>
<status status="PASS" starttime="20220802 01:26:22.092" endtime="20220802 01:26:22.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:22.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:22.093" endtime="20220802 01:26:22.094"/>
</kw>
<status status="PASS" starttime="20220802 01:26:18.886" endtime="20220802 01:26:22.094"/>
</kw>
<msg timestamp="20220802 01:26:22.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:18.885" endtime="20220802 01:26:22.094"/>
</kw>
<msg timestamp="20220802 01:26:22.095" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:26:18.885" endtime="20220802 01:26:22.095"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:26:18.884" endtime="20220802 01:26:22.095"/>
</test>
<test id="s1-s2-s3-t6" name="Test Volume Acls" line="76">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:22.100" level="INFO">Running command 'ozone sh volume create fstest308 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:25.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:25.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:26:22.098" endtime="20220802 01:26:25.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:25.473" level="INFO"/>
<status status="PASS" starttime="20220802 01:26:25.472" endtime="20220802 01:26:25.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:25.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:25.474" endtime="20220802 01:26:25.474"/>
</kw>
<status status="PASS" starttime="20220802 01:26:22.097" endtime="20220802 01:26:25.474"/>
</kw>
<msg timestamp="20220802 01:26:25.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:22.097" endtime="20220802 01:26:25.475"/>
</kw>
<msg timestamp="20220802 01:26:25.475" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:26:22.096" endtime="20220802 01:26:25.475"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:26:25.475" endtime="20220802 01:26:25.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:25.479" level="INFO">Running command 'ozone sh volume getacl fstest308 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:28.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:28.994" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:26:25.477" endtime="20220802 01:26:28.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:28.996" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:26:28.995" endtime="20220802 01:26:28.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:28.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:28.996" endtime="20220802 01:26:28.996"/>
</kw>
<status status="PASS" starttime="20220802 01:26:25.477" endtime="20220802 01:26:28.997"/>
</kw>
<msg timestamp="20220802 01:26:28.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:25.476" endtime="20220802 01:26:28.997"/>
</kw>
<msg timestamp="20220802 01:26:28.997" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:26:25.476" endtime="20220802 01:26:28.997"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:26:28.997" endtime="20220802 01:26:28.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:29.002" level="INFO">Running command 'ozone sh volume addacl fstest308 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:32.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:32.368" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220802 01:26:29.000" endtime="20220802 01:26:32.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:32.370" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220802 01:26:32.369" endtime="20220802 01:26:32.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:32.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:32.370" endtime="20220802 01:26:32.370"/>
</kw>
<status status="PASS" starttime="20220802 01:26:29.000" endtime="20220802 01:26:32.371"/>
</kw>
<msg timestamp="20220802 01:26:32.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:28.999" endtime="20220802 01:26:32.371"/>
</kw>
<msg timestamp="20220802 01:26:32.371" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220802 01:26:28.998" endtime="20220802 01:26:32.371"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:32.374" level="INFO">Running command 'ozone sh volume getacl fstest308 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:36.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:36.152" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220802 01:26:32.373" endtime="20220802 01:26:36.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:36.153" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:26:36.153" endtime="20220802 01:26:36.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:36.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:36.154" endtime="20220802 01:26:36.154"/>
</kw>
<status status="PASS" starttime="20220802 01:26:32.372" endtime="20220802 01:26:36.154"/>
</kw>
<msg timestamp="20220802 01:26:36.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:32.372" endtime="20220802 01:26:36.155"/>
</kw>
<msg timestamp="20220802 01:26:36.155" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220802 01:26:32.372" endtime="20220802 01:26:36.155"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:26:36.155" endtime="20220802 01:26:36.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${volume3} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:36.159" level="INFO">Running command 'ozone sh volume removeacl fstest308 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:39.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:39.416" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:26:36.157" endtime="20220802 01:26:39.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:39.417" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:26:39.416" endtime="20220802 01:26:39.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:39.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:39.417" endtime="20220802 01:26:39.418"/>
</kw>
<status status="PASS" starttime="20220802 01:26:36.157" endtime="20220802 01:26:39.418"/>
</kw>
<msg timestamp="20220802 01:26:39.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:36.157" endtime="20220802 01:26:39.419"/>
</kw>
<msg timestamp="20220802 01:26:39.419" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:26:36.156" endtime="20220802 01:26:39.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:39.422" level="INFO">Running command 'ozone sh volume getacl fstest308 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:42.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:42.977" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220802 01:26:39.420" endtime="20220802 01:26:42.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:42.978" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:26:42.977" endtime="20220802 01:26:42.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:42.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:42.978" endtime="20220802 01:26:42.978"/>
</kw>
<status status="PASS" starttime="20220802 01:26:39.420" endtime="20220802 01:26:42.979"/>
</kw>
<msg timestamp="20220802 01:26:42.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:39.420" endtime="20220802 01:26:42.979"/>
</kw>
<msg timestamp="20220802 01:26:42.979" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "...</msg>
<status status="PASS" starttime="20220802 01:26:39.419" endtime="20220802 01:26:42.979"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:26:42.980" endtime="20220802 01:26:42.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${volume3} -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:42.984" level="INFO">Running command 'ozone sh volume setacl fstest308 -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:46.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:46.063" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:26:42.982" endtime="20220802 01:26:46.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:46.065" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:26:46.064" endtime="20220802 01:26:46.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:46.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:46.065" endtime="20220802 01:26:46.066"/>
</kw>
<status status="PASS" starttime="20220802 01:26:42.981" endtime="20220802 01:26:46.066"/>
</kw>
<msg timestamp="20220802 01:26:46.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:42.981" endtime="20220802 01:26:46.066"/>
</kw>
<msg timestamp="20220802 01:26:46.067" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:26:42.980" endtime="20220802 01:26:46.067"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:46.070" level="INFO">Running command 'ozone sh volume getacl fstest308 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:49.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:49.629" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220802 01:26:46.068" endtime="20220802 01:26:49.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:49.630" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:26:49.629" endtime="20220802 01:26:49.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:49.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:49.630" endtime="20220802 01:26:49.631"/>
</kw>
<status status="PASS" starttime="20220802 01:26:46.067" endtime="20220802 01:26:49.631"/>
</kw>
<msg timestamp="20220802 01:26:49.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:46.067" endtime="20220802 01:26:49.631"/>
</kw>
<msg timestamp="20220802 01:26:49.631" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220802 01:26:46.067" endtime="20220802 01:26:49.631"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:26:49.632" endtime="20220802 01:26:49.632"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:26:49.632" endtime="20220802 01:26:49.633"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:26:22.096" endtime="20220802 01:26:49.633"/>
</test>
<test id="s1-s2-s3-t7" name="Test Bucket Acls" line="92">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${volume3}/bk1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:49.638" level="INFO">Running command 'ozone sh bucket create fstest308/bk1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:52.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:52.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:26:49.636" endtime="20220802 01:26:52.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:52.845" level="INFO"/>
<status status="PASS" starttime="20220802 01:26:52.844" endtime="20220802 01:26:52.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:52.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:52.845" endtime="20220802 01:26:52.846"/>
</kw>
<status status="PASS" starttime="20220802 01:26:49.636" endtime="20220802 01:26:52.846"/>
</kw>
<msg timestamp="20220802 01:26:52.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:49.635" endtime="20220802 01:26:52.847"/>
</kw>
<msg timestamp="20220802 01:26:52.847" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220802 01:26:49.635" endtime="20220802 01:26:52.847"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:26:52.847" endtime="20220802 01:26:52.848"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:52.851" level="INFO">Running command 'ozone sh bucket getacl fstest308/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:56.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:56.370" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:26:52.849" endtime="20220802 01:26:56.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:56.371" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:26:56.370" endtime="20220802 01:26:56.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:56.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:56.371" endtime="20220802 01:26:56.372"/>
</kw>
<status status="PASS" starttime="20220802 01:26:52.849" endtime="20220802 01:26:56.372"/>
</kw>
<msg timestamp="20220802 01:26:56.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:52.848" endtime="20220802 01:26:56.372"/>
</kw>
<msg timestamp="20220802 01:26:56.373" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:26:52.848" endtime="20220802 01:26:56.373"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:26:56.373" endtime="20220802 01:26:56.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:56.377" level="INFO">Running command 'ozone sh bucket addacl fstest308/bk1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:26:59.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:26:59.781" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:26:56.374" endtime="20220802 01:26:59.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:26:59.782" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:26:59.781" endtime="20220802 01:26:59.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:26:59.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:26:59.782" endtime="20220802 01:26:59.783"/>
</kw>
<status status="PASS" starttime="20220802 01:26:56.374" endtime="20220802 01:26:59.783"/>
</kw>
<msg timestamp="20220802 01:26:59.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:56.374" endtime="20220802 01:26:59.783"/>
</kw>
<msg timestamp="20220802 01:26:59.784" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:26:56.373" endtime="20220802 01:26:59.784"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:26:59.787" level="INFO">Running command 'ozone sh bucket getacl fstest308/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:03.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:03.152" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:26:59.785" endtime="20220802 01:27:03.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:03.153" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:27:03.152" endtime="20220802 01:27:03.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:03.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:03.153" endtime="20220802 01:27:03.154"/>
</kw>
<status status="PASS" starttime="20220802 01:26:59.785" endtime="20220802 01:27:03.154"/>
</kw>
<msg timestamp="20220802 01:27:03.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:26:59.784" endtime="20220802 01:27:03.154"/>
</kw>
<msg timestamp="20220802 01:27:03.155" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:26:59.784" endtime="20220802 01:27:03.155"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:27:03.155" endtime="20220802 01:27:03.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${volume3}/bk1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:03.158" level="INFO">Running command 'ozone sh bucket removeacl fstest308/bk1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:06.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:06.372" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:27:03.156" endtime="20220802 01:27:06.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:06.373" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:27:06.372" endtime="20220802 01:27:06.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:06.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:06.373" endtime="20220802 01:27:06.374"/>
</kw>
<status status="PASS" starttime="20220802 01:27:03.156" endtime="20220802 01:27:06.374"/>
</kw>
<msg timestamp="20220802 01:27:06.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:03.156" endtime="20220802 01:27:06.375"/>
</kw>
<msg timestamp="20220802 01:27:06.375" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:27:03.155" endtime="20220802 01:27:06.375"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:06.378" level="INFO">Running command 'ozone sh bucket getacl fstest308/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:09.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:09.959" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:27:06.376" endtime="20220802 01:27:09.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:09.960" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:27:09.960" endtime="20220802 01:27:09.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:09.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:09.961" endtime="20220802 01:27:09.961"/>
</kw>
<status status="PASS" starttime="20220802 01:27:06.376" endtime="20220802 01:27:09.961"/>
</kw>
<msg timestamp="20220802 01:27:09.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:06.375" endtime="20220802 01:27:09.962"/>
</kw>
<msg timestamp="20220802 01:27:09.962" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:27:06.375" endtime="20220802 01:27:09.962"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:27:09.962" endtime="20220802 01:27:09.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${volume3}/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:09.966" level="INFO">Running command 'ozone sh bucket setacl fstest308/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:13.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:13.293" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:27:09.964" endtime="20220802 01:27:13.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:13.294" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:27:13.293" endtime="20220802 01:27:13.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:13.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:13.294" endtime="20220802 01:27:13.295"/>
</kw>
<status status="PASS" starttime="20220802 01:27:09.964" endtime="20220802 01:27:13.295"/>
</kw>
<msg timestamp="20220802 01:27:13.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:09.964" endtime="20220802 01:27:13.295"/>
</kw>
<msg timestamp="20220802 01:27:13.296" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:27:09.963" endtime="20220802 01:27:13.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:13.300" level="INFO">Running command 'ozone sh bucket getacl fstest308/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:16.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:16.559" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220802 01:27:13.298" endtime="20220802 01:27:16.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:16.561" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:27:16.560" endtime="20220802 01:27:16.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:16.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:16.561" endtime="20220802 01:27:16.561"/>
</kw>
<status status="PASS" starttime="20220802 01:27:13.297" endtime="20220802 01:27:16.562"/>
</kw>
<msg timestamp="20220802 01:27:16.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:13.296" endtime="20220802 01:27:16.562"/>
</kw>
<msg timestamp="20220802 01:27:16.562" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220802 01:27:13.296" endtime="20220802 01:27:16.562"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:27:16.562" endtime="20220802 01:27:16.563"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:27:16.563" endtime="20220802 01:27:16.563"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:26:49.634" endtime="20220802 01:27:16.564"/>
</test>
<test id="s1-s2-s3-t8" name="Test key Acls" line="108">
<kw name="Execute" library="os">
<arg>ozone sh key put ${volume3}/bk1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:16.568" level="INFO">Running command 'ozone sh key put fstest308/bk1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:21.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:21.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:27:16.567" endtime="20220802 01:27:21.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:21.828" level="INFO"/>
<status status="PASS" starttime="20220802 01:27:21.827" endtime="20220802 01:27:21.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:21.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:21.828" endtime="20220802 01:27:21.828"/>
</kw>
<status status="PASS" starttime="20220802 01:27:16.566" endtime="20220802 01:27:21.829"/>
</kw>
<msg timestamp="20220802 01:27:21.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:16.566" endtime="20220802 01:27:21.829"/>
</kw>
<status status="PASS" starttime="20220802 01:27:16.565" endtime="20220802 01:27:21.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:21.832" level="INFO">Running command 'ozone sh key getacl fstest308/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:25.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:25.318" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:27:21.831" endtime="20220802 01:27:25.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:25.319" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:27:25.319" endtime="20220802 01:27:25.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:25.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:25.319" endtime="20220802 01:27:25.320"/>
</kw>
<status status="PASS" starttime="20220802 01:27:21.830" endtime="20220802 01:27:25.320"/>
</kw>
<msg timestamp="20220802 01:27:25.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:21.830" endtime="20220802 01:27:25.321"/>
</kw>
<msg timestamp="20220802 01:27:25.321" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:27:21.829" endtime="20220802 01:27:25.321"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:27:25.321" endtime="20220802 01:27:25.322"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${volume3}/bk1/key1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:25.325" level="INFO">Running command 'ozone sh key addacl fstest308/bk1/key1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:28.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:28.512" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:27:25.323" endtime="20220802 01:27:28.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:28.513" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:27:28.513" endtime="20220802 01:27:28.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:28.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:28.514" endtime="20220802 01:27:28.514"/>
</kw>
<status status="PASS" starttime="20220802 01:27:25.322" endtime="20220802 01:27:28.514"/>
</kw>
<msg timestamp="20220802 01:27:28.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:25.322" endtime="20220802 01:27:28.515"/>
</kw>
<msg timestamp="20220802 01:27:28.515" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:27:25.322" endtime="20220802 01:27:28.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:28.519" level="INFO">Running command 'ozone sh key getacl fstest308/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:31.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:31.971" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:27:28.517" endtime="20220802 01:27:31.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:31.972" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:27:31.971" endtime="20220802 01:27:31.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:31.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:31.972" endtime="20220802 01:27:31.973"/>
</kw>
<status status="PASS" starttime="20220802 01:27:28.516" endtime="20220802 01:27:31.973"/>
</kw>
<msg timestamp="20220802 01:27:31.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:28.516" endtime="20220802 01:27:31.974"/>
</kw>
<msg timestamp="20220802 01:27:31.974" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:27:28.515" endtime="20220802 01:27:31.974"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:27:31.974" endtime="20220802 01:27:31.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${volume3}/bk1/key1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:31.978" level="INFO">Running command 'ozone sh key removeacl fstest308/bk1/key1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:36.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:36.090" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:27:31.976" endtime="20220802 01:27:36.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:36.091" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:27:36.090" endtime="20220802 01:27:36.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:36.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:36.091" endtime="20220802 01:27:36.091"/>
</kw>
<status status="PASS" starttime="20220802 01:27:31.975" endtime="20220802 01:27:36.092"/>
</kw>
<msg timestamp="20220802 01:27:36.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:31.975" endtime="20220802 01:27:36.092"/>
</kw>
<msg timestamp="20220802 01:27:36.092" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:27:31.974" endtime="20220802 01:27:36.092"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:36.096" level="INFO">Running command 'ozone sh key getacl fstest308/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:39.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:39.613" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:27:36.094" endtime="20220802 01:27:39.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:39.614" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:27:39.613" endtime="20220802 01:27:39.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:39.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:39.614" endtime="20220802 01:27:39.614"/>
</kw>
<status status="PASS" starttime="20220802 01:27:36.093" endtime="20220802 01:27:39.615"/>
</kw>
<msg timestamp="20220802 01:27:39.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:36.093" endtime="20220802 01:27:39.615"/>
</kw>
<msg timestamp="20220802 01:27:39.615" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20220802 01:27:36.093" endtime="20220802 01:27:39.615"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:27:39.616" endtime="20220802 01:27:39.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${volume3}/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:39.619" level="INFO">Running command 'ozone sh key setacl fstest308/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:42.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:42.896" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:27:39.617" endtime="20220802 01:27:42.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:42.897" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:27:42.897" endtime="20220802 01:27:42.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:42.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:42.898" endtime="20220802 01:27:42.898"/>
</kw>
<status status="PASS" starttime="20220802 01:27:39.617" endtime="20220802 01:27:42.898"/>
</kw>
<msg timestamp="20220802 01:27:42.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:39.617" endtime="20220802 01:27:42.899"/>
</kw>
<msg timestamp="20220802 01:27:42.899" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220802 01:27:39.616" endtime="20220802 01:27:42.899"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:42.902" level="INFO">Running command 'ozone sh key getacl fstest308/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:46.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:46.297" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220802 01:27:42.900" endtime="20220802 01:27:46.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:46.298" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:27:46.298" endtime="20220802 01:27:46.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:46.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:46.298" endtime="20220802 01:27:46.299"/>
</kw>
<status status="PASS" starttime="20220802 01:27:42.900" endtime="20220802 01:27:46.299"/>
</kw>
<msg timestamp="20220802 01:27:46.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:42.900" endtime="20220802 01:27:46.300"/>
</kw>
<msg timestamp="20220802 01:27:46.300" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220802 01:27:42.899" endtime="20220802 01:27:46.300"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:27:46.300" endtime="20220802 01:27:46.301"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220802 01:27:46.301" endtime="20220802 01:27:46.301"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:27:16.565" endtime="20220802 01:27:46.301"/>
</test>
<test id="s1-s2-s3-t9" name="Test native authorizer" line="123">
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${volume3} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:46.306" level="INFO">Running command 'ozone sh volume removeacl fstest308 -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:49.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:49.580" level="INFO">${output} = ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:27:46.304" endtime="20220802 01:27:49.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:49.581" level="INFO">ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220802 01:27:49.581" endtime="20220802 01:27:49.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:49.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:49.582" endtime="20220802 01:27:49.582"/>
</kw>
<status status="PASS" starttime="20220802 01:27:46.304" endtime="20220802 01:27:49.582"/>
</kw>
<msg timestamp="20220802 01:27:49.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:46.304" endtime="20220802 01:27:49.583"/>
</kw>
<status status="PASS" starttime="20220802 01:27:46.303" endtime="20220802 01:27:49.583"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:49.586" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:49.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:49.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:27:49.584" endtime="20220802 01:27:49.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:49.590" level="INFO"/>
<status status="PASS" starttime="20220802 01:27:49.590" endtime="20220802 01:27:49.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:49.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:49.590" endtime="20220802 01:27:49.591"/>
</kw>
<status status="PASS" starttime="20220802 01:27:49.584" endtime="20220802 01:27:49.591"/>
</kw>
<msg timestamp="20220802 01:27:49.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:49.584" endtime="20220802 01:27:49.591"/>
</kw>
<status status="PASS" starttime="20220802 01:27:49.583" endtime="20220802 01:27:49.592"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:49.595" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:49.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:49.598" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:27:49.593" endtime="20220802 01:27:49.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:49.598" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:27:49.598" endtime="20220802 01:27:49.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:49.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:49.599" endtime="20220802 01:27:49.599"/>
</kw>
<status status="PASS" starttime="20220802 01:27:49.593" endtime="20220802 01:27:49.599"/>
</kw>
<msg timestamp="20220802 01:27:49.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:49.593" endtime="20220802 01:27:49.600"/>
</kw>
<msg timestamp="20220802 01:27:49.600" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:27:49.592" endtime="20220802 01:27:49.600"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:27:49.601" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:27:49.600" endtime="20220802 01:27:49.601"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:49.604" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:49.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:27:49.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:27:49.602" endtime="20220802 01:27:49.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:49.690" level="INFO"/>
<status status="PASS" starttime="20220802 01:27:49.689" endtime="20220802 01:27:49.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:27:49.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:27:49.690" endtime="20220802 01:27:49.690"/>
</kw>
<status status="PASS" starttime="20220802 01:27:49.602" endtime="20220802 01:27:49.691"/>
</kw>
<msg timestamp="20220802 01:27:49.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:27:49.602" endtime="20220802 01:27:49.691"/>
</kw>
<status status="PASS" starttime="20220802 01:27:49.601" endtime="20220802 01:27:49.692"/>
</kw>
<status status="PASS" starttime="20220802 01:27:49.601" endtime="20220802 01:27:49.692"/>
</kw>
<status status="PASS" starttime="20220802 01:27:49.592" endtime="20220802 01:27:49.692"/>
</kw>
<status status="PASS" starttime="20220802 01:27:49.592" endtime="20220802 01:27:49.692"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:49.695" level="INFO">Running command 'ozone sh bucket list /fstest308/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:53.432" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:27:53.432" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:27:49.693" endtime="20220802 01:27:53.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:53.433" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:27:53.432" endtime="20220802 01:27:53.433"/>
</kw>
<msg timestamp="20220802 01:27:53.434" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:27:49.692" endtime="20220802 01:27:53.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:27:53.434" endtime="20220802 01:27:53.434"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:53.438" level="INFO">Running command 'ozone sh key list /fstest308/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:27:57.083" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:27:57.083" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:27:53.435" endtime="20220802 01:27:57.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:27:57.084" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:27:57.083" endtime="20220802 01:27:57.084"/>
</kw>
<msg timestamp="20220802 01:27:57.084" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:27:53.434" endtime="20220802 01:27:57.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:27:57.084" endtime="20220802 01:27:57.085"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xy</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:27:57.087" level="INFO">Running command 'ozone sh volume addacl fstest308 -a user:testuser2/scm@EXAMPLE.COM:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:00.712" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:28:00.713" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:27:57.085" endtime="20220802 01:28:00.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:00.714" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:28:00.713" endtime="20220802 01:28:00.714"/>
</kw>
<msg timestamp="20220802 01:28:00.714" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:27:57.085" endtime="20220802 01:28:00.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:28:00.714" endtime="20220802 01:28:00.715"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:00.718" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:00.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:00.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:28:00.716" endtime="20220802 01:28:00.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:00.723" level="INFO"/>
<status status="PASS" starttime="20220802 01:28:00.722" endtime="20220802 01:28:00.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:00.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:00.723" endtime="20220802 01:28:00.723"/>
</kw>
<status status="PASS" starttime="20220802 01:28:00.715" endtime="20220802 01:28:00.723"/>
</kw>
<msg timestamp="20220802 01:28:00.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:00.715" endtime="20220802 01:28:00.724"/>
</kw>
<status status="PASS" starttime="20220802 01:28:00.715" endtime="20220802 01:28:00.724"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:00.728" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:00.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:00.731" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:28:00.726" endtime="20220802 01:28:00.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:00.731" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:28:00.731" endtime="20220802 01:28:00.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:00.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:00.732" endtime="20220802 01:28:00.732"/>
</kw>
<status status="PASS" starttime="20220802 01:28:00.726" endtime="20220802 01:28:00.733"/>
</kw>
<msg timestamp="20220802 01:28:00.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:00.725" endtime="20220802 01:28:00.733"/>
</kw>
<msg timestamp="20220802 01:28:00.733" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:28:00.725" endtime="20220802 01:28:00.733"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:28:00.734" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:28:00.734" endtime="20220802 01:28:00.734"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:00.738" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:00.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:00.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:28:00.736" endtime="20220802 01:28:00.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:00.784" level="INFO"/>
<status status="PASS" starttime="20220802 01:28:00.783" endtime="20220802 01:28:00.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:00.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:00.784" endtime="20220802 01:28:00.785"/>
</kw>
<status status="PASS" starttime="20220802 01:28:00.736" endtime="20220802 01:28:00.785"/>
</kw>
<msg timestamp="20220802 01:28:00.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:00.735" endtime="20220802 01:28:00.786"/>
</kw>
<status status="PASS" starttime="20220802 01:28:00.735" endtime="20220802 01:28:00.786"/>
</kw>
<status status="PASS" starttime="20220802 01:28:00.734" endtime="20220802 01:28:00.786"/>
</kw>
<status status="PASS" starttime="20220802 01:28:00.724" endtime="20220802 01:28:00.786"/>
</kw>
<status status="PASS" starttime="20220802 01:28:00.724" endtime="20220802 01:28:00.786"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xyrw</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:00.790" level="INFO">Running command 'ozone sh volume addacl fstest308 -a user:testuser2/scm@EXAMPLE.COM:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:04.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:04.423" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:28:00.788" endtime="20220802 01:28:04.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:04.425" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:28:04.424" endtime="20220802 01:28:04.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:04.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:04.425" endtime="20220802 01:28:04.426"/>
</kw>
<status status="PASS" starttime="20220802 01:28:00.787" endtime="20220802 01:28:04.426"/>
</kw>
<msg timestamp="20220802 01:28:04.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:00.787" endtime="20220802 01:28:04.426"/>
</kw>
<status status="PASS" starttime="20220802 01:28:00.786" endtime="20220802 01:28:04.427"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:04.430" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:04.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:04.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:28:04.428" endtime="20220802 01:28:04.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:04.435" level="INFO"/>
<status status="PASS" starttime="20220802 01:28:04.434" endtime="20220802 01:28:04.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:04.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:04.435" endtime="20220802 01:28:04.435"/>
</kw>
<status status="PASS" starttime="20220802 01:28:04.427" endtime="20220802 01:28:04.436"/>
</kw>
<msg timestamp="20220802 01:28:04.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:04.427" endtime="20220802 01:28:04.436"/>
</kw>
<status status="PASS" starttime="20220802 01:28:04.427" endtime="20220802 01:28:04.436"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:04.440" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:04.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:04.443" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:28:04.438" endtime="20220802 01:28:04.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:04.444" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:28:04.444" endtime="20220802 01:28:04.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:04.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:04.445" endtime="20220802 01:28:04.445"/>
</kw>
<status status="PASS" starttime="20220802 01:28:04.438" endtime="20220802 01:28:04.445"/>
</kw>
<msg timestamp="20220802 01:28:04.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:04.437" endtime="20220802 01:28:04.446"/>
</kw>
<msg timestamp="20220802 01:28:04.446" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:28:04.437" endtime="20220802 01:28:04.446"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:28:04.447" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:28:04.447" endtime="20220802 01:28:04.447"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:04.451" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:04.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:04.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:28:04.449" endtime="20220802 01:28:04.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:04.460" level="INFO"/>
<status status="PASS" starttime="20220802 01:28:04.460" endtime="20220802 01:28:04.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:04.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:04.460" endtime="20220802 01:28:04.461"/>
</kw>
<status status="PASS" starttime="20220802 01:28:04.449" endtime="20220802 01:28:04.461"/>
</kw>
<msg timestamp="20220802 01:28:04.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:04.448" endtime="20220802 01:28:04.462"/>
</kw>
<status status="PASS" starttime="20220802 01:28:04.448" endtime="20220802 01:28:04.462"/>
</kw>
<status status="PASS" starttime="20220802 01:28:04.447" endtime="20220802 01:28:04.462"/>
</kw>
<status status="PASS" starttime="20220802 01:28:04.437" endtime="20220802 01:28:04.462"/>
</kw>
<status status="PASS" starttime="20220802 01:28:04.436" endtime="20220802 01:28:04.462"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:04.465" level="INFO">Running command 'ozone sh bucket list /fstest308/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:08.062" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:28:08.062" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:28:04.463" endtime="20220802 01:28:08.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:08.063" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:28:08.062" endtime="20220802 01:28:08.063"/>
</kw>
<msg timestamp="20220802 01:28:08.063" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest308 </msg>
<status status="PASS" starttime="20220802 01:28:04.462" endtime="20220802 01:28:08.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:28:08.063" endtime="20220802 01:28:08.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:08.067" level="INFO">Running command 'ozone sh volume addacl fstest308 -a user:testuser2/scm@EXAMPLE.COM:l 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:11.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:11.387" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:28:08.065" endtime="20220802 01:28:11.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:11.388" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:28:11.387" endtime="20220802 01:28:11.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:11.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:11.388" endtime="20220802 01:28:11.389"/>
</kw>
<status status="PASS" starttime="20220802 01:28:08.065" endtime="20220802 01:28:11.389"/>
</kw>
<msg timestamp="20220802 01:28:11.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:08.064" endtime="20220802 01:28:11.390"/>
</kw>
<status status="PASS" starttime="20220802 01:28:08.064" endtime="20220802 01:28:11.390"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:11.393" level="INFO">Running command 'ozone sh bucket list /fstest308/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:15.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:15.211" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest308",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2022-08-02T0...</msg>
<status status="PASS" starttime="20220802 01:28:11.391" endtime="20220802 01:28:15.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:15.212" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest308",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2022-08-02T01:26:52.782Z",
  "modificationTime" : "2022-08-02T01:27:13.238Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20220802 01:28:15.211" endtime="20220802 01:28:15.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:15.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:15.212" endtime="20220802 01:28:15.213"/>
</kw>
<status status="PASS" starttime="20220802 01:28:11.391" endtime="20220802 01:28:15.213"/>
</kw>
<msg timestamp="20220802 01:28:15.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:11.391" endtime="20220802 01:28:15.214"/>
</kw>
<status status="PASS" starttime="20220802 01:28:11.390" endtime="20220802 01:28:15.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:15.217" level="INFO">Running command 'ozone sh volume getacl /fstest308/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:18.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:18.985" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20220802 01:28:15.215" endtime="20220802 01:28:18.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:18.986" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:28:18.986" endtime="20220802 01:28:18.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:18.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:18.986" endtime="20220802 01:28:18.987"/>
</kw>
<status status="PASS" starttime="20220802 01:28:15.215" endtime="20220802 01:28:18.987"/>
</kw>
<msg timestamp="20220802 01:28:18.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:15.214" endtime="20220802 01:28:18.988"/>
</kw>
<status status="PASS" starttime="20220802 01:28:15.214" endtime="20220802 01:28:18.988"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:18.990" level="INFO">Running command 'ozone sh key list /fstest308/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:22.577" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:28:22.577" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest308 Bucket:bk1 </msg>
<status status="PASS" starttime="20220802 01:28:18.988" endtime="20220802 01:28:22.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:22.579" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest308 Bucket:bk1 </msg>
<status status="PASS" starttime="20220802 01:28:22.578" endtime="20220802 01:28:22.579"/>
</kw>
<msg timestamp="20220802 01:28:22.579" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest308 Bucket:bk1 </msg>
<status status="PASS" starttime="20220802 01:28:18.988" endtime="20220802 01:28:22.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:28:22.579" endtime="20220802 01:28:22.580"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:22.584" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:22.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:22.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:28:22.581" endtime="20220802 01:28:22.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:22.588" level="INFO"/>
<status status="PASS" starttime="20220802 01:28:22.587" endtime="20220802 01:28:22.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:22.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:22.588" endtime="20220802 01:28:22.589"/>
</kw>
<status status="PASS" starttime="20220802 01:28:22.580" endtime="20220802 01:28:22.589"/>
</kw>
<msg timestamp="20220802 01:28:22.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:22.580" endtime="20220802 01:28:22.589"/>
</kw>
<status status="PASS" starttime="20220802 01:28:22.580" endtime="20220802 01:28:22.590"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:22.594" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:22.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:22.597" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:28:22.592" endtime="20220802 01:28:22.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:22.598" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:28:22.597" endtime="20220802 01:28:22.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:22.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:22.598" endtime="20220802 01:28:22.598"/>
</kw>
<status status="PASS" starttime="20220802 01:28:22.591" endtime="20220802 01:28:22.599"/>
</kw>
<msg timestamp="20220802 01:28:22.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:22.591" endtime="20220802 01:28:22.599"/>
</kw>
<msg timestamp="20220802 01:28:22.599" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:28:22.590" endtime="20220802 01:28:22.599"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:28:22.600" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:28:22.599" endtime="20220802 01:28:22.600"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:22.603" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:22.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:22.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:28:22.601" endtime="20220802 01:28:22.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:22.611" level="INFO"/>
<status status="PASS" starttime="20220802 01:28:22.610" endtime="20220802 01:28:22.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:22.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:22.611" endtime="20220802 01:28:22.611"/>
</kw>
<status status="PASS" starttime="20220802 01:28:22.601" endtime="20220802 01:28:22.612"/>
</kw>
<msg timestamp="20220802 01:28:22.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:22.601" endtime="20220802 01:28:22.612"/>
</kw>
<status status="PASS" starttime="20220802 01:28:22.600" endtime="20220802 01:28:22.612"/>
</kw>
<status status="PASS" starttime="20220802 01:28:22.600" endtime="20220802 01:28:22.612"/>
</kw>
<status status="PASS" starttime="20220802 01:28:22.590" endtime="20220802 01:28:22.612"/>
</kw>
<status status="PASS" starttime="20220802 01:28:22.590" endtime="20220802 01:28:22.613"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:testuser2/scm@EXAMPLE.COM:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:22.616" level="INFO">Running command 'ozone sh bucket addacl fstest308/bk1 -a user:testuser2/scm@EXAMPLE.COM:a 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:26.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:26.237" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:28:22.614" endtime="20220802 01:28:26.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:26.238" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220802 01:28:26.237" endtime="20220802 01:28:26.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:26.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:26.238" endtime="20220802 01:28:26.239"/>
</kw>
<status status="PASS" starttime="20220802 01:28:22.613" endtime="20220802 01:28:26.239"/>
</kw>
<msg timestamp="20220802 01:28:26.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:22.613" endtime="20220802 01:28:26.239"/>
</kw>
<status status="PASS" starttime="20220802 01:28:22.613" endtime="20220802 01:28:26.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:26.244" level="INFO">Running command 'ozone sh bucket getacl /fstest308/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:29.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:29.824" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220802 01:28:26.241" endtime="20220802 01:28:29.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:29.825" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:28:29.825" endtime="20220802 01:28:29.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:29.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:29.826" endtime="20220802 01:28:29.826"/>
</kw>
<status status="PASS" starttime="20220802 01:28:26.241" endtime="20220802 01:28:29.826"/>
</kw>
<msg timestamp="20220802 01:28:29.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:26.240" endtime="20220802 01:28:29.827"/>
</kw>
<status status="PASS" starttime="20220802 01:28:26.240" endtime="20220802 01:28:29.827"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:29.830" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:29.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:29.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:28:29.828" endtime="20220802 01:28:29.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:29.835" level="INFO"/>
<status status="PASS" starttime="20220802 01:28:29.834" endtime="20220802 01:28:29.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:29.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:29.835" endtime="20220802 01:28:29.835"/>
</kw>
<status status="PASS" starttime="20220802 01:28:29.828" endtime="20220802 01:28:29.836"/>
</kw>
<msg timestamp="20220802 01:28:29.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:29.827" endtime="20220802 01:28:29.836"/>
</kw>
<status status="PASS" starttime="20220802 01:28:29.827" endtime="20220802 01:28:29.836"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:29.840" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:29.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:29.843" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:28:29.838" endtime="20220802 01:28:29.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:29.844" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:28:29.843" endtime="20220802 01:28:29.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:29.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:29.844" endtime="20220802 01:28:29.845"/>
</kw>
<status status="PASS" starttime="20220802 01:28:29.838" endtime="20220802 01:28:29.845"/>
</kw>
<msg timestamp="20220802 01:28:29.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:29.838" endtime="20220802 01:28:29.845"/>
</kw>
<msg timestamp="20220802 01:28:29.846" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:28:29.837" endtime="20220802 01:28:29.846"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:28:29.846" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:28:29.846" endtime="20220802 01:28:29.846"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:29.851" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:29.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:29.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:28:29.848" endtime="20220802 01:28:29.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:29.857" level="INFO"/>
<status status="PASS" starttime="20220802 01:28:29.857" endtime="20220802 01:28:29.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:29.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:29.858" endtime="20220802 01:28:29.858"/>
</kw>
<status status="PASS" starttime="20220802 01:28:29.848" endtime="20220802 01:28:29.859"/>
</kw>
<msg timestamp="20220802 01:28:29.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:29.847" endtime="20220802 01:28:29.859"/>
</kw>
<status status="PASS" starttime="20220802 01:28:29.847" endtime="20220802 01:28:29.859"/>
</kw>
<status status="PASS" starttime="20220802 01:28:29.846" endtime="20220802 01:28:29.859"/>
</kw>
<status status="PASS" starttime="20220802 01:28:29.837" endtime="20220802 01:28:29.860"/>
</kw>
<status status="PASS" starttime="20220802 01:28:29.836" endtime="20220802 01:28:29.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:29.863" level="INFO">Running command 'ozone sh bucket getacl /fstest308/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:33.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:33.627" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220802 01:28:29.861" endtime="20220802 01:28:33.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:33.628" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220802 01:28:33.627" endtime="20220802 01:28:33.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:33.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:33.628" endtime="20220802 01:28:33.629"/>
</kw>
<status status="PASS" starttime="20220802 01:28:29.861" endtime="20220802 01:28:33.629"/>
</kw>
<msg timestamp="20220802 01:28:33.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:29.860" endtime="20220802 01:28:33.629"/>
</kw>
<status status="PASS" starttime="20220802 01:28:29.860" endtime="20220802 01:28:33.630"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:33.633" level="INFO">Running command 'ozone sh key list /fstest308/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:37.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:37.439" level="INFO">${output} = [ {
  "volumeName" : "fstest308",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-08-02T01:27:19.858Z",
  "modificationTime" : "2022-08-02T01:27:42.744Z",
  "...</msg>
<status status="PASS" starttime="20220802 01:28:33.631" endtime="20220802 01:28:37.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:37.440" level="INFO">[ {
  "volumeName" : "fstest308",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2022-08-02T01:27:19.858Z",
  "modificationTime" : "2022-08-02T01:27:42.744Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  }
} ]</msg>
<status status="PASS" starttime="20220802 01:28:37.439" endtime="20220802 01:28:37.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:37.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:37.440" endtime="20220802 01:28:37.441"/>
</kw>
<status status="PASS" starttime="20220802 01:28:33.631" endtime="20220802 01:28:37.441"/>
</kw>
<msg timestamp="20220802 01:28:37.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:33.630" endtime="20220802 01:28:37.442"/>
</kw>
<status status="PASS" starttime="20220802 01:28:33.630" endtime="20220802 01:28:37.442"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:37.445" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:37.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:37.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:28:37.443" endtime="20220802 01:28:37.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:37.450" level="INFO"/>
<status status="PASS" starttime="20220802 01:28:37.449" endtime="20220802 01:28:37.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:37.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:37.450" endtime="20220802 01:28:37.450"/>
</kw>
<status status="PASS" starttime="20220802 01:28:37.443" endtime="20220802 01:28:37.451"/>
</kw>
<msg timestamp="20220802 01:28:37.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:37.442" endtime="20220802 01:28:37.451"/>
</kw>
<status status="PASS" starttime="20220802 01:28:37.442" endtime="20220802 01:28:37.451"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:37.455" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:37.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:37.458" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:28:37.453" endtime="20220802 01:28:37.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:37.459" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:28:37.459" endtime="20220802 01:28:37.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:37.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:37.459" endtime="20220802 01:28:37.460"/>
</kw>
<status status="PASS" starttime="20220802 01:28:37.453" endtime="20220802 01:28:37.460"/>
</kw>
<msg timestamp="20220802 01:28:37.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:37.453" endtime="20220802 01:28:37.460"/>
</kw>
<msg timestamp="20220802 01:28:37.461" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:28:37.452" endtime="20220802 01:28:37.461"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:28:37.461" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:28:37.461" endtime="20220802 01:28:37.461"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:37.465" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:37.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:37.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:28:37.464" endtime="20220802 01:28:37.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:28:37.473" level="INFO"/>
<status status="PASS" starttime="20220802 01:28:37.473" endtime="20220802 01:28:37.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:28:37.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:28:37.473" endtime="20220802 01:28:37.474"/>
</kw>
<status status="PASS" starttime="20220802 01:28:37.462" endtime="20220802 01:28:37.474"/>
</kw>
<msg timestamp="20220802 01:28:37.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:28:37.462" endtime="20220802 01:28:37.475"/>
</kw>
<status status="PASS" starttime="20220802 01:28:37.462" endtime="20220802 01:28:37.475"/>
</kw>
<status status="PASS" starttime="20220802 01:28:37.461" endtime="20220802 01:28:37.475"/>
</kw>
<status status="PASS" starttime="20220802 01:28:37.452" endtime="20220802 01:28:37.475"/>
</kw>
<status status="PASS" starttime="20220802 01:28:37.452" endtime="20220802 01:28:37.475"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:27:46.302" endtime="20220802 01:28:37.475"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20220802 01:25:32.520" endtime="20220802 01:28:37.477"/>
</suite>
<suite id="s1-s2-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s2-s4-t1" name="Secure S3 test Success" line="37">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220802 01:28:37.509" level="INFO">${randStr} = 9117396709</msg>
<status status="PASS" starttime="20220802 01:28:37.509" endtime="20220802 01:28:37.509"/>
</kw>
<msg timestamp="20220802 01:28:37.510" level="INFO">${random} = ozone-test-9117396709</msg>
<status status="PASS" starttime="20220802 01:28:37.509" endtime="20220802 01:28:37.510"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:28:37.511" level="INFO">${PREFIX} = ozone-test-9117396709</msg>
<status status="PASS" starttime="20220802 01:28:37.510" endtime="20220802 01:28:37.511"/>
</kw>
<status status="PASS" starttime="20220802 01:28:37.508" endtime="20220802 01:28:37.511"/>
</kw>
<status status="PASS" starttime="20220802 01:28:37.508" endtime="20220802 01:28:37.512"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:37.514" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:37.517" level="INFO">${rc} = 1</msg>
<msg timestamp="20220802 01:28:37.517" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20220802 01:28:37.512" endtime="20220802 01:28:37.517"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220802 01:28:37.517" endtime="20220802 01:28:37.518"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:37.520" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:28:37.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:28:37.672" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Installtid'
Usage: yum [options] COMMAND

List of Commands:

check          Check f...</msg>
<status status="PASS" starttime="20220802 01:28:37.518" endtime="20220802 01:28:37.673"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:28:37.678" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:37.507" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220802 01:28:37.676" endtime="20220802 01:33:37.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220802 01:33:37.508" endtime="20220802 01:33:37.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220802 01:33:37.508" endtime="20220802 01:33:37.508"/>
</kw>
<status status="FAIL" starttime="20220802 01:28:37.676" endtime="20220802 01:33:37.509"/>
</kw>
<msg timestamp="20220802 01:33:37.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220802 01:28:37.675" endtime="20220802 01:33:37.510"/>
</kw>
<status status="FAIL" starttime="20220802 01:28:37.675" endtime="20220802 01:33:37.510"/>
</kw>
<status status="FAIL" starttime="20220802 01:28:37.674" endtime="20220802 01:33:37.510"/>
</kw>
<status status="FAIL" starttime="20220802 01:28:37.673" endtime="20220802 01:33:37.510"/>
</kw>
<status status="FAIL" starttime="20220802 01:28:37.512" endtime="20220802 01:33:37.510"/>
</kw>
<status status="FAIL" starttime="20220802 01:28:37.512" endtime="20220802 01:33:37.510"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220802 01:33:37.511" endtime="20220802 01:33:37.511"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220802 01:33:37.511" endtime="20220802 01:33:37.511"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20220802 01:33:37.511" endtime="20220802 01:33:37.511"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220802 01:33:37.511" endtime="20220802 01:33:37.511"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220802 01:33:37.511" endtime="20220802 01:33:37.511"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20220802 01:33:37.512" endtime="20220802 01:33:37.512"/>
</kw>
<status status="FAIL" starttime="20220802 01:28:37.508" endtime="20220802 01:33:37.512"/>
</kw>
<status status="FAIL" starttime="20220802 01:28:37.507" endtime="20220802 01:33:37.512"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<status status="NOT RUN" starttime="20220802 01:33:37.512" endtime="20220802 01:33:37.512"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<status status="NOT RUN" starttime="20220802 01:33:37.513" endtime="20220802 01:33:37.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220802 01:33:37.513" endtime="20220802 01:33:37.513"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220802 01:28:37.507" endtime="20220802 01:33:37.514">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s2-s4-t2" name="Secure S3 put-object test" line="43">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220802 01:33:37.516" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20220802 01:33:37.515" endtime="20220802 01:33:37.516"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20220802 01:33:37.517" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220802 01:33:37.516" endtime="20220802 01:33:37.518"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:37.521" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:38.055" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:33:38.055" level="INFO">${output} = Unable to locate credentials. You can configure credentials by running "aws configure".</msg>
<status status="PASS" starttime="20220802 01:33:37.519" endtime="20220802 01:33:38.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:38.057" level="INFO">Unable to locate credentials. You can configure credentials by running "aws configure".</msg>
<status status="PASS" starttime="20220802 01:33:38.056" endtime="20220802 01:33:38.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:38.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20220802 01:33:38.058" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20220802 01:33:38.057" endtime="20220802 01:33:38.058"/>
</kw>
<status status="FAIL" starttime="20220802 01:33:37.519" endtime="20220802 01:33:38.059"/>
</kw>
<msg timestamp="20220802 01:33:38.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220802 01:33:37.518" endtime="20220802 01:33:38.059"/>
</kw>
<status status="FAIL" starttime="20220802 01:33:37.518" endtime="20220802 01:33:38.060"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20220802 01:33:38.060" endtime="20220802 01:33:38.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220802 01:33:38.060" endtime="20220802 01:33:38.060"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<status status="NOT RUN" starttime="20220802 01:33:38.060" endtime="20220802 01:33:38.060"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20220802 01:33:38.061" endtime="20220802 01:33:38.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220802 01:33:38.061" endtime="20220802 01:33:38.061"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<status status="NOT RUN" starttime="20220802 01:33:38.061" endtime="20220802 01:33:38.061"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20220802 01:33:38.061" endtime="20220802 01:33:38.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220802 01:33:38.061" endtime="20220802 01:33:38.061"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220802 01:33:37.515" endtime="20220802 01:33:38.062">255 != 0</status>
</test>
<test id="s1-s2-s4-t3" name="Secure S3 test Failure" line="56">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:38.067" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:38.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:38.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:33:38.065" endtime="20220802 01:33:38.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:38.504" level="INFO"/>
<status status="PASS" starttime="20220802 01:33:38.503" endtime="20220802 01:33:38.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:38.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:38.504" endtime="20220802 01:33:38.504"/>
</kw>
<status status="PASS" starttime="20220802 01:33:38.064" endtime="20220802 01:33:38.504"/>
</kw>
<msg timestamp="20220802 01:33:38.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:38.064" endtime="20220802 01:33:38.505"/>
</kw>
<status status="PASS" starttime="20220802 01:33:38.064" endtime="20220802 01:33:38.505"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:38.508" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:38.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:38.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:33:38.506" endtime="20220802 01:33:38.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:38.912" level="INFO"/>
<status status="PASS" starttime="20220802 01:33:38.912" endtime="20220802 01:33:38.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:38.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:38.913" endtime="20220802 01:33:38.913"/>
</kw>
<status status="PASS" starttime="20220802 01:33:38.506" endtime="20220802 01:33:38.913"/>
</kw>
<msg timestamp="20220802 01:33:38.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:38.506" endtime="20220802 01:33:38.914"/>
</kw>
<status status="PASS" starttime="20220802 01:33:38.505" endtime="20220802 01:33:38.914"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:38.918" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:39.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:39.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:33:38.915" endtime="20220802 01:33:39.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:39.351" level="INFO"/>
<status status="PASS" starttime="20220802 01:33:39.348" endtime="20220802 01:33:39.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:39.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:39.351" endtime="20220802 01:33:39.352"/>
</kw>
<status status="PASS" starttime="20220802 01:33:38.915" endtime="20220802 01:33:39.352"/>
</kw>
<msg timestamp="20220802 01:33:39.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:38.915" endtime="20220802 01:33:39.353"/>
</kw>
<status status="PASS" starttime="20220802 01:33:38.914" endtime="20220802 01:33:39.353"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:39.357" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:39.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:39.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:33:39.355" endtime="20220802 01:33:39.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:39.820" level="INFO"/>
<status status="PASS" starttime="20220802 01:33:39.819" endtime="20220802 01:33:39.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:39.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:39.820" endtime="20220802 01:33:39.821"/>
</kw>
<status status="PASS" starttime="20220802 01:33:39.354" endtime="20220802 01:33:39.821"/>
</kw>
<msg timestamp="20220802 01:33:39.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:39.354" endtime="20220802 01:33:39.821"/>
</kw>
<status status="PASS" starttime="20220802 01:33:39.353" endtime="20220802 01:33:39.822"/>
</kw>
<status status="PASS" starttime="20220802 01:33:38.064" endtime="20220802 01:33:39.822"/>
</kw>
<status status="PASS" starttime="20220802 01:33:38.063" endtime="20220802 01:33:39.822"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:39.824" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:42.009" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:33:42.010" level="INFO">${result} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220802 01:33:39.822" endtime="20220802 01:33:42.010"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220802 01:33:42.010" endtime="20220802 01:33:42.011"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:33:38.063" endtime="20220802 01:33:42.011"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="FAIL" starttime="20220802 01:28:37.479" endtime="20220802 01:33:42.012"/>
</suite>
<suite id="s1-s2-s5" name="Ozone-Secure-Tenant" source="/opt/hadoop/smoketest/security/ozone-secure-tenant.robot">
<test id="s1-s2-s5-t1" name="Create Tenant Success with Cluster Admin" line="30">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:42.027" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:42.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:42.030" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:33:42.025" endtime="20220802 01:33:42.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:42.031" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:33:42.030" endtime="20220802 01:33:42.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:42.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:42.031" endtime="20220802 01:33:42.031"/>
</kw>
<status status="PASS" starttime="20220802 01:33:42.024" endtime="20220802 01:33:42.032"/>
</kw>
<msg timestamp="20220802 01:33:42.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:42.024" endtime="20220802 01:33:42.032"/>
</kw>
<msg timestamp="20220802 01:33:42.032" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:33:42.024" endtime="20220802 01:33:42.032"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:33:42.034" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:33:42.033" endtime="20220802 01:33:42.034"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:42.037" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:42.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:42.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:33:42.036" endtime="20220802 01:33:42.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:42.250" level="INFO"/>
<status status="PASS" starttime="20220802 01:33:42.250" endtime="20220802 01:33:42.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:42.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:42.251" endtime="20220802 01:33:42.251"/>
</kw>
<status status="PASS" starttime="20220802 01:33:42.035" endtime="20220802 01:33:42.251"/>
</kw>
<msg timestamp="20220802 01:33:42.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:42.035" endtime="20220802 01:33:42.252"/>
</kw>
<status status="PASS" starttime="20220802 01:33:42.034" endtime="20220802 01:33:42.252"/>
</kw>
<status status="PASS" starttime="20220802 01:33:42.034" endtime="20220802 01:33:42.252"/>
</kw>
<status status="PASS" starttime="20220802 01:33:42.024" endtime="20220802 01:33:42.252"/>
</kw>
<status status="PASS" starttime="20220802 01:33:42.023" endtime="20220802 01:33:42.252"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose create tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:42.256" level="INFO">Running command 'ozone tenant --verbose create tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:45.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:45.266" level="INFO">${output} = 2022-08-02 01:33:45,072 [main] INFO rpc.RpcClient: Creating Tenant: 'tenantone', with new volume: 'tenantone'
{
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20220802 01:33:42.254" endtime="20220802 01:33:45.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:45.268" level="INFO">2022-08-02 01:33:45,072 [main] INFO rpc.RpcClient: Creating Tenant: 'tenantone', with new volume: 'tenantone'
{
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20220802 01:33:45.267" endtime="20220802 01:33:45.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:45.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:45.268" endtime="20220802 01:33:45.268"/>
</kw>
<status status="PASS" starttime="20220802 01:33:42.253" endtime="20220802 01:33:45.269"/>
</kw>
<msg timestamp="20220802 01:33:45.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:42.253" endtime="20220802 01:33:45.269"/>
</kw>
<msg timestamp="20220802 01:33:45.269" level="INFO">${output} = 2022-08-02 01:33:45,072 [main] INFO rpc.RpcClient: Creating Tenant: 'tenantone', with new volume: 'tenantone'
{
  "tenantId": "tenantone"
}</msg>
<status status="PASS" starttime="20220802 01:33:42.252" endtime="20220802 01:33:45.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantId": "tenantone"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:33:45.269" endtime="20220802 01:33:45.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:33:42.023" endtime="20220802 01:33:45.270"/>
</test>
<test id="s1-s2-s5-t2" name="Assign User Success with Cluster Admin" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user assign testuser --tenant=tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:45.275" level="INFO">Running command 'ozone tenant --verbose user assign testuser --tenant=tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:48.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:48.087" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='9fa057353dbe0e26400c88442cf516fb63becfdd786f01ea1b8aeae173256edd'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20220802 01:33:45.273" endtime="20220802 01:33:48.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:48.088" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='9fa057353dbe0e26400c88442cf516fb63becfdd786f01ea1b8aeae173256edd'
Assigned 'testuser' to 'tenantone' with accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220802 01:33:48.088" endtime="20220802 01:33:48.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:48.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:48.089" endtime="20220802 01:33:48.089"/>
</kw>
<status status="PASS" starttime="20220802 01:33:45.272" endtime="20220802 01:33:48.089"/>
</kw>
<msg timestamp="20220802 01:33:48.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:45.272" endtime="20220802 01:33:48.090"/>
</kw>
<msg timestamp="20220802 01:33:48.090" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='9fa057353dbe0e26400c88442cf516fb63becfdd786f01ea1b8aeae173256edd'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20220802 01:33:45.271" endtime="20220802 01:33:48.090"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Assigned 'testuser' to 'tenantone'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:33:48.090" endtime="20220802 01:33:48.091"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_ACCESS_KEY_ID=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220802 01:33:48.091" level="INFO">${accessId} = ["'tenantone$testuser'"]</msg>
<status status="PASS" starttime="20220802 01:33:48.091" endtime="20220802 01:33:48.091"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_SECRET_ACCESS_KEY=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220802 01:33:48.092" level="INFO">${secretKey} = ["'9fa057353dbe0e26400c88442cf516fb63becfdd786f01ea1b8aeae173256edd'"]</msg>
<status status="PASS" starttime="20220802 01:33:48.092" endtime="20220802 01:33:48.092"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220802 01:33:48.093" level="INFO">${accessId} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220802 01:33:48.092" endtime="20220802 01:33:48.093"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220802 01:33:48.094" level="INFO">${secretKey} = '9fa057353dbe0e26400c88442cf516fb63becfdd786f01ea1b8aeae173256edd'</msg>
<status status="PASS" starttime="20220802 01:33:48.094" endtime="20220802 01:33:48.094"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220802 01:33:48.095" level="INFO">${ACCESS_ID} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220802 01:33:48.095" endtime="20220802 01:33:48.095"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220802 01:33:48.095" level="INFO">${SECRET_KEY} = '9fa057353dbe0e26400c88442cf516fb63becfdd786f01ea1b8aeae173256edd'</msg>
<status status="PASS" starttime="20220802 01:33:48.095" endtime="20220802 01:33:48.095"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:33:45.271" endtime="20220802 01:33:48.096"/>
</test>
<test id="s1-s2-s5-t3" name="Assign User Failure to Non-existent Tenant" line="45">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user assign testuser --tenant=thistenantdoesnotexist</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:48.099" level="INFO">Running command 'ozone tenant user assign testuser --tenant=thistenantdoesnotexist 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:50.739" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:33:50.739" level="INFO">${output} = TENANT_NOT_FOUND Tenant 'thistenantdoesnotexist' doesn't exist.</msg>
<status status="PASS" starttime="20220802 01:33:48.097" endtime="20220802 01:33:50.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'thistenantdoesnotexist' doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:33:50.739" endtime="20220802 01:33:50.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:33:48.097" endtime="20220802 01:33:50.740"/>
</test>
<test id="s1-s2-s5-t4" name="GetUserInfo Success" line="49">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:50.745" level="INFO">Running command 'ozone tenant user info testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:53.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:53.497" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220802 01:33:50.743" endtime="20220802 01:33:53.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:53.498" level="INFO">User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220802 01:33:53.497" endtime="20220802 01:33:53.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:53.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:53.498" endtime="20220802 01:33:53.498"/>
</kw>
<status status="PASS" starttime="20220802 01:33:50.742" endtime="20220802 01:33:53.499"/>
</kw>
<msg timestamp="20220802 01:33:53.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:50.742" endtime="20220802 01:33:53.499"/>
</kw>
<msg timestamp="20220802 01:33:53.499" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20220802 01:33:50.742" endtime="20220802 01:33:53.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'tenantone' with accessId 'tenantone$testuser'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:33:53.499" endtime="20220802 01:33:53.500"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:33:50.741" endtime="20220802 01:33:53.500"/>
</test>
<test id="s1-s2-s5-t5" name="GetUserInfo as JSON Success" line="53">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info --json testuser | jq '.tenants | .[].accessId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:53.504" level="INFO">Running command 'ozone tenant user info --json testuser | jq '.tenants | .[].accessId' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:56.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:56.314" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20220802 01:33:53.502" endtime="20220802 01:33:56.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:56.315" level="INFO">"tenantone$testuser"</msg>
<status status="PASS" starttime="20220802 01:33:56.315" endtime="20220802 01:33:56.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:56.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:56.316" endtime="20220802 01:33:56.316"/>
</kw>
<status status="PASS" starttime="20220802 01:33:53.502" endtime="20220802 01:33:56.316"/>
</kw>
<msg timestamp="20220802 01:33:56.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:53.502" endtime="20220802 01:33:56.317"/>
</kw>
<msg timestamp="20220802 01:33:56.317" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20220802 01:33:53.501" endtime="20220802 01:33:56.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantone$testuser"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:33:56.317" endtime="20220802 01:33:56.318"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:33:53.501" endtime="20220802 01:33:56.318"/>
</test>
<test id="s1-s2-s5-t6" name="Create Bucket 1 Success via S3 API" line="57">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${ACCESS_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:56.322" level="INFO">Running command 'aws configure set aws_access_key_id 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:56.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:56.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:33:56.320" endtime="20220802 01:33:56.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:56.733" level="INFO"/>
<status status="PASS" starttime="20220802 01:33:56.733" endtime="20220802 01:33:56.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:56.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:56.734" endtime="20220802 01:33:56.734"/>
</kw>
<status status="PASS" starttime="20220802 01:33:56.320" endtime="20220802 01:33:56.734"/>
</kw>
<msg timestamp="20220802 01:33:56.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:56.320" endtime="20220802 01:33:56.735"/>
</kw>
<status status="PASS" starttime="20220802 01:33:56.319" endtime="20220802 01:33:56.735"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${SECRET_KEY}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:56.738" level="INFO">Running command 'aws configure set aws_secret_access_key '9fa057353dbe0e26400c88442cf516fb63becfdd786f01ea1b8aeae173256edd' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:57.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:57.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:33:56.736" endtime="20220802 01:33:57.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:57.165" level="INFO"/>
<status status="PASS" starttime="20220802 01:33:57.164" endtime="20220802 01:33:57.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:57.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:57.165" endtime="20220802 01:33:57.165"/>
</kw>
<status status="PASS" starttime="20220802 01:33:56.736" endtime="20220802 01:33:57.165"/>
</kw>
<msg timestamp="20220802 01:33:57.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:56.736" endtime="20220802 01:33:57.166"/>
</kw>
<status status="PASS" starttime="20220802 01:33:56.735" endtime="20220802 01:33:57.166"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:57.173" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:57.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:57.771" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20220802 01:33:57.170" endtime="20220802 01:33:57.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:57.772" level="INFO">{
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20220802 01:33:57.771" endtime="20220802 01:33:57.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:57.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:57.772" endtime="20220802 01:33:57.773"/>
</kw>
<status status="PASS" starttime="20220802 01:33:57.170" endtime="20220802 01:33:57.773"/>
</kw>
<msg timestamp="20220802 01:33:57.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:57.169" endtime="20220802 01:33:57.774"/>
</kw>
<msg timestamp="20220802 01:33:57.774" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20220802 01:33:57.166" endtime="20220802 01:33:57.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:33:57.774" endtime="20220802 01:33:57.775"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:57.778" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:33:58.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:33:58.356" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2022-08-02T01:33:57.709Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20220802 01:33:57.776" endtime="20220802 01:33:58.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:33:58.357" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2022-08-02T01:33:57.709Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20220802 01:33:58.357" endtime="20220802 01:33:58.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:33:58.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:33:58.358" endtime="20220802 01:33:58.358"/>
</kw>
<status status="PASS" starttime="20220802 01:33:57.776" endtime="20220802 01:33:58.358"/>
</kw>
<msg timestamp="20220802 01:33:58.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:57.775" endtime="20220802 01:33:58.359"/>
</kw>
<msg timestamp="20220802 01:33:58.359" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2022-08-02T01:33:57.709Z"
        }
    ]
}</msg>
<status status="PASS" starttime="20220802 01:33:57.775" endtime="20220802 01:33:58.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:33:58.359" endtime="20220802 01:33:58.360"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:33:56.318" endtime="20220802 01:33:58.360"/>
</test>
<test id="s1-s2-s5-t7" name="Verify Bucket 1 Owner" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:33:58.371" level="INFO">Running command 'ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:01.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:01.747" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20220802 01:33:58.367" endtime="20220802 01:34:01.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:01.748" level="INFO">testuser</msg>
<status status="PASS" starttime="20220802 01:34:01.748" endtime="20220802 01:34:01.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:01.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:01.749" endtime="20220802 01:34:01.749"/>
</kw>
<status status="PASS" starttime="20220802 01:33:58.366" endtime="20220802 01:34:01.749"/>
</kw>
<msg timestamp="20220802 01:34:01.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:33:58.366" endtime="20220802 01:34:01.750"/>
</kw>
<msg timestamp="20220802 01:34:01.750" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20220802 01:33:58.366" endtime="20220802 01:34:01.750"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220802 01:34:01.750" endtime="20220802 01:34:01.750"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:33:58.363" endtime="20220802 01:34:01.751"/>
</test>
<test id="s1-s2-s5-t8" name="SetSecret Success with Cluster Admin" line="69">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:01.755" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:04.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:04.402" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220802 01:34:01.753" endtime="20220802 01:34:04.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:04.403" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220802 01:34:04.402" endtime="20220802 01:34:04.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:04.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:04.403" endtime="20220802 01:34:04.404"/>
</kw>
<status status="PASS" starttime="20220802 01:34:01.753" endtime="20220802 01:34:04.404"/>
</kw>
<msg timestamp="20220802 01:34:04.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:01.752" endtime="20220802 01:34:04.404"/>
</kw>
<msg timestamp="20220802 01:34:04.405" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220802 01:34:01.752" endtime="20220802 01:34:04.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:04.405" endtime="20220802 01:34:04.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:01.751" endtime="20220802 01:34:04.405"/>
</test>
<test id="s1-s2-s5-t9" name="SetSecret Failure For Invalid Secret 1" line="73">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=''</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:04.409" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret='' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:07.238" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:34:07.238" level="INFO">${output} = secretKey cannot be null or empty.</msg>
<status status="PASS" starttime="20220802 01:34:04.407" endtime="20220802 01:34:07.238"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>secretKey cannot be null or empty.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:07.238" endtime="20220802 01:34:07.239"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:04.406" endtime="20220802 01:34:07.240"/>
</test>
<test id="s1-s2-s5-t10" name="SetSecret Failure For Invalid Secret 2" line="77">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=short</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:07.244" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=short 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:09.941" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:34:09.941" level="INFO">${output} = INVALID_REQUEST Secret key length should be at least 8 characters</msg>
<status status="PASS" starttime="20220802 01:34:07.242" endtime="20220802 01:34:09.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Secret key length should be at least 8 characters</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:09.941" endtime="20220802 01:34:09.942"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:07.241" endtime="20220802 01:34:09.943"/>
</test>
<test id="s1-s2-s5-t11" name="GetSecret Success" line="81">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user getsecret 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:09.947" level="INFO">Running command 'ozone tenant user getsecret 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:12.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:12.729" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220802 01:34:09.945" endtime="20220802 01:34:12.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:12.730" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220802 01:34:12.729" endtime="20220802 01:34:12.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:12.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:12.730" endtime="20220802 01:34:12.731"/>
</kw>
<status status="PASS" starttime="20220802 01:34:09.945" endtime="20220802 01:34:12.731"/>
</kw>
<msg timestamp="20220802 01:34:12.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:09.944" endtime="20220802 01:34:12.731"/>
</kw>
<msg timestamp="20220802 01:34:12.732" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20220802 01:34:09.944" endtime="20220802 01:34:12.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:12.732" endtime="20220802 01:34:12.732"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:09.943" endtime="20220802 01:34:12.732"/>
</test>
<test id="s1-s2-s5-t12" name="Delete Bucket 1 Failure With Old SecretKey via S3 API" line="85">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:12.736" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:13.258" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:34:13.258" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220802 01:34:12.734" endtime="20220802 01:34:13.258"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220802 01:34:13.259" endtime="20220802 01:34:13.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:12.733" endtime="20220802 01:34:13.260"/>
</test>
<test id="s1-s2-s5-t13" name="Delete Bucket 1 Success With Newly Set SecretKey via S3 API" line="89">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:13.266" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:13.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:13.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:13.264" endtime="20220802 01:34:13.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:13.674" level="INFO"/>
<status status="PASS" starttime="20220802 01:34:13.674" endtime="20220802 01:34:13.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:13.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:13.675" endtime="20220802 01:34:13.675"/>
</kw>
<status status="PASS" starttime="20220802 01:34:13.263" endtime="20220802 01:34:13.675"/>
</kw>
<msg timestamp="20220802 01:34:13.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:13.263" endtime="20220802 01:34:13.676"/>
</kw>
<status status="PASS" starttime="20220802 01:34:13.262" endtime="20220802 01:34:13.676"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:13.679" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:14.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:14.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:13.677" endtime="20220802 01:34:14.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:14.183" level="INFO"/>
<status status="PASS" starttime="20220802 01:34:14.182" endtime="20220802 01:34:14.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:14.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:14.184" endtime="20220802 01:34:14.186"/>
</kw>
<status status="PASS" starttime="20220802 01:34:13.677" endtime="20220802 01:34:14.186"/>
</kw>
<msg timestamp="20220802 01:34:14.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:13.677" endtime="20220802 01:34:14.186"/>
</kw>
<msg timestamp="20220802 01:34:14.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:13.676" endtime="20220802 01:34:14.187"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:13.261" endtime="20220802 01:34:14.187"/>
</test>
<test id="s1-s2-s5-t14" name="Delete Tenant Failure Tenant Not Empty" line="93">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:14.192" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:16.838" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:34:16.838" level="INFO">${output} = TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</msg>
<status status="PASS" starttime="20220802 01:34:14.188" endtime="20220802 01:34:16.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:16.839" endtime="20220802 01:34:16.840"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:14.188" endtime="20220802 01:34:16.840"/>
</test>
<test id="s1-s2-s5-t15" name="Trigger and wait for background Sync to recover Policies and Roles in Authorizer" line="97">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone admin om updateranger -host=om</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:16.844" level="INFO">Running command 'ozone admin om updateranger -host=om 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:19.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:19.892" level="INFO">${output} = Operation completed successfully</msg>
<status status="PASS" starttime="20220802 01:34:16.842" endtime="20220802 01:34:19.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Operation completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:19.892" endtime="20220802 01:34:19.893"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:16.841" endtime="20220802 01:34:19.893"/>
</test>
<test id="s1-s2-s5-t16" name="Create Tenant Failure with Regular User" line="101">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:19.898" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:19.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:19.901" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:34:19.896" endtime="20220802 01:34:19.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:19.902" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:34:19.902" endtime="20220802 01:34:19.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:19.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:19.903" endtime="20220802 01:34:19.903"/>
</kw>
<status status="PASS" starttime="20220802 01:34:19.896" endtime="20220802 01:34:19.903"/>
</kw>
<msg timestamp="20220802 01:34:19.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:19.896" endtime="20220802 01:34:19.904"/>
</kw>
<msg timestamp="20220802 01:34:19.904" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:34:19.895" endtime="20220802 01:34:19.904"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:34:19.905" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:34:19.904" endtime="20220802 01:34:19.905"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:19.921" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:19.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:19.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:19.906" endtime="20220802 01:34:19.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:19.928" level="INFO"/>
<status status="PASS" starttime="20220802 01:34:19.927" endtime="20220802 01:34:19.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:19.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:19.928" endtime="20220802 01:34:19.929"/>
</kw>
<status status="PASS" starttime="20220802 01:34:19.906" endtime="20220802 01:34:19.929"/>
</kw>
<msg timestamp="20220802 01:34:19.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:19.906" endtime="20220802 01:34:19.929"/>
</kw>
<status status="PASS" starttime="20220802 01:34:19.905" endtime="20220802 01:34:19.929"/>
</kw>
<status status="PASS" starttime="20220802 01:34:19.905" endtime="20220802 01:34:19.929"/>
</kw>
<status status="PASS" starttime="20220802 01:34:19.895" endtime="20220802 01:34:19.930"/>
</kw>
<status status="PASS" starttime="20220802 01:34:19.895" endtime="20220802 01:34:19.930"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant create tenanttwo</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:19.931" level="INFO">Running command 'ozone tenant create tenanttwo 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:22.606" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:34:22.606" level="INFO">${output} = 2022-08-02 01:34:22,508 [main] INFO rpc.RpcClient: Creating Tenant: 'tenanttwo', with new volume: 'tenanttwo'
PERMISSION_DENIED User 'testuser2/scm@EXAMPLE.COM' or 'testuser2' is not an Ozone admin</msg>
<status status="PASS" starttime="20220802 01:34:19.930" endtime="20220802 01:34:22.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>PERMISSION_DENIED User 'testuser2/scm@EXAMPLE.COM' or 'testuser2' is not an Ozone admin</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:22.606" endtime="20220802 01:34:22.607"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:19.894" endtime="20220802 01:34:22.607"/>
</test>
<test id="s1-s2-s5-t17" name="SetSecret Failure with Regular User" line="106">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:22.611" level="INFO">Running command 'ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:25.339" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:34:25.339" level="INFO">${output} = USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</msg>
<status status="PASS" starttime="20220802 01:34:22.609" endtime="20220802 01:34:25.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:25.340" endtime="20220802 01:34:25.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:22.608" endtime="20220802 01:34:25.341"/>
</test>
<test id="s1-s2-s5-t18" name="Create Bucket 2 Success with somesecret1 via S3 API" line="110">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:25.345" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:25.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:25.870" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20220802 01:34:25.343" endtime="20220802 01:34:25.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:25.871" level="INFO">{
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20220802 01:34:25.871" endtime="20220802 01:34:25.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:25.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:25.871" endtime="20220802 01:34:25.872"/>
</kw>
<status status="PASS" starttime="20220802 01:34:25.343" endtime="20220802 01:34:25.872"/>
</kw>
<msg timestamp="20220802 01:34:25.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:25.343" endtime="20220802 01:34:25.873"/>
</kw>
<msg timestamp="20220802 01:34:25.873" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20220802 01:34:25.342" endtime="20220802 01:34:25.873"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:25.873" endtime="20220802 01:34:25.873"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:25.341" endtime="20220802 01:34:25.874"/>
</test>
<test id="s1-s2-s5-t19" name="Delete Bucket 2 Failure with somesecret2 via S3 API" line="114">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret2'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:25.878" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret2' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:26.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:26.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:25.876" endtime="20220802 01:34:26.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:26.286" level="INFO"/>
<status status="PASS" starttime="20220802 01:34:26.285" endtime="20220802 01:34:26.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:26.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:26.286" endtime="20220802 01:34:26.287"/>
</kw>
<status status="PASS" starttime="20220802 01:34:25.876" endtime="20220802 01:34:26.287"/>
</kw>
<msg timestamp="20220802 01:34:26.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:25.876" endtime="20220802 01:34:26.287"/>
</kw>
<status status="PASS" starttime="20220802 01:34:25.875" endtime="20220802 01:34:26.287"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:26.290" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:26.789" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:34:26.790" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220802 01:34:26.288" endtime="20220802 01:34:26.790"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220802 01:34:26.790" endtime="20220802 01:34:26.791"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:25.874" endtime="20220802 01:34:26.791"/>
</test>
<test id="s1-s2-s5-t20" name="Delete Bucket 2 Success with somesecret1 via S3 API" line="119">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:26.796" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:27.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:27.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:26.794" endtime="20220802 01:34:27.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:27.223" level="INFO"/>
<status status="PASS" starttime="20220802 01:34:27.223" endtime="20220802 01:34:27.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:27.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:27.223" endtime="20220802 01:34:27.224"/>
</kw>
<status status="PASS" starttime="20220802 01:34:26.793" endtime="20220802 01:34:27.224"/>
</kw>
<msg timestamp="20220802 01:34:27.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:26.793" endtime="20220802 01:34:27.225"/>
</kw>
<status status="PASS" starttime="20220802 01:34:26.793" endtime="20220802 01:34:27.225"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:27.228" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:27.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:27.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:27.226" endtime="20220802 01:34:27.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:27.733" level="INFO"/>
<status status="PASS" starttime="20220802 01:34:27.733" endtime="20220802 01:34:27.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:27.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:27.734" endtime="20220802 01:34:27.734"/>
</kw>
<status status="PASS" starttime="20220802 01:34:27.226" endtime="20220802 01:34:27.734"/>
</kw>
<msg timestamp="20220802 01:34:27.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:27.225" endtime="20220802 01:34:27.735"/>
</kw>
<msg timestamp="20220802 01:34:27.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:27.225" endtime="20220802 01:34:27.735"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:26.792" endtime="20220802 01:34:27.735"/>
</test>
<test id="s1-s2-s5-t21" name="Revoke User AccessId Success with Cluster Admin" line="123">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:27.741" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:27.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:27.744" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:34:27.739" endtime="20220802 01:34:27.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:27.745" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:34:27.744" endtime="20220802 01:34:27.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:27.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:27.745" endtime="20220802 01:34:27.746"/>
</kw>
<status status="PASS" starttime="20220802 01:34:27.738" endtime="20220802 01:34:27.746"/>
</kw>
<msg timestamp="20220802 01:34:27.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:27.738" endtime="20220802 01:34:27.746"/>
</kw>
<msg timestamp="20220802 01:34:27.747" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:34:27.738" endtime="20220802 01:34:27.747"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:34:27.747" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:34:27.747" endtime="20220802 01:34:27.747"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:27.750" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:27.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:27.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:27.749" endtime="20220802 01:34:27.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:27.758" level="INFO"/>
<status status="PASS" starttime="20220802 01:34:27.757" endtime="20220802 01:34:27.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:27.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:27.758" endtime="20220802 01:34:27.758"/>
</kw>
<status status="PASS" starttime="20220802 01:34:27.748" endtime="20220802 01:34:27.758"/>
</kw>
<msg timestamp="20220802 01:34:27.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:27.748" endtime="20220802 01:34:27.759"/>
</kw>
<status status="PASS" starttime="20220802 01:34:27.748" endtime="20220802 01:34:27.759"/>
</kw>
<status status="PASS" starttime="20220802 01:34:27.747" endtime="20220802 01:34:27.759"/>
</kw>
<status status="PASS" starttime="20220802 01:34:27.737" endtime="20220802 01:34:27.759"/>
</kw>
<status status="PASS" starttime="20220802 01:34:27.737" endtime="20220802 01:34:27.759"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user revoke 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:27.762" level="INFO">Running command 'ozone tenant --verbose user revoke 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:30.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:30.663" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220802 01:34:27.760" endtime="20220802 01:34:30.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:30.664" level="INFO">Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220802 01:34:30.663" endtime="20220802 01:34:30.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:30.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:30.664" endtime="20220802 01:34:30.665"/>
</kw>
<status status="PASS" starttime="20220802 01:34:27.760" endtime="20220802 01:34:30.665"/>
</kw>
<msg timestamp="20220802 01:34:30.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:27.760" endtime="20220802 01:34:30.665"/>
</kw>
<msg timestamp="20220802 01:34:30.666" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20220802 01:34:27.759" endtime="20220802 01:34:30.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Revoked accessId 'tenantone$testuser'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:30.666" endtime="20220802 01:34:30.666"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:27.736" endtime="20220802 01:34:30.667"/>
</test>
<test id="s1-s2-s5-t22" name="Create Bucket 3 Failure with Revoked AccessId via S3 API" line="128">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test3</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:30.670" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test3 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:31.157" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:34:31.158" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20220802 01:34:30.668" endtime="20220802 01:34:31.158"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220802 01:34:31.158" endtime="20220802 01:34:31.159"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:30.668" endtime="20220802 01:34:31.159"/>
</test>
<test id="s1-s2-s5-t23" name="Delete Tenant Success with Cluster Admin" line="132">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:31.164" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:33.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:33.848" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20220802 01:34:31.162" endtime="20220802 01:34:33.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:33.849" level="INFO">Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20220802 01:34:33.849" endtime="20220802 01:34:33.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:33.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:33.850" endtime="20220802 01:34:33.850"/>
</kw>
<status status="PASS" starttime="20220802 01:34:31.162" endtime="20220802 01:34:33.850"/>
</kw>
<msg timestamp="20220802 01:34:33.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:31.161" endtime="20220802 01:34:33.851"/>
</kw>
<msg timestamp="20220802 01:34:33.851" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20220802 01:34:31.161" endtime="20220802 01:34:33.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Deleted tenant 'tenantone'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:33.851" endtime="20220802 01:34:33.852"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:31.160" endtime="20220802 01:34:33.852"/>
</test>
<test id="s1-s2-s5-t24" name="Delete Volume Success with Cluster Admin" line="136">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:33.857" level="INFO">Running command 'ozone sh volume delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:37.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:37.445" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20220802 01:34:33.855" endtime="20220802 01:34:37.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:37.447" level="INFO">Volume tenantone is deleted</msg>
<status status="PASS" starttime="20220802 01:34:37.446" endtime="20220802 01:34:37.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:37.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:37.447" endtime="20220802 01:34:37.447"/>
</kw>
<status status="PASS" starttime="20220802 01:34:33.854" endtime="20220802 01:34:37.448"/>
</kw>
<msg timestamp="20220802 01:34:37.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:33.854" endtime="20220802 01:34:37.448"/>
</kw>
<msg timestamp="20220802 01:34:37.448" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20220802 01:34:33.853" endtime="20220802 01:34:37.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Volume tenantone is deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:37.449" endtime="20220802 01:34:37.449"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:33.853" endtime="20220802 01:34:37.449"/>
</test>
<test id="s1-s2-s5-t25" name="List Tenant Expect Empty Result" line="140">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:37.455" level="INFO">Running command 'ozone tenant list 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:40.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:40.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:37.453" endtime="20220802 01:34:40.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:40.283" level="INFO"/>
<status status="PASS" starttime="20220802 01:34:40.282" endtime="20220802 01:34:40.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:40.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:40.283" endtime="20220802 01:34:40.284"/>
</kw>
<status status="PASS" starttime="20220802 01:34:37.452" endtime="20220802 01:34:40.284"/>
</kw>
<msg timestamp="20220802 01:34:40.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:37.452" endtime="20220802 01:34:40.284"/>
</kw>
<msg timestamp="20220802 01:34:40.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:37.451" endtime="20220802 01:34:40.284"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tenantone</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:40.285" endtime="20220802 01:34:40.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:37.450" endtime="20220802 01:34:40.285"/>
</test>
<doc>Smoke test for ozone secure tenant commands</doc>
<status status="PASS" starttime="20220802 01:33:42.014" endtime="20220802 01:34:40.287"/>
</suite>
<suite id="s1-s2-s6" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s2-s6-t1" name="Token Test" line="82">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220802 01:34:40.296" endtime="20220802 01:34:40.297"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:40.302" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:40.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:40.305" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:34:40.299" endtime="20220802 01:34:40.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:40.306" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:34:40.306" endtime="20220802 01:34:40.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:40.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:40.306" endtime="20220802 01:34:40.307"/>
</kw>
<status status="PASS" starttime="20220802 01:34:40.299" endtime="20220802 01:34:40.307"/>
</kw>
<msg timestamp="20220802 01:34:40.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:40.299" endtime="20220802 01:34:40.308"/>
</kw>
<msg timestamp="20220802 01:34:40.308" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:34:40.298" endtime="20220802 01:34:40.308"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:34:40.310" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:34:40.308" endtime="20220802 01:34:40.310"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:40.314" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:40.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:40.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:40.312" endtime="20220802 01:34:40.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:40.322" level="INFO"/>
<status status="PASS" starttime="20220802 01:34:40.321" endtime="20220802 01:34:40.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:40.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:40.322" endtime="20220802 01:34:40.322"/>
</kw>
<status status="PASS" starttime="20220802 01:34:40.312" endtime="20220802 01:34:40.322"/>
</kw>
<msg timestamp="20220802 01:34:40.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:40.311" endtime="20220802 01:34:40.323"/>
</kw>
<status status="PASS" starttime="20220802 01:34:40.311" endtime="20220802 01:34:40.323"/>
</kw>
<status status="PASS" starttime="20220802 01:34:40.310" endtime="20220802 01:34:40.323"/>
</kw>
<status status="PASS" starttime="20220802 01:34:40.298" endtime="20220802 01:34:40.324"/>
</kw>
<status status="PASS" starttime="20220802 01:34:40.298" endtime="20220802 01:34:40.324"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh token get -t /tmp/ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:40.327" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:43.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:43.709" level="INFO">${output} = Successfully get token for service 172.18.0.8:9862
Kind: OzoneToken, Service: 172.18.0.8:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-08-02T01:3...</msg>
<status status="PASS" starttime="20220802 01:34:40.325" endtime="20220802 01:34:43.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:43.710" level="INFO">Successfully get token for service 172.18.0.8:9862
Kind: OzoneToken, Service: 172.18.0.8:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-08-02T01:34:43.620Z, maxDate=2022-08-09T01:34:43.620Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20220802 01:34:43.710" endtime="20220802 01:34:43.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:43.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:43.711" endtime="20220802 01:34:43.711"/>
</kw>
<status status="PASS" starttime="20220802 01:34:40.324" endtime="20220802 01:34:43.712"/>
</kw>
<msg timestamp="20220802 01:34:43.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:40.324" endtime="20220802 01:34:43.712"/>
</kw>
<status status="PASS" starttime="20220802 01:34:40.324" endtime="20220802 01:34:43.712"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>/tmp/ozone.token</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20220802 01:34:43.713" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 402 bytes.</msg>
<status status="PASS" starttime="20220802 01:34:43.713" endtime="20220802 01:34:43.713"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:43.716" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:43.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:43.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:43.714" endtime="20220802 01:34:43.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:43.721" level="INFO"/>
<status status="PASS" starttime="20220802 01:34:43.720" endtime="20220802 01:34:43.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:43.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:43.721" endtime="20220802 01:34:43.721"/>
</kw>
<status status="PASS" starttime="20220802 01:34:43.714" endtime="20220802 01:34:43.722"/>
</kw>
<msg timestamp="20220802 01:34:43.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:43.714" endtime="20220802 01:34:43.722"/>
</kw>
<status status="PASS" starttime="20220802 01:34:43.713" endtime="20220802 01:34:43.722"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>/tmp/ozone.token</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20220802 01:34:43.723" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20220802 01:34:43.722" endtime="20220802 01:34:43.723"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:43.726" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:47.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:47.170" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20220802 01:34:43.724" endtime="20220802 01:34:47.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:47.171" level="INFO">[ ]</msg>
<status status="PASS" starttime="20220802 01:34:47.170" endtime="20220802 01:34:47.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:47.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:47.171" endtime="20220802 01:34:47.172"/>
</kw>
<status status="PASS" starttime="20220802 01:34:43.724" endtime="20220802 01:34:47.173"/>
</kw>
<msg timestamp="20220802 01:34:47.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:43.723" endtime="20220802 01:34:47.173"/>
</kw>
<msg timestamp="20220802 01:34:47.173" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20220802 01:34:43.723" endtime="20220802 01:34:47.173"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:47.174" endtime="20220802 01:34:47.174"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20220802 01:34:47.174" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20220802 01:34:47.174" endtime="20220802 01:34:47.174"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:47.177" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:49.915" level="INFO">${rc} = 255</msg>
<msg timestamp="20220802 01:34:49.915" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220802 01:34:47.175" endtime="20220802 01:34:49.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:49.917" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220802 01:34:49.916" endtime="20220802 01:34:49.917"/>
</kw>
<msg timestamp="20220802 01:34:49.917" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20220802 01:34:47.174" endtime="20220802 01:34:49.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:49.917" endtime="20220802 01:34:49.918"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:49.922" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:49.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:49.925" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:34:49.920" endtime="20220802 01:34:49.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:49.926" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:34:49.925" endtime="20220802 01:34:49.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:49.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:49.926" endtime="20220802 01:34:49.926"/>
</kw>
<status status="PASS" starttime="20220802 01:34:49.919" endtime="20220802 01:34:49.927"/>
</kw>
<msg timestamp="20220802 01:34:49.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:49.919" endtime="20220802 01:34:49.927"/>
</kw>
<msg timestamp="20220802 01:34:49.927" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:34:49.918" endtime="20220802 01:34:49.927"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:34:49.928" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:34:49.928" endtime="20220802 01:34:49.928"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:49.932" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:49.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:49.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:34:49.930" endtime="20220802 01:34:49.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:49.939" level="INFO"/>
<status status="PASS" starttime="20220802 01:34:49.938" endtime="20220802 01:34:49.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:49.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:49.939" endtime="20220802 01:34:49.939"/>
</kw>
<status status="PASS" starttime="20220802 01:34:49.929" endtime="20220802 01:34:49.939"/>
</kw>
<msg timestamp="20220802 01:34:49.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:49.929" endtime="20220802 01:34:49.940"/>
</kw>
<status status="PASS" starttime="20220802 01:34:49.929" endtime="20220802 01:34:49.940"/>
</kw>
<status status="PASS" starttime="20220802 01:34:49.928" endtime="20220802 01:34:49.940"/>
</kw>
<status status="PASS" starttime="20220802 01:34:49.918" endtime="20220802 01:34:49.940"/>
</kw>
<status status="PASS" starttime="20220802 01:34:49.918" endtime="20220802 01:34:49.941"/>
</kw>
<status status="PASS" starttime="20220802 01:34:40.297" endtime="20220802 01:34:49.941"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:49.944" level="INFO">Running command 'ozone sh token print 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:51.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:51.644" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.8:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-08-02T01:34:43.620Z, maxDate=2022-08-09T01:34:43.620Z, sequen...</msg>
<status status="PASS" starttime="20220802 01:34:49.942" endtime="20220802 01:34:51.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:51.645" level="INFO">Kind: OzoneToken, Service: 172.18.0.8:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-08-02T01:34:43.620Z, maxDate=2022-08-09T01:34:43.620Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)</msg>
<status status="PASS" starttime="20220802 01:34:51.644" endtime="20220802 01:34:51.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:51.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:51.645" endtime="20220802 01:34:51.646"/>
</kw>
<status status="PASS" starttime="20220802 01:34:49.942" endtime="20220802 01:34:51.646"/>
</kw>
<msg timestamp="20220802 01:34:51.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:49.941" endtime="20220802 01:34:51.647"/>
</kw>
<msg timestamp="20220802 01:34:51.647" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.8:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2022-08-02T01:34:43.620Z, maxDate=2022-08-09T01:34:43.620Z, sequen...</msg>
<status status="PASS" starttime="20220802 01:34:49.941" endtime="20220802 01:34:51.647"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220802 01:34:51.647" level="INFO">Length is 311</msg>
<status status="PASS" starttime="20220802 01:34:51.647" endtime="20220802 01:34:51.647"/>
</kw>
<status status="PASS" starttime="20220802 01:34:49.941" endtime="20220802 01:34:51.647"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:51.651" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:54.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:54.790" level="INFO">${output} = Token renewed successfully, expiry time: 2022-08-03T01:34:54.736Z.</msg>
<status status="PASS" starttime="20220802 01:34:51.649" endtime="20220802 01:34:54.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:54.792" level="INFO">Token renewed successfully, expiry time: 2022-08-03T01:34:54.736Z.</msg>
<status status="PASS" starttime="20220802 01:34:54.791" endtime="20220802 01:34:54.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:54.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:54.792" endtime="20220802 01:34:54.792"/>
</kw>
<status status="PASS" starttime="20220802 01:34:51.649" endtime="20220802 01:34:54.793"/>
</kw>
<msg timestamp="20220802 01:34:54.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:51.648" endtime="20220802 01:34:54.793"/>
</kw>
<msg timestamp="20220802 01:34:54.794" level="INFO">${output} = Token renewed successfully, expiry time: 2022-08-03T01:34:54.736Z.</msg>
<status status="PASS" starttime="20220802 01:34:51.648" endtime="20220802 01:34:54.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:54.794" endtime="20220802 01:34:54.794"/>
</kw>
<status status="PASS" starttime="20220802 01:34:51.648" endtime="20220802 01:34:54.794"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:54.798" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:34:58.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:34:58.146" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20220802 01:34:54.796" endtime="20220802 01:34:58.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:34:58.147" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20220802 01:34:58.147" endtime="20220802 01:34:58.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:34:58.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:34:58.148" endtime="20220802 01:34:58.148"/>
</kw>
<status status="PASS" starttime="20220802 01:34:54.795" endtime="20220802 01:34:58.148"/>
</kw>
<msg timestamp="20220802 01:34:58.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:54.795" endtime="20220802 01:34:58.149"/>
</kw>
<msg timestamp="20220802 01:34:58.149" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20220802 01:34:54.795" endtime="20220802 01:34:58.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:34:58.149" endtime="20220802 01:34:58.150"/>
</kw>
<status status="PASS" starttime="20220802 01:34:54.794" endtime="20220802 01:34:58.150"/>
</kw>
<status status="PASS" starttime="20220802 01:34:40.297" endtime="20220802 01:34:58.150"/>
</kw>
<status status="PASS" starttime="20220802 01:34:40.297" endtime="20220802 01:34:58.150"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:34:58.153" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:35:00.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:35:00.241" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220802 01:34:58.151" endtime="20220802 01:35:00.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:35:00.242" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220802 01:35:00.241" endtime="20220802 01:35:00.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:35:00.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:35:00.242" endtime="20220802 01:35:00.243"/>
</kw>
<status status="PASS" starttime="20220802 01:34:58.151" endtime="20220802 01:35:00.243"/>
</kw>
<msg timestamp="20220802 01:35:00.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:34:58.151" endtime="20220802 01:35:00.243"/>
</kw>
<msg timestamp="20220802 01:35:00.244" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20220802 01:34:58.150" endtime="20220802 01:35:00.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220802 01:35:00.244" endtime="20220802 01:35:00.244"/>
</kw>
<status status="PASS" starttime="20220802 01:34:58.150" endtime="20220802 01:35:00.244"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220802 01:34:40.296" endtime="20220802 01:35:00.244"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20220802 01:34:40.290" endtime="20220802 01:35:00.245"/>
</suite>
<status status="FAIL" starttime="20220802 01:25:00.087" endtime="20220802 01:35:00.248"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:08:54.830" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:08:54.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:08:54.834" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220802 01:08:54.827" endtime="20220802 01:08:54.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:08:54.835" level="INFO">scm</msg>
<status status="PASS" starttime="20220802 01:08:54.834" endtime="20220802 01:08:54.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:08:54.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:08:54.835" endtime="20220802 01:08:54.835"/>
</kw>
<status status="PASS" starttime="20220802 01:08:54.826" endtime="20220802 01:08:54.836"/>
</kw>
<msg timestamp="20220802 01:08:54.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:08:54.826" endtime="20220802 01:08:54.837"/>
</kw>
<msg timestamp="20220802 01:08:54.837" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220802 01:08:54.826" endtime="20220802 01:08:54.837"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220802 01:08:54.838" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220802 01:08:54.837" endtime="20220802 01:08:54.838"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220802 01:08:54.841" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220802 01:08:54.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20220802 01:08:54.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220802 01:08:54.839" endtime="20220802 01:08:54.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220802 01:08:54.859" level="INFO"/>
<status status="PASS" starttime="20220802 01:08:54.858" endtime="20220802 01:08:54.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220802 01:08:54.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220802 01:08:54.859" endtime="20220802 01:08:54.863"/>
</kw>
<status status="PASS" starttime="20220802 01:08:54.839" endtime="20220802 01:08:54.863"/>
</kw>
<msg timestamp="20220802 01:08:54.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220802 01:08:54.839" endtime="20220802 01:08:54.863"/>
</kw>
<status status="PASS" starttime="20220802 01:08:54.838" endtime="20220802 01:08:54.864"/>
</kw>
<status status="PASS" starttime="20220802 01:08:54.838" endtime="20220802 01:08:54.864"/>
</kw>
<status status="PASS" starttime="20220802 01:08:54.825" endtime="20220802 01:08:54.864"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220802 01:08:54.824" endtime="20220802 01:08:54.864"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220802 01:08:54.761" endtime="20220802 01:08:54.867"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1555057"/>
</suite>
<statistics>
<total>
<stat pass="73" fail="2" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="73" fail="2" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="31" fail="0" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="16" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s6" name="Single Node">ozonesecure.Basic.Single Node</stat>
<stat pass="41" fail="2" skip="0" id="s1-s2" name="Security">ozonesecure.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Admin-Cert">ozonesecure.Security.Admin-Cert</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="Bucket-Encryption">ozonesecure.Security.Bucket-Encryption</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2-s3" name="Ozone-Secure-Fs">ozonesecure.Security.Ozone-Secure-Fs</stat>
<stat pass="1" fail="2" skip="0" id="s1-s2-s4" name="Ozone-Secure-S3">ozonesecure.Security.Ozone-Secure-S3</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2-s5" name="Ozone-Secure-Tenant">ozonesecure.Security.Ozone-Secure-Tenant</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Ozone-Secure-Token">ozonesecure.Security.Ozone-Secure-Token</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
